{"version":3,"sources":["js/postprocessing/UnrealBloomPass.js"],"names":["THREE","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","undefined","Vector2","x","y","clearColor","Color","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","WebGLRenderTarget","texture","name","generateMipmaps","i","renderTarget","push","LuminosityHighPassShader","console","error","highPassShader","highPassUniforms","UniformsUtils","clone","uniforms","value","materialHighPassFilter","ShaderMaterial","vertexShader","fragmentShader","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomFactors","bloomTintColors","Vector3","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","enabled","needsSwap","oldClearColor","oldClearAlpha","camera","OrthographicCamera","scene","Scene","basic","MeshBasicMaterial","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","prototype","Object","assign","create","constructor","dispose","length","setSize","width","height","render","renderer","writeBuffer","readBuffer","delta","maskActive","copy","getClearColor","getClearAlpha","oldAutoClear","autoClear","setClearColor","context","disable","STENCIL_TEST","renderToScreen","material","map","inputRenderTarget","BlurDirectionX","BlurDirectionY","enable","kernelRadius"],"mappings":"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","file":"UnrealBloomPass.dae32776.map","sourceRoot":"..","sourcesContent":["/**\r\n * @author spidersharma / http://eduperiment.com/\r\n *\r\n * Inspired from Unreal Engine\r\n * https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\r\n */\r\nTHREE.UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\r\n\r\n\tTHREE.Pass.call( this );\r\n\r\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\r\n\tthis.radius = radius;\r\n\tthis.threshold = threshold;\r\n\tthis.resolution = ( resolution !== undefined ) ? new THREE.Vector2( resolution.x, resolution.y ) : new THREE.Vector2( 256, 256 );\r\n\r\n\t// create color only once here, reuse it later inside the render function\r\n\tthis.clearColor = new THREE.Color( 0, 0, 0 );\r\n\r\n\t// render targets\r\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat };\r\n\tthis.renderTargetsHorizontal = [];\r\n\tthis.renderTargetsVertical = [];\r\n\tthis.nMips = 5;\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tthis.renderTargetBright = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\r\n\tthis.renderTargetBright.texture.generateMipmaps = false;\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tvar renderTarget = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTarget.texture.name = \"UnrealBloomPass.h\" + i;\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsHorizontal.push( renderTarget );\r\n\r\n\t\tvar renderTarget = new THREE.WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTarget.texture.name = \"UnrealBloomPass.v\" + i;\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsVertical.push( renderTarget );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// luminosity high pass material\r\n\r\n\tif ( THREE.LuminosityHighPassShader === undefined )\r\n\t\tconsole.error( \"THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader\" );\r\n\r\n\tvar highPassShader = THREE.LuminosityHighPassShader;\r\n\tthis.highPassUniforms = THREE.UniformsUtils.clone( highPassShader.uniforms );\r\n\r\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\r\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\r\n\r\n\tthis.materialHighPassFilter = new THREE.ShaderMaterial( {\r\n\t\tuniforms: this.highPassUniforms,\r\n\t\tvertexShader: highPassShader.vertexShader,\r\n\t\tfragmentShader: highPassShader.fragmentShader,\r\n\t\tdefines: {}\r\n\t} );\r\n\r\n\t// Gaussian Blur Materials\r\n\tthis.separableBlurMaterials = [];\r\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\r\n\r\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// Composite material\r\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\r\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\r\n\tthis.compositeMaterial.needsUpdate = true;\r\n\r\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\r\n\tthis.bloomTintColors = [ new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ),\r\n\t\t\t\t\t\t\t new THREE.Vector3( 1, 1, 1 ), new THREE.Vector3( 1, 1, 1 ) ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t// copy material\r\n\tif ( THREE.CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\r\n\r\n\t}\r\n\r\n\tvar copyShader = THREE.CopyShader;\r\n\r\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\r\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\r\n\r\n\tthis.materialCopy = new THREE.ShaderMaterial( {\r\n\t\tuniforms: this.copyUniforms,\r\n\t\tvertexShader: copyShader.vertexShader,\r\n\t\tfragmentShader: copyShader.fragmentShader,\r\n\t\tblending: THREE.AdditiveBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true\r\n\t} );\r\n\r\n\tthis.enabled = true;\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.oldClearColor = new THREE.Color();\r\n\tthis.oldClearAlpha = 1;\r\n\r\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tthis.scene = new THREE.Scene();\r\n\r\n\tthis.basic = new THREE.MeshBasicMaterial();\r\n\r\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\r\n\tthis.quad.frustumCulled = false; // Avoid getting clipped\r\n\tthis.scene.add( this.quad );\r\n\r\n};\r\n\r\nTHREE.UnrealBloomPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\r\n\r\n\tconstructor: THREE.UnrealBloomPass,\r\n\r\n\tdispose: function () {\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTargetBright.dispose();\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tvar resx = Math.round( width / 2 );\r\n\t\tvar resy = Math.round( height / 2 );\r\n\r\n\t\tthis.renderTargetBright.setSize( resx, resy );\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\r\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new THREE.Vector2( resx, resy );\r\n\r\n\t\t\tresx = Math.round( resx / 2 );\r\n\t\t\tresy = Math.round( resy / 2 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\r\n\r\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\r\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\trenderer.setClearColor( this.clearColor, 0 );\r\n\r\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\r\n\r\n\t\t// Render input to screen\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\tthis.quad.material = this.basic;\r\n\t\t\tthis.basic.map = readBuffer.texture;\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, undefined, true );\r\n\r\n\t\t}\r\n\r\n\t\t// 1. Extract Bright Areas\r\n\r\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\r\n\t\tthis.quad.material = this.materialHighPassFilter;\r\n\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetBright, true );\r\n\r\n\t\t// 2. Blur All the mips progressively\r\n\r\n\t\tvar inputRenderTarget = this.renderTargetBright;\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.quad.material = this.separableBlurMaterials[ i ];\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionX;\r\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetsHorizontal[ i ], true );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = THREE.UnrealBloomPass.BlurDirectionY;\r\n\t\t\trenderer.render( this.scene, this.camera, this.renderTargetsVertical[ i ], true );\r\n\r\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\r\n\r\n\t\t}\r\n\r\n\t\t// Composite All the mips\r\n\r\n\t\tthis.quad.material = this.compositeMaterial;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t\trenderer.render( this.scene, this.camera, this.renderTargetsHorizontal[ 0 ], true );\r\n\r\n\t\t// Blend it additively over the input texture\r\n\r\n\t\tthis.quad.material = this.materialCopy;\r\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\r\n\r\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\r\n\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, undefined, false );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( this.scene, this.camera, readBuffer, false );\r\n\r\n\t\t}\r\n\r\n\t\t// Restore renderer settings\r\n\r\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t},\r\n\r\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\r\n\r\n\t\treturn new THREE.ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\r\n\t\t\t\t\"SIGMA\": kernelRadius\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"colorTexture\": { value: null },\r\n\t\t\t\t\"texSize\": { value: new THREE.Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"direction\": { value: new THREE.Vector2( 0.5, 0.5 ) }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"#include <common>\\\r\n\t\t\t\tvarying vec2 vUv;\\n\\\r\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\r\n\t\t\t\tuniform vec2 texSize;\\\r\n\t\t\t\tuniform vec2 direction;\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\r\n\t\t\t\t}\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\r\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\r\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\r\n\t\t\t\t\t\tfloat x = float(i);\\\r\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\r\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\r\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\r\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\r\n\t\t\t\t\t}\\\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tgetCompositeMaterial: function ( nMips ) {\r\n\r\n\t\treturn new THREE.ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"NUM_MIPS\": nMips\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"blurTexture1\": { value: null },\r\n\t\t\t\t\"blurTexture2\": { value: null },\r\n\t\t\t\t\"blurTexture3\": { value: null },\r\n\t\t\t\t\"blurTexture4\": { value: null },\r\n\t\t\t\t\"blurTexture5\": { value: null },\r\n\t\t\t\t\"dirtTexture\": { value: null },\r\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\r\n\t\t\t\t\"bloomFactors\": { value: null },\r\n\t\t\t\t\"bloomTintColors\": { value: null },\r\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"varying vec2 vUv;\\\r\n\t\t\t\tuniform sampler2D blurTexture1;\\\r\n\t\t\t\tuniform sampler2D blurTexture2;\\\r\n\t\t\t\tuniform sampler2D blurTexture3;\\\r\n\t\t\t\tuniform sampler2D blurTexture4;\\\r\n\t\t\t\tuniform sampler2D blurTexture5;\\\r\n\t\t\t\tuniform sampler2D dirtTexture;\\\r\n\t\t\t\tuniform float bloomStrength;\\\r\n\t\t\t\tuniform float bloomRadius;\\\r\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\r\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\r\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\r\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\r\n\t\t\t\t}\\\r\n\t\t\t\t\\\r\n\t\t\t\tvoid main() {\\\r\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.UnrealBloomPass.BlurDirectionX = new THREE.Vector2( 1.0, 0.0 );\r\nTHREE.UnrealBloomPass.BlurDirectionY = new THREE.Vector2( 0.0, 1.0 );\r\n"]}