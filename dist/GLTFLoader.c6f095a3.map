{"version":3,"sources":["js/loaders/GLTFLoader.js"],"names":["THREE","GLTFLoader","manager","undefined","DefaultLoadingManager","dracoLoader","prototype","constructor","crossOrigin","load","url","onLoad","onProgress","onError","scope","resourcePath","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","data","parse","gltf","setCrossOrigin","value","setResourcePath","setDRACOLoader","content","extensions","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","indexOf","warn","parser","GLTFParser","scene","scenes","cameras","animations","glTF","userData","addUnknownExtensionsToUserData","GLTFRegistry","objects","get","key","add","object","remove","removeAll","DDSLoader","name","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","material","MeshBasicMaterial","extendParams","materialParams","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_BUFFER_NAME","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","DRACOLoader","getDecoderModule","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","scale","repeat","texCoord","needsUpdate","specularGlossinessParams","ShaderMaterial","params","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","refreshUniforms","renderer","camera","group","diffuse","copy","multiplyScalar","uvScaleMap","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","call","Object","create","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s0","s1","s2","s3","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","WEBGL_TYPE","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","Texture","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipMapNearestFilter","LinearMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_SIDES","BackSide","FrontSide","WEBGL_DEPTH_FUNCS","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","WEBGL_BLEND_EQUATIONS","AddEquation","SubtractEquation","ReverseSubtractEquation","WEBGL_BLEND_FUNCS","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","WEBGL_TYPE_SIZES","POSITION","NORMAL","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateSmooth","InterpolateLinear","STEP","InterpolateDiscrete","STATES_ENABLES","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","createDefaultMaterial","MeshStandardMaterial","depthTest","side","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","accessor","cloneBufferAttribute","normal","morphPositions","morphNormals","positionAttribute","j","jl","count","setXYZ","getX","getY","getZ","normalAttribute","morphAttributes","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isPrimitiveEqual","a","b","dracoExtA","dracoExtB","isObjectEqual","indices","keys","isArrayEqual","getCachedGeometry","cache","newPrimitive","cached","promise","getCachedCombinedGeometry","geometries","baseGeometries","getCachedMultiPassGeometry","primitives","baseGeometry","isInterleavedBufferAttribute","itemSize","getW","BufferAttribute","isMultiPassGeometry","primitive0","targets0","mode","options","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","textureLoader","TextureLoader","fileLoader","markDefs","getMultiDependencies","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","results","bind","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","materialIndex","materialDef","materials","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","y","encoding","sRGBEncoding","addPrimitiveAttributes","primitiveDef","assignAttributeAccessor","addAttribute","gltfAttributeName","threeAttributeName","setIndex","loadGeometries","isMultiPass","originalPrimitives","createDracoPrimitive","geometryPromise","BufferGeometry","pendingIndices","addGroup","BufferGeometryUtils","mergeBufferGeometries","meshIndex","originalMaterials","isMultiMaterial","groups","SkinnedMesh","Mesh","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexColors","VertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","Group","cameraIndex","cameraDef","PerspectiveCamera","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","track","AnimationUtils","arraySlice","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","Bone","instanceNum","children","light","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","Skeleton","matrixWorld","child","sceneIndex","sceneDef","Scene","nodeIds"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAQAA,KAAK,CAACC,UAAN,GAAqB,YAAY;AAEhC,WAASA,UAAT,CAAqBC,OAArB,EAA+B;AAE9B,SAAKA,OAAL,GAAiBA,OAAO,KAAKC,SAAd,GAA4BD,OAA5B,GAAsCF,KAAK,CAACI,qBAA3D;AACA,SAAKC,WAAL,GAAmB,IAAnB;AAEA;;AAEDJ,EAAAA,UAAU,CAACK,SAAX,GAAuB;AAEtBC,IAAAA,WAAW,EAAEN,UAFS;AAItBO,IAAAA,WAAW,EAAE,WAJS;AAMtBC,IAAAA,IAAI,EAAE,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;AAEnD,UAAIC,KAAK,GAAG,IAAZ;AAEA,UAAIC,YAAJ;;AAEA,UAAK,KAAKA,YAAL,KAAsBZ,SAA3B,EAAuC;AAEtCY,QAAAA,YAAY,GAAG,KAAKA,YAApB;AAEA,OAJD,MAIO,IAAK,KAAKC,IAAL,KAAcb,SAAnB,EAA+B;AAErCY,QAAAA,YAAY,GAAG,KAAKC,IAApB;AAEA,OAJM,MAIA;AAEND,QAAAA,YAAY,GAAGf,KAAK,CAACiB,WAAN,CAAkBC,cAAlB,CAAkCR,GAAlC,CAAf;AAEA,OAlBkD,CAoBnD;AACA;AACA;;;AACAI,MAAAA,KAAK,CAACZ,OAAN,CAAciB,SAAd,CAAyBT,GAAzB;;AAEA,UAAIU,QAAQ,GAAG,SAAXA,QAAW,CAAWC,CAAX,EAAe;AAE7B,YAAKR,OAAL,EAAe;AAEdA,UAAAA,OAAO,CAAEQ,CAAF,CAAP;AAEA,SAJD,MAIO;AAENC,UAAAA,OAAO,CAACC,KAAR,CAAeF,CAAf;AAEA;;AAEDP,QAAAA,KAAK,CAACZ,OAAN,CAAcsB,SAAd,CAAyBd,GAAzB;AACAI,QAAAA,KAAK,CAACZ,OAAN,CAAcuB,OAAd,CAAuBf,GAAvB;AAEA,OAfD;;AAiBA,UAAIgB,MAAM,GAAG,IAAI1B,KAAK,CAAC2B,UAAV,CAAsBb,KAAK,CAACZ,OAA5B,CAAb;AAEAwB,MAAAA,MAAM,CAACE,OAAP,CAAgB,KAAKZ,IAArB;AACAU,MAAAA,MAAM,CAACG,eAAP,CAAwB,aAAxB;AAEAH,MAAAA,MAAM,CAACjB,IAAP,CAAaC,GAAb,EAAkB,UAAWoB,IAAX,EAAkB;AAEnC,YAAI;AAEHhB,UAAAA,KAAK,CAACiB,KAAN,CAAaD,IAAb,EAAmBf,YAAnB,EAAiC,UAAWiB,IAAX,EAAkB;AAElDrB,YAAAA,MAAM,CAAEqB,IAAF,CAAN;AAEAlB,YAAAA,KAAK,CAACZ,OAAN,CAAcuB,OAAd,CAAuBf,GAAvB;AAEA,WAND,EAMGU,QANH;AAQA,SAVD,CAUE,OAAQC,CAAR,EAAY;AAEbD,UAAAA,QAAQ,CAAEC,CAAF,CAAR;AAEA;AAED,OAlBD,EAkBGT,UAlBH,EAkBeQ,QAlBf;AAoBA,KAzEqB;AA2EtBa,IAAAA,cAAc,EAAE,wBAAWC,KAAX,EAAmB;AAElC,WAAK1B,WAAL,GAAmB0B,KAAnB;AACA,aAAO,IAAP;AAEA,KAhFqB;AAkFtBN,IAAAA,OAAO,EAAE,iBAAWM,KAAX,EAAmB;AAE3B,WAAKlB,IAAL,GAAYkB,KAAZ;AACA,aAAO,IAAP;AAEA,KAvFqB;AAyFtBC,IAAAA,eAAe,EAAE,yBAAWD,KAAX,EAAmB;AAEnC,WAAKnB,YAAL,GAAoBmB,KAApB;AACA,aAAO,IAAP;AAEA,KA9FqB;AAgGtBE,IAAAA,cAAc,EAAE,wBAAW/B,WAAX,EAAyB;AAExC,WAAKA,WAAL,GAAmBA,WAAnB;AACA,aAAO,IAAP;AAEA,KArGqB;AAuGtB0B,IAAAA,KAAK,EAAE,eAAWD,IAAX,EAAiBd,IAAjB,EAAuBL,MAAvB,EAA+BE,OAA/B,EAAyC;AAE/C,UAAIwB,OAAJ;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAK,OAAOR,IAAP,KAAgB,QAArB,EAAgC;AAE/BO,QAAAA,OAAO,GAAGP,IAAV;AAEA,OAJD,MAIO;AAEN,YAAIS,KAAK,GAAGvC,KAAK,CAACiB,WAAN,CAAkBuB,UAAlB,CAA8B,IAAIC,UAAJ,CAAgBX,IAAhB,EAAsB,CAAtB,EAAyB,CAAzB,CAA9B,CAAZ;;AAEA,YAAKS,KAAK,KAAKG,6BAAf,EAA+C;AAE9C,cAAI;AAEHJ,YAAAA,UAAU,CAAEK,UAAU,CAACC,eAAb,CAAV,GAA2C,IAAIC,mBAAJ,CAAyBf,IAAzB,CAA3C;AAEA,WAJD,CAIE,OAAQP,KAAR,EAAgB;AAEjB,gBAAKV,OAAL,EAAeA,OAAO,CAAEU,KAAF,CAAP;AACf;AAEA;;AAEDc,UAAAA,OAAO,GAAGC,UAAU,CAAEK,UAAU,CAACC,eAAb,CAAV,CAAyCP,OAAnD;AAEA,SAfD,MAeO;AAENA,UAAAA,OAAO,GAAGrC,KAAK,CAACiB,WAAN,CAAkBuB,UAAlB,CAA8B,IAAIC,UAAJ,CAAgBX,IAAhB,CAA9B,CAAV;AAEA;AAED;;AAED,UAAIgB,IAAI,GAAGC,IAAI,CAAChB,KAAL,CAAYM,OAAZ,CAAX;;AAEA,UAAKS,IAAI,CAACE,KAAL,KAAe7C,SAAf,IAA4B2C,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAoB,CAApB,IAA0B,CAA3D,EAA+D;AAE9D,YAAKpC,OAAL,EAAeA,OAAO,CAAE,IAAIqC,KAAJ,CAAW,uGAAX,CAAF,CAAP;AACf;AAEA;;AAED,UAAKJ,IAAI,CAACK,cAAV,EAA2B;AAE1B,aAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGN,IAAI,CAACK,cAAL,CAAoBE,MAAzC,EAAiD,EAAGD,CAApD,EAAwD;AAEvD,cAAIE,aAAa,GAAGR,IAAI,CAACK,cAAL,CAAqBC,CAArB,CAApB;AACA,cAAIG,kBAAkB,GAAGT,IAAI,CAACS,kBAAL,IAA2B,EAApD;;AAEA,kBAASD,aAAT;AAEC,iBAAKX,UAAU,CAACa,mBAAhB;AACClB,cAAAA,UAAU,CAAEgB,aAAF,CAAV,GAA8B,IAAIG,mBAAJ,CAAyBX,IAAzB,CAA9B;AACA;;AAED,iBAAKH,UAAU,CAACe,mBAAhB;AACCpB,cAAAA,UAAU,CAAEgB,aAAF,CAAV,GAA8B,IAAIK,2BAAJ,CAAiCb,IAAjC,CAA9B;AACA;;AAED,iBAAKH,UAAU,CAACiB,qCAAhB;AACCtB,cAAAA,UAAU,CAAEgB,aAAF,CAAV,GAA8B,IAAIO,2CAAJ,CAAiDf,IAAjD,CAA9B;AACA;;AAED,iBAAKH,UAAU,CAACmB,0BAAhB;AACCxB,cAAAA,UAAU,CAAEgB,aAAF,CAAV,GAA8B,IAAIS,iCAAJ,CAAuCjB,IAAvC,EAA6C,KAAKzC,WAAlD,CAA9B;AACA;;AAED,iBAAKsC,UAAU,CAACqB,gBAAhB;AACC1B,cAAAA,UAAU,CAAEK,UAAU,CAACqB,gBAAb,CAAV,GAA4C,IAAIC,uBAAJ,CAA6BnB,IAA7B,CAA5C;AACA;;AAED,iBAAKH,UAAU,CAACuB,qBAAhB;AACC5B,cAAAA,UAAU,CAAEK,UAAU,CAACuB,qBAAb,CAAV,GAAiD,IAAIC,6BAAJ,CAAmCrB,IAAnC,CAAjD;AACA;;AAED;AAEC,kBAAKS,kBAAkB,CAACa,OAAnB,CAA4Bd,aAA5B,KAA+C,CAApD,EAAwD;AAEvDhC,gBAAAA,OAAO,CAAC+C,IAAR,CAAc,0CAA0Cf,aAA1C,GAA0D,IAAxE;AAEA;;AAhCH;AAoCA;AAED;;AAED,UAAIgB,MAAM,GAAG,IAAIC,UAAJ,CAAgBzB,IAAhB,EAAsBR,UAAtB,EAAkC;AAE9CtB,QAAAA,IAAI,EAAEA,IAAI,IAAI,KAAKD,YAAb,IAA6B,EAFW;AAG9CP,QAAAA,WAAW,EAAE,KAAKA,WAH4B;AAI9CN,QAAAA,OAAO,EAAE,KAAKA;AAJgC,OAAlC,CAAb;AAQAoE,MAAAA,MAAM,CAACvC,KAAP,CAAc,UAAWyC,KAAX,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmCC,UAAnC,EAA+C7B,IAA/C,EAAsD;AAEnE,YAAI8B,IAAI,GAAG;AACVJ,UAAAA,KAAK,EAAEA,KADG;AAEVC,UAAAA,MAAM,EAAEA,MAFE;AAGVC,UAAAA,OAAO,EAAEA,OAHC;AAIVC,UAAAA,UAAU,EAAEA,UAJF;AAKV3B,UAAAA,KAAK,EAAEF,IAAI,CAACE,KALF;AAMVsB,UAAAA,MAAM,EAAEA,MANE;AAOVO,UAAAA,QAAQ,EAAE;AAPA,SAAX;AAUAC,QAAAA,8BAA8B,CAAExC,UAAF,EAAcsC,IAAd,EAAoB9B,IAApB,CAA9B;AAEAnC,QAAAA,MAAM,CAAEiE,IAAF,CAAN;AAEA,OAhBD,EAgBG/D,OAhBH;AAkBA;AA7NqB,GAAvB;AAiOA;;AAEA,WAASkE,YAAT,GAAwB;AAEvB,QAAIC,OAAO,GAAG,EAAd;AAEA,WAAO;AAENC,MAAAA,GAAG,EAAE,aAAWC,GAAX,EAAiB;AAErB,eAAOF,OAAO,CAAEE,GAAF,CAAd;AAEA,OANK;AAQNC,MAAAA,GAAG,EAAE,aAAWD,GAAX,EAAgBE,MAAhB,EAAyB;AAE7BJ,QAAAA,OAAO,CAAEE,GAAF,CAAP,GAAiBE,MAAjB;AAEA,OAZK;AAcNC,MAAAA,MAAM,EAAE,gBAAWH,GAAX,EAAiB;AAExB,eAAOF,OAAO,CAAEE,GAAF,CAAd;AAEA,OAlBK;AAoBNI,MAAAA,SAAS,EAAE,qBAAY;AAEtBN,QAAAA,OAAO,GAAG,EAAV;AAEA;AAxBK,KAAP;AA4BA;AAED;;AACA;;AACA;;;AAEA,MAAIrC,UAAU,GAAG;AAChBC,IAAAA,eAAe,EAAE,iBADD;AAEhBkB,IAAAA,0BAA0B,EAAE,4BAFZ;AAGhBN,IAAAA,mBAAmB,EAAE,qBAHL;AAIhBI,IAAAA,qCAAqC,EAAE,qCAJvB;AAKhBF,IAAAA,mBAAmB,EAAE,qBALL;AAMhBQ,IAAAA,qBAAqB,EAAE,uBANP;AAOhBF,IAAAA,gBAAgB,EAAE;AAPF,GAAjB;AAUA;;;;;;;;AAOA,WAASC,uBAAT,GAAmC;AAElC,QAAK,CAAEjE,KAAK,CAACuF,SAAb,EAAyB;AAExB,YAAM,IAAIrC,KAAJ,CAAW,qFAAX,CAAN;AAEA;;AAED,SAAKsC,IAAL,GAAY7C,UAAU,CAACqB,gBAAvB;AACA,SAAKyB,SAAL,GAAiB,IAAIzF,KAAK,CAACuF,SAAV,EAAjB;AAEA;AAED;;;;;;;AAKA,WAAS9B,mBAAT,CAA8BX,IAA9B,EAAqC;AAEpC,SAAK0C,IAAL,GAAY7C,UAAU,CAACa,mBAAvB;AAEA,QAAIkC,SAAS,GAAK5C,IAAI,CAACR,UAAL,IAAmBQ,IAAI,CAACR,UAAL,CAAiBK,UAAU,CAACa,mBAA5B,CAArB,IAA4E,EAA5F;AACA,SAAKmC,SAAL,GAAiBD,SAAS,CAACE,MAAV,IAAoB,EAArC;AAEA;;AAEDnC,EAAAA,mBAAmB,CAACnD,SAApB,CAA8BuF,SAA9B,GAA0C,UAAWC,UAAX,EAAwB;AAEjE,QAAIC,QAAQ,GAAG,KAAKJ,SAAL,CAAgBG,UAAhB,CAAf;AACA,QAAIE,SAAJ;AAEA,QAAIC,KAAK,GAAG,IAAIjG,KAAK,CAACkG,KAAV,CAAiB,QAAjB,CAAZ;AACA,QAAKH,QAAQ,CAACE,KAAT,KAAmB9F,SAAxB,EAAoC8F,KAAK,CAACE,SAAN,CAAiBJ,QAAQ,CAACE,KAA1B;AAEpC,QAAIG,KAAK,GAAGL,QAAQ,CAACK,KAAT,KAAmBjG,SAAnB,GAA+B4F,QAAQ,CAACK,KAAxC,GAAgD,CAA5D;;AAEA,YAASL,QAAQ,CAACM,IAAlB;AAEC,WAAK,aAAL;AACCL,QAAAA,SAAS,GAAG,IAAIhG,KAAK,CAACsG,gBAAV,CAA4BL,KAA5B,CAAZ;AACAD,QAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAAC,CAAtC;AACAT,QAAAA,SAAS,CAACb,GAAV,CAAea,SAAS,CAACO,MAAzB;AACA;;AAED,WAAK,OAAL;AACCP,QAAAA,SAAS,GAAG,IAAIhG,KAAK,CAAC0G,UAAV,CAAsBT,KAAtB,CAAZ;AACAD,QAAAA,SAAS,CAACW,QAAV,GAAqBP,KAArB;AACA;;AAED,WAAK,MAAL;AACCJ,QAAAA,SAAS,GAAG,IAAIhG,KAAK,CAAC4G,SAAV,CAAqBX,KAArB,CAAZ;AACAD,QAAAA,SAAS,CAACW,QAAV,GAAqBP,KAArB,CAFD,CAGC;;AACAL,QAAAA,QAAQ,CAACc,IAAT,GAAgBd,QAAQ,CAACc,IAAT,IAAiB,EAAjC;AACAd,QAAAA,QAAQ,CAACc,IAAT,CAAcC,cAAd,GAA+Bf,QAAQ,CAACc,IAAT,CAAcC,cAAd,KAAiC3G,SAAjC,GAA6C4F,QAAQ,CAACc,IAAT,CAAcC,cAA3D,GAA4E,CAA3G;AACAf,QAAAA,QAAQ,CAACc,IAAT,CAAcE,cAAd,GAA+BhB,QAAQ,CAACc,IAAT,CAAcE,cAAd,KAAiC5G,SAAjC,GAA6C4F,QAAQ,CAACc,IAAT,CAAcE,cAA3D,GAA4EC,IAAI,CAACC,EAAL,GAAU,GAArH;AACAjB,QAAAA,SAAS,CAACkB,KAAV,GAAkBnB,QAAQ,CAACc,IAAT,CAAcE,cAAhC;AACAf,QAAAA,SAAS,CAACmB,QAAV,GAAqB,MAAMpB,QAAQ,CAACc,IAAT,CAAcC,cAAd,GAA+Bf,QAAQ,CAACc,IAAT,CAAcE,cAAxE;AACAf,QAAAA,SAAS,CAACO,MAAV,CAAiBC,QAAjB,CAA0BC,GAA1B,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAAC,CAAtC;AACAT,QAAAA,SAAS,CAACb,GAAV,CAAea,SAAS,CAACO,MAAzB;AACA;;AAED;AACC,cAAM,IAAIrD,KAAJ,CAAW,+CAA+C6C,QAAQ,CAACM,IAAxD,GAA+D,IAA1E,CAAN;AA3BF;;AA+BAL,IAAAA,SAAS,CAACoB,KAAV,GAAkB,CAAlB;AAEA,QAAKrB,QAAQ,CAACsB,SAAT,KAAuBlH,SAA5B,EAAwC6F,SAAS,CAACqB,SAAV,GAAsBtB,QAAQ,CAACsB,SAA/B;AAExCrB,IAAAA,SAAS,CAACR,IAAV,GAAiBO,QAAQ,CAACP,IAAT,IAAmB,WAAWM,UAA/C;AAEA,WAAOwB,OAAO,CAACC,OAAR,CAAiBvB,SAAjB,CAAP;AAEA,GAjDD;AAmDA;;;;;;;AAKA,WAASrC,2BAAT,CAAsCb,IAAtC,EAA6C;AAE5C,SAAK0C,IAAL,GAAY7C,UAAU,CAACe,mBAAvB;AAEA;;AAEDC,EAAAA,2BAA2B,CAACrD,SAA5B,CAAsCkH,eAAtC,GAAwD,UAAWC,QAAX,EAAsB;AAE7E,WAAOzH,KAAK,CAAC0H,iBAAb;AAEA,GAJD;;AAMA/D,EAAAA,2BAA2B,CAACrD,SAA5B,CAAsCqH,YAAtC,GAAqD,UAAWC,cAAX,EAA2BH,QAA3B,EAAqCnD,MAArC,EAA8C;AAElG,QAAIuD,OAAO,GAAG,EAAd;AAEAD,IAAAA,cAAc,CAAC3B,KAAf,GAAuB,IAAIjG,KAAK,CAACkG,KAAV,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAvB;AACA0B,IAAAA,cAAc,CAACE,OAAf,GAAyB,GAAzB;AAEA,QAAIC,iBAAiB,GAAGN,QAAQ,CAACO,oBAAjC;;AAEA,QAAKD,iBAAL,EAAyB;AAExB,UAAKE,KAAK,CAACC,OAAN,CAAeH,iBAAiB,CAACI,eAAjC,CAAL,EAA0D;AAEzD,YAAIC,KAAK,GAAGL,iBAAiB,CAACI,eAA9B;AAEAP,QAAAA,cAAc,CAAC3B,KAAf,CAAqBE,SAArB,CAAgCiC,KAAhC;AACAR,QAAAA,cAAc,CAACE,OAAf,GAAyBM,KAAK,CAAE,CAAF,CAA9B;AAEA;;AAED,UAAKL,iBAAiB,CAACM,gBAAlB,KAAuClI,SAA5C,EAAwD;AAEvD0H,QAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,KAAtC,EAA6CG,iBAAiB,CAACM,gBAA/D,CAAd;AAEA;AAED;;AAED,WAAOf,OAAO,CAACkB,GAAR,CAAaX,OAAb,CAAP;AAEA,GA9BD;AAgCA;;;AAEA,MAAIY,4BAA4B,GAAG,aAAnC;AACA,MAAI/F,6BAA6B,GAAG,MAApC;AACA,MAAIgG,8BAA8B,GAAG,EAArC;AACA,MAAIC,4BAA4B,GAAG;AAAE5F,IAAAA,IAAI,EAAE,UAAR;AAAoB6F,IAAAA,GAAG,EAAE;AAAzB,GAAnC;;AAEA,WAAS/F,mBAAT,CAA8Bf,IAA9B,EAAqC;AAEpC,SAAK0D,IAAL,GAAY7C,UAAU,CAACC,eAAvB;AACA,SAAKP,OAAL,GAAe,IAAf;AACA,SAAKwG,IAAL,GAAY,IAAZ;AAEA,QAAIC,UAAU,GAAG,IAAIC,QAAJ,CAAcjH,IAAd,EAAoB,CAApB,EAAuB4G,8BAAvB,CAAjB;AAEA,SAAKM,MAAL,GAAc;AACbzG,MAAAA,KAAK,EAAEvC,KAAK,CAACiB,WAAN,CAAkBuB,UAAlB,CAA8B,IAAIC,UAAJ,CAAgBX,IAAI,CAACmH,KAAL,CAAY,CAAZ,EAAe,CAAf,CAAhB,CAA9B,CADM;AAEbhG,MAAAA,OAAO,EAAE6F,UAAU,CAACI,SAAX,CAAsB,CAAtB,EAAyB,IAAzB,CAFI;AAGb7F,MAAAA,MAAM,EAAEyF,UAAU,CAACI,SAAX,CAAsB,CAAtB,EAAyB,IAAzB;AAHK,KAAd;;AAMA,QAAK,KAAKF,MAAL,CAAYzG,KAAZ,KAAsBG,6BAA3B,EAA2D;AAE1D,YAAM,IAAIQ,KAAJ,CAAW,mDAAX,CAAN;AAEA,KAJD,MAIO,IAAK,KAAK8F,MAAL,CAAY/F,OAAZ,GAAsB,GAA3B,EAAiC;AAEvC,YAAM,IAAIC,KAAJ,CAAW,8EAAX,CAAN;AAEA;;AAED,QAAIiG,SAAS,GAAG,IAAIJ,QAAJ,CAAcjH,IAAd,EAAoB4G,8BAApB,CAAhB;AACA,QAAIU,UAAU,GAAG,CAAjB;;AAEA,WAAQA,UAAU,GAAGD,SAAS,CAACE,UAA/B,EAA4C;AAE3C,UAAIC,WAAW,GAAGH,SAAS,CAACD,SAAV,CAAqBE,UAArB,EAAiC,IAAjC,CAAlB;AACAA,MAAAA,UAAU,IAAI,CAAd;AAEA,UAAIG,SAAS,GAAGJ,SAAS,CAACD,SAAV,CAAqBE,UAArB,EAAiC,IAAjC,CAAhB;AACAA,MAAAA,UAAU,IAAI,CAAd;;AAEA,UAAKG,SAAS,KAAKZ,4BAA4B,CAAC5F,IAAhD,EAAuD;AAEtD,YAAIyG,YAAY,GAAG,IAAI/G,UAAJ,CAAgBX,IAAhB,EAAsB4G,8BAA8B,GAAGU,UAAvD,EAAmEE,WAAnE,CAAnB;AACA,aAAKjH,OAAL,GAAerC,KAAK,CAACiB,WAAN,CAAkBuB,UAAlB,CAA8BgH,YAA9B,CAAf;AAEA,OALD,MAKO,IAAKD,SAAS,KAAKZ,4BAA4B,CAACC,GAAhD,EAAsD;AAE5D,YAAIa,UAAU,GAAGf,8BAA8B,GAAGU,UAAlD;AACA,aAAKP,IAAL,GAAY/G,IAAI,CAACmH,KAAL,CAAYQ,UAAZ,EAAwBA,UAAU,GAAGH,WAArC,CAAZ;AAEA,OAlB0C,CAoB3C;;;AAEAF,MAAAA,UAAU,IAAIE,WAAd;AAEA;;AAED,QAAK,KAAKjH,OAAL,KAAiB,IAAtB,EAA6B;AAE5B,YAAM,IAAIa,KAAJ,CAAW,2CAAX,CAAN;AAEA;AAED;AAED;;;;;;;AAKA,WAASa,iCAAT,CAA4CjB,IAA5C,EAAkDzC,WAAlD,EAAgE;AAE/D,QAAK,CAAEA,WAAP,EAAqB;AAEpB,YAAM,IAAI6C,KAAJ,CAAW,qDAAX,CAAN;AAEA;;AAED,SAAKsC,IAAL,GAAY7C,UAAU,CAACmB,0BAAvB;AACA,SAAKhB,IAAL,GAAYA,IAAZ;AACA,SAAKzC,WAAL,GAAmBA,WAAnB;AACAL,IAAAA,KAAK,CAAC0J,WAAN,CAAkBC,gBAAlB;AAEA;;AAED5F,EAAAA,iCAAiC,CAACzD,SAAlC,CAA4CsJ,eAA5C,GAA8D,UAAWC,SAAX,EAAsBvF,MAAtB,EAA+B;AAE5F,QAAIxB,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIzC,WAAW,GAAG,KAAKA,WAAvB;AACA,QAAIyJ,eAAe,GAAGD,SAAS,CAACvH,UAAV,CAAsB,KAAKkD,IAA3B,EAAkCuE,UAAxD;AACA,QAAIC,gBAAgB,GAAGH,SAAS,CAACvH,UAAV,CAAsB,KAAKkD,IAA3B,EAAkCyE,UAAzD;AACA,QAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA,QAAIC,gBAAgB,GAAG,EAAvB;;AAEA,SAAM,IAAIC,aAAV,IAA2BL,gBAA3B,EAA8C;AAE7C,UAAK,EAAIK,aAAa,IAAIC,UAArB,CAAL,EAAyC;AAEzCJ,MAAAA,iBAAiB,CAAEI,UAAU,CAAED,aAAF,CAAZ,CAAjB,GAAmDL,gBAAgB,CAAEK,aAAF,CAAnE;AAEA;;AAED,SAAMA,aAAN,IAAuBR,SAAS,CAACI,UAAjC,EAA8C;AAE7C,UAAKK,UAAU,CAAED,aAAF,CAAV,KAAgClK,SAAhC,IAA6C6J,gBAAgB,CAAEK,aAAF,CAAhB,KAAsClK,SAAxF,EAAoG;AAEnG,YAAIoK,WAAW,GAAGzH,IAAI,CAAC0H,SAAL,CAAgBX,SAAS,CAACI,UAAV,CAAsBI,aAAtB,CAAhB,CAAlB;AACA,YAAII,aAAa,GAAGC,qBAAqB,CAAEH,WAAW,CAACE,aAAd,CAAzC;AAEAL,QAAAA,gBAAgB,CAAEE,UAAU,CAAED,aAAF,CAAZ,CAAhB,GAAkDI,aAAlD;AACAN,QAAAA,sBAAsB,CAAEG,UAAU,CAAED,aAAF,CAAZ,CAAtB,GAAwDE,WAAW,CAACI,UAAZ,KAA2B,IAAnF;AAEA;AAED;;AAED,WAAOrG,MAAM,CAACsG,aAAP,CAAsB,YAAtB,EAAoCd,eAApC,EAAsDe,IAAtD,CAA4D,UAAWd,UAAX,EAAwB;AAE1F,aAAO,IAAIzC,OAAJ,CAAa,UAAWC,OAAX,EAAqB;AAExClH,QAAAA,WAAW,CAACyK,eAAZ,CAA6Bf,UAA7B,EAAyC,UAAWgB,QAAX,EAAsB;AAE9D,eAAM,IAAIV,aAAV,IAA2BU,QAAQ,CAACd,UAApC,EAAiD;AAEhD,gBAAIe,SAAS,GAAGD,QAAQ,CAACd,UAAT,CAAqBI,aAArB,CAAhB;AACA,gBAAIM,UAAU,GAAGR,sBAAsB,CAAEE,aAAF,CAAvC;AAEA,gBAAKM,UAAU,KAAKxK,SAApB,EAAgC6K,SAAS,CAACL,UAAV,GAAuBA,UAAvB;AAEhC;;AAEDpD,UAAAA,OAAO,CAAEwD,QAAF,CAAP;AAEA,SAbD,EAaGb,iBAbH,EAasBE,gBAbtB;AAeA,OAjBM,CAAP;AAmBA,KArBM,CAAP;AAuBA,GAvDD;AAyDA;;;;;;;AAKA,WAASjG,6BAAT,CAAwCrB,IAAxC,EAA+C;AAE9C,SAAK0C,IAAL,GAAY7C,UAAU,CAACuB,qBAAvB;AAEA;;AAEDC,EAAAA,6BAA6B,CAAC7D,SAA9B,CAAwC2K,aAAxC,GAAwD,UAAWC,OAAX,EAAoBC,SAApB,EAAgC;AAEvFD,IAAAA,OAAO,GAAGA,OAAO,CAACE,KAAR,EAAV;;AAEA,QAAKD,SAAS,CAACE,MAAV,KAAqBlL,SAA1B,EAAsC;AAErC+K,MAAAA,OAAO,CAACG,MAAR,CAAelF,SAAf,CAA0BgF,SAAS,CAACE,MAApC;AAEA;;AAED,QAAKF,SAAS,CAACG,QAAV,KAAuBnL,SAA5B,EAAwC;AAEvC+K,MAAAA,OAAO,CAACI,QAAR,GAAmBH,SAAS,CAACG,QAA7B;AAEA;;AAED,QAAKH,SAAS,CAACI,KAAV,KAAoBpL,SAAzB,EAAqC;AAEpC+K,MAAAA,OAAO,CAACM,MAAR,CAAerF,SAAf,CAA0BgF,SAAS,CAACI,KAApC;AAEA;;AAED,QAAKJ,SAAS,CAACM,QAAV,KAAuBtL,SAA5B,EAAwC;AAEvCmB,MAAAA,OAAO,CAAC+C,IAAR,CAAc,0CAA0C,KAAKmB,IAA/C,GAAsD,gCAApE;AAEA;;AAED0F,IAAAA,OAAO,CAACQ,WAAR,GAAsB,IAAtB;AAEA,WAAOR,OAAP;AAEA,GAhCD;AAkCA;;;;;;;AAKA,WAASrH,2CAAT,GAAuD;AAEtD,WAAO;AAEN2B,MAAAA,IAAI,EAAE7C,UAAU,CAACiB,qCAFX;AAIN+H,MAAAA,wBAAwB,EAAE,CACzB,OADyB,EAEzB,KAFyB,EAGzB,UAHyB,EAIzB,mBAJyB,EAKzB,OALyB,EAMzB,gBANyB,EAOzB,UAPyB,EAQzB,mBARyB,EASzB,aATyB,EAUzB,SAVyB,EAWzB,WAXyB,EAYzB,WAZyB,EAazB,iBAbyB,EAczB,mBAdyB,EAezB,kBAfyB,EAgBzB,aAhByB,EAiBzB,UAjByB,EAkBzB,eAlByB,EAmBzB,YAnByB,EAoBzB,UApByB,EAqBzB,QArByB,EAsBzB,iBAtByB,EAuBzB,iBAvByB,CAJpB;AA8BNnE,MAAAA,eAAe,EAAE,2BAAY;AAE5B,eAAOxH,KAAK,CAAC4L,cAAb;AAEA,OAlCK;AAoCNjE,MAAAA,YAAY,EAAE,sBAAWkE,MAAX,EAAmBpE,QAAnB,EAA6BnD,MAA7B,EAAsC;AAEnD,YAAIwH,qBAAqB,GAAGrE,QAAQ,CAACnF,UAAT,CAAqB,KAAKkD,IAA1B,CAA5B;AAEA,YAAIuG,MAAM,GAAG/L,KAAK,CAACgM,SAAN,CAAiB,UAAjB,CAAb;AAEA,YAAIC,QAAQ,GAAGjM,KAAK,CAACkM,aAAN,CAAoBd,KAApB,CAA2BW,MAAM,CAACE,QAAlC,CAAf;AAEA,YAAIE,4BAA4B,GAAG,CAClC,wBADkC,EAElC,iCAFkC,EAGlC,QAHkC,EAIjCC,IAJiC,CAI3B,IAJ2B,CAAnC;AAMA,YAAIC,8BAA8B,GAAG,CACpC,0BADoC,EAEpC,mCAFoC,EAGpC,QAHoC,EAInCD,IAJmC,CAI7B,IAJ6B,CAArC;AAMA,YAAIE,wBAAwB,GAAG,CAC9B,iCAD8B,EAE9B,wBAF8B,EAG9B,sDAH8B,EAI9B,iDAJ8B,EAK9B,kFAL8B,EAM9B,uCAN8B,EAO9B,QAP8B,EAQ7BF,IAR6B,CAQvB,IARuB,CAA/B;AAUA,YAAIG,0BAA0B,GAAG,CAChC,sCADgC,EAEhC,0BAFgC,EAGhC,0DAHgC,EAIhC,gFAJgC,EAKhC,yCALgC,EAMhC,QANgC,EAO/BH,IAP+B,CAOzB,IAPyB,CAAjC;AASA,YAAII,0BAA0B,GAAG,CAChC,4BADgC,EAEhC,2CAFgC,EAGhC,0EAHgC,EAIhC,8CAJgC,EAK/BJ,IAL+B,CAKzB,IALyB,CAAjC;AAOA,YAAIK,cAAc,GAAGV,MAAM,CAACU,cAAP,CACnBC,OADmB,CACV,0BADU,EACkB,wBADlB,EAEnBA,OAFmB,CAEV,0BAFU,EAEkB,2BAFlB,EAGnBA,OAHmB,CAGV,uCAHU,EAG+BP,4BAH/B,EAInBO,OAJmB,CAIV,uCAJU,EAI+BL,8BAJ/B,EAKnBK,OALmB,CAKV,kCALU,EAK0BJ,wBAL1B,EAMnBI,OANmB,CAMV,kCANU,EAM0BH,0BAN1B,EAOnBG,OAPmB,CAOV,qCAPU,EAO6BF,0BAP7B,CAArB;AASA,eAAOP,QAAQ,CAACU,SAAhB;AACA,eAAOV,QAAQ,CAACW,SAAhB;AACA,eAAOX,QAAQ,CAACY,YAAhB;AACA,eAAOZ,QAAQ,CAACa,YAAhB;AAEAb,QAAAA,QAAQ,CAACc,QAAT,GAAoB;AAAE7K,UAAAA,KAAK,EAAE,IAAIlC,KAAK,CAACkG,KAAV,GAAkB8G,MAAlB,CAA0B,QAA1B;AAAT,SAApB;AACAf,QAAAA,QAAQ,CAACgB,UAAT,GAAsB;AAAE/K,UAAAA,KAAK,EAAE;AAAT,SAAtB;AACA+J,QAAAA,QAAQ,CAACiB,WAAT,GAAuB;AAAEhL,UAAAA,KAAK,EAAE;AAAT,SAAvB;AACA+J,QAAAA,QAAQ,CAACkB,aAAT,GAAyB;AAAEjL,UAAAA,KAAK,EAAE;AAAT,SAAzB;AAEA2J,QAAAA,MAAM,CAACuB,YAAP,GAAsBrB,MAAM,CAACqB,YAA7B;AACAvB,QAAAA,MAAM,CAACY,cAAP,GAAwBA,cAAxB;AACAZ,QAAAA,MAAM,CAACI,QAAP,GAAkBA,QAAlB;AACAJ,QAAAA,MAAM,CAACwB,OAAP,GAAiB;AAAE,sBAAY;AAAd,SAAjB;AAEAxB,QAAAA,MAAM,CAAC5F,KAAP,GAAe,IAAIjG,KAAK,CAACkG,KAAV,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAf;AACA2F,QAAAA,MAAM,CAAC/D,OAAP,GAAiB,GAAjB;AAEA,YAAID,OAAO,GAAG,EAAd;;AAEA,YAAKI,KAAK,CAACC,OAAN,CAAe4D,qBAAqB,CAACwB,aAArC,CAAL,EAA4D;AAE3D,cAAIlF,KAAK,GAAG0D,qBAAqB,CAACwB,aAAlC;AAEAzB,UAAAA,MAAM,CAAC5F,KAAP,CAAaE,SAAb,CAAwBiC,KAAxB;AACAyD,UAAAA,MAAM,CAAC/D,OAAP,GAAiBM,KAAK,CAAE,CAAF,CAAtB;AAEA;;AAED,YAAK0D,qBAAqB,CAACyB,cAAtB,KAAyCpN,SAA9C,EAA0D;AAEzD0H,UAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBsD,MAAtB,EAA8B,KAA9B,EAAqCC,qBAAqB,CAACyB,cAA3D,CAAd;AAEA;;AAED1B,QAAAA,MAAM,CAAC2B,QAAP,GAAkB,IAAIxN,KAAK,CAACkG,KAAV,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAlB;AACA2F,QAAAA,MAAM,CAACoB,UAAP,GAAoBnB,qBAAqB,CAAC2B,gBAAtB,KAA2CtN,SAA3C,GAAuD2L,qBAAqB,CAAC2B,gBAA7E,GAAgG,GAApH;AACA5B,QAAAA,MAAM,CAACkB,QAAP,GAAkB,IAAI/M,KAAK,CAACkG,KAAV,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAlB;;AAEA,YAAK+B,KAAK,CAACC,OAAN,CAAe4D,qBAAqB,CAAC4B,cAArC,CAAL,EAA6D;AAE5D7B,UAAAA,MAAM,CAACkB,QAAP,CAAgB5G,SAAhB,CAA2B2F,qBAAqB,CAAC4B,cAAjD;AAEA;;AAED,YAAK5B,qBAAqB,CAAC6B,yBAAtB,KAAoDxN,SAAzD,EAAqE;AAEpE,cAAIyN,eAAe,GAAG9B,qBAAqB,CAAC6B,yBAA5C;AACA9F,UAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBsD,MAAtB,EAA8B,eAA9B,EAA+C+B,eAA/C,CAAd;AACA/F,UAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBsD,MAAtB,EAA8B,aAA9B,EAA6C+B,eAA7C,CAAd;AAEA;;AAED,eAAOtG,OAAO,CAACkB,GAAR,CAAaX,OAAb,CAAP;AAEA,OAlJK;AAoJNgG,MAAAA,cAAc,EAAE,wBAAWhC,MAAX,EAAoB;AAEnC;AAEA,YAAIpE,QAAQ,GAAG,IAAIzH,KAAK,CAAC4L,cAAV,CAA0B;AACxCyB,UAAAA,OAAO,EAAExB,MAAM,CAACwB,OADwB;AAExCD,UAAAA,YAAY,EAAEvB,MAAM,CAACuB,YAFmB;AAGxCX,UAAAA,cAAc,EAAEZ,MAAM,CAACY,cAHiB;AAIxCR,UAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAJuB;AAKxC6B,UAAAA,GAAG,EAAE,IALmC;AAMxClI,UAAAA,MAAM,EAAE,IANgC;AAOxCkC,UAAAA,OAAO,EAAE+D,MAAM,CAAC/D,OAPwB;AAQxCiG,UAAAA,WAAW,EAAElC,MAAM,CAACkC;AARoB,SAA1B,CAAf;AAWAtG,QAAAA,QAAQ,CAACuG,gCAAT,GAA4C,IAA5C;AAEAvG,QAAAA,QAAQ,CAACxB,KAAT,GAAiB4F,MAAM,CAAC5F,KAAxB;AAEAwB,QAAAA,QAAQ,CAACwG,GAAT,GAAepC,MAAM,CAACoC,GAAP,KAAe9N,SAAf,GAA2B,IAA3B,GAAkC0L,MAAM,CAACoC,GAAxD;AAEAxG,QAAAA,QAAQ,CAACyG,QAAT,GAAoB,IAApB;AACAzG,QAAAA,QAAQ,CAAC0G,iBAAT,GAA6B,GAA7B;AAEA1G,QAAAA,QAAQ,CAAC2G,KAAT,GAAiBvC,MAAM,CAACuC,KAAP,KAAiBjO,SAAjB,GAA6B,IAA7B,GAAoC0L,MAAM,CAACuC,KAA5D;AACA3G,QAAAA,QAAQ,CAAC4G,cAAT,GAA0B,GAA1B;AAEA5G,QAAAA,QAAQ,CAAC+F,QAAT,GAAoB3B,MAAM,CAAC2B,QAA3B;AACA/F,QAAAA,QAAQ,CAAC6G,iBAAT,GAA6B,GAA7B;AACA7G,QAAAA,QAAQ,CAAC8G,WAAT,GAAuB1C,MAAM,CAAC0C,WAAP,KAAuBpO,SAAvB,GAAmC,IAAnC,GAA0C0L,MAAM,CAAC0C,WAAxE;AAEA9G,QAAAA,QAAQ,CAAC+G,OAAT,GAAmB3C,MAAM,CAAC2C,OAAP,KAAmBrO,SAAnB,GAA+B,IAA/B,GAAsC0L,MAAM,CAAC2C,OAAhE;AACA/G,QAAAA,QAAQ,CAACgH,SAAT,GAAqB,CAArB;AAEAhH,QAAAA,QAAQ,CAACiH,SAAT,GAAqB7C,MAAM,CAAC6C,SAAP,KAAqBvO,SAArB,GAAiC,IAAjC,GAAwC0L,MAAM,CAAC6C,SAApE;AACA,YAAK7C,MAAM,CAAC8C,WAAZ,EAA0BlH,QAAQ,CAACkH,WAAT,GAAuB9C,MAAM,CAAC8C,WAA9B;AAE1BlH,QAAAA,QAAQ,CAACmH,eAAT,GAA2B,IAA3B;AACAnH,QAAAA,QAAQ,CAACoH,iBAAT,GAA6B,CAA7B;AACApH,QAAAA,QAAQ,CAACqH,gBAAT,GAA4B,CAA5B;AAEArH,QAAAA,QAAQ,CAACyF,WAAT,GAAuBrB,MAAM,CAACqB,WAAP,KAAuB/M,SAAvB,GAAmC,IAAnC,GAA0C0L,MAAM,CAACqB,WAAxE;AACAzF,QAAAA,QAAQ,CAACsF,QAAT,GAAoBlB,MAAM,CAACkB,QAA3B;AAEAtF,QAAAA,QAAQ,CAAC0F,aAAT,GAAyBtB,MAAM,CAACsB,aAAP,KAAyBhN,SAAzB,GAAqC,IAArC,GAA4C0L,MAAM,CAACsB,aAA5E;AACA1F,QAAAA,QAAQ,CAACwF,UAAT,GAAsBpB,MAAM,CAACoB,UAA7B;AAEAxF,QAAAA,QAAQ,CAACsH,QAAT,GAAoB,IAApB;AAEAtH,QAAAA,QAAQ,CAACuH,MAAT,GAAkBnD,MAAM,CAACmD,MAAP,KAAkB7O,SAAlB,GAA8B,IAA9B,GAAqC0L,MAAM,CAACmD,MAA9D;AACAvH,QAAAA,QAAQ,CAACwH,eAAT,GAA2B,GAA3B;AAEAxH,QAAAA,QAAQ,CAACyH,eAAT,GAA2B,IAA3B;AAEAzH,QAAAA,QAAQ,CAACnF,UAAT,CAAoB6M,WAApB,GAAkC,IAAlC;AAEA,eAAO1H,QAAP;AAEA,OA9MK;;AAgNN;;;;;;;;;;;;AAYA2H,MAAAA,aAAa,EAAE,uBAAWC,MAAX,EAAoB;AAElC,YAAI9I,MAAM,GAAG8I,MAAM,CAACjE,KAAP,EAAb;AAEA7E,QAAAA,MAAM,CAACyH,gCAAP,GAA0C,IAA1C;AAEA,YAAInC,MAAM,GAAG,KAAKF,wBAAlB;;AAEA,aAAM,IAAIvI,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGzD,MAAM,CAACxI,MAA7B,EAAqCD,CAAC,GAAGkM,EAAzC,EAA6ClM,CAAC,EAA9C,EAAoD;AAEnDmD,UAAAA,MAAM,CAAEsF,MAAM,CAAEzI,CAAF,CAAR,CAAN,GAAwBiM,MAAM,CAAExD,MAAM,CAAEzI,CAAF,CAAR,CAA9B;AAEA;;AAED,eAAOmD,MAAP;AAEA,OA5OK;AA8ON;AACAgJ,MAAAA,eAAe,EAAE,yBAAWC,QAAX,EAAqBhL,KAArB,EAA4BiL,MAA5B,EAAoC1E,QAApC,EAA8CtD,QAA9C,EAAwDiI,KAAxD,EAAgE;AAEhF,YAAKjI,QAAQ,CAACuG,gCAAT,KAA8C,IAAnD,EAA0D;AAEzD;AAEA;;AAED,YAAI/B,QAAQ,GAAGxE,QAAQ,CAACwE,QAAxB;AACA,YAAIoB,OAAO,GAAG5F,QAAQ,CAAC4F,OAAvB;AAEApB,QAAAA,QAAQ,CAACnE,OAAT,CAAiB5F,KAAjB,GAAyBuF,QAAQ,CAACK,OAAlC;AAEAmE,QAAAA,QAAQ,CAAC0D,OAAT,CAAiBzN,KAAjB,CAAuB0N,IAAvB,CAA6BnI,QAAQ,CAACxB,KAAtC;AACAgG,QAAAA,QAAQ,CAACuB,QAAT,CAAkBtL,KAAlB,CAAwB0N,IAAxB,CAA8BnI,QAAQ,CAAC+F,QAAvC,EAAkDqC,cAAlD,CAAkEpI,QAAQ,CAAC6G,iBAA3E;AAEArC,QAAAA,QAAQ,CAACgC,GAAT,CAAa/L,KAAb,GAAqBuF,QAAQ,CAACwG,GAA9B;AACAhC,QAAAA,QAAQ,CAACiB,WAAT,CAAqBhL,KAArB,GAA6BuF,QAAQ,CAACyF,WAAtC;AACAjB,QAAAA,QAAQ,CAAC8C,QAAT,CAAkB7M,KAAlB,GAA0BuF,QAAQ,CAACsH,QAAnC;AAEA9C,QAAAA,QAAQ,CAACiC,QAAT,CAAkBhM,KAAlB,GAA0BuF,QAAQ,CAACyG,QAAnC;AACAjC,QAAAA,QAAQ,CAACkC,iBAAT,CAA2BjM,KAA3B,GAAmCuF,QAAQ,CAAC0G,iBAA5C;AAEAlC,QAAAA,QAAQ,CAACmC,KAAT,CAAelM,KAAf,GAAuBuF,QAAQ,CAAC2G,KAAhC;AACAnC,QAAAA,QAAQ,CAACoC,cAAT,CAAwBnM,KAAxB,GAAgCuF,QAAQ,CAAC4G,cAAzC,CAxBgF,CA0BhF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAIyB,UAAJ;;AAEA,YAAKrI,QAAQ,CAACwG,GAAd,EAAoB;AAEnB6B,UAAAA,UAAU,GAAGrI,QAAQ,CAACwG,GAAtB;AAEA,SAJD,MAIO,IAAKxG,QAAQ,CAACyF,WAAd,EAA4B;AAElC4C,UAAAA,UAAU,GAAGrI,QAAQ,CAACyF,WAAtB;AAEA,SAJM,MAIA,IAAKzF,QAAQ,CAACmH,eAAd,EAAgC;AAEtCkB,UAAAA,UAAU,GAAGrI,QAAQ,CAACmH,eAAtB;AAEA,SAJM,MAIA,IAAKnH,QAAQ,CAACiH,SAAd,EAA0B;AAEhCoB,UAAAA,UAAU,GAAGrI,QAAQ,CAACiH,SAAtB;AAEA,SAJM,MAIA,IAAKjH,QAAQ,CAAC+G,OAAd,EAAwB;AAE9BsB,UAAAA,UAAU,GAAGrI,QAAQ,CAAC+G,OAAtB;AAEA,SAJM,MAIA,IAAK/G,QAAQ,CAAC0F,aAAd,EAA8B;AAEpC2C,UAAAA,UAAU,GAAGrI,QAAQ,CAAC0F,aAAtB;AAEA,SAJM,MAIA,IAAK1F,QAAQ,CAACsH,QAAd,EAAyB;AAE/Be,UAAAA,UAAU,GAAGrI,QAAQ,CAACsH,QAAtB;AAEA,SAJM,MAIA,IAAKtH,QAAQ,CAAC8G,WAAd,EAA4B;AAElCuB,UAAAA,UAAU,GAAGrI,QAAQ,CAAC8G,WAAtB;AAEA;;AAED,YAAKuB,UAAU,KAAK3P,SAApB,EAAgC;AAE/B;AACA,cAAK2P,UAAU,CAACC,mBAAhB,EAAsC;AAErCD,YAAAA,UAAU,GAAGA,UAAU,CAAC5E,OAAxB;AAEA;;AAED,cAAK4E,UAAU,CAACE,gBAAX,KAAgC,IAArC,EAA4C;AAE3CF,YAAAA,UAAU,CAACG,YAAX;AAEA;;AAEDhE,UAAAA,QAAQ,CAACiE,WAAT,CAAqBhO,KAArB,CAA2B0N,IAA3B,CAAiCE,UAAU,CAACK,MAA5C;AAEA;;AAEDlE,QAAAA,QAAQ,CAAC+C,MAAT,CAAgB9M,KAAhB,GAAwBuF,QAAQ,CAACuH,MAAjC;AACA/C,QAAAA,QAAQ,CAACgD,eAAT,CAAyB/M,KAAzB,GAAiCuF,QAAQ,CAACwH,eAA1C;AACAhD,QAAAA,QAAQ,CAACmE,UAAT,CAAoBlO,KAApB,GAA8BuF,QAAQ,CAACuH,MAAT,IAAmBvH,QAAQ,CAACuH,MAAT,CAAgBqB,aAArC,GAAuD,CAAE,CAAzD,GAA6D,CAAzF;AAEApE,QAAAA,QAAQ,CAACiD,eAAT,CAAyBhN,KAAzB,GAAiCuF,QAAQ,CAACyH,eAA1C;AAEAjD,QAAAA,QAAQ,CAACc,QAAT,CAAkB7K,KAAlB,CAAwB0N,IAAxB,CAA8BnI,QAAQ,CAACsF,QAAvC;AACAd,QAAAA,QAAQ,CAACgB,UAAT,CAAoB/K,KAApB,GAA4BuF,QAAQ,CAACwF,UAArC;AAEAhB,QAAAA,QAAQ,CAACkB,aAAT,CAAuBjL,KAAvB,GAA+BuF,QAAQ,CAAC0F,aAAxC;AAEAlB,QAAAA,QAAQ,CAACsC,WAAT,CAAqBrM,KAArB,GAA6BuF,QAAQ,CAAC8G,WAAtC;AACAtC,QAAAA,QAAQ,CAACuC,OAAT,CAAiBtM,KAAjB,GAAyBuF,QAAQ,CAAC+G,OAAlC;AACAvC,QAAAA,QAAQ,CAACyC,SAAT,CAAmBxM,KAAnB,GAA2BuF,QAAQ,CAACiH,SAApC;AAEAzC,QAAAA,QAAQ,CAAC2C,eAAT,CAAyB1M,KAAzB,GAAiCuF,QAAQ,CAACmH,eAA1C;AACA3C,QAAAA,QAAQ,CAAC4C,iBAAT,CAA2B3M,KAA3B,GAAmCuF,QAAQ,CAACoH,iBAA5C;AACA5C,QAAAA,QAAQ,CAAC6C,gBAAT,CAA0B5M,KAA1B,GAAkCuF,QAAQ,CAACqH,gBAA3C;;AAEA,YAAK7C,QAAQ,CAACkB,aAAT,CAAuBjL,KAAvB,KAAiC,IAAjC,IAAyCmL,OAAO,CAACiD,iBAAR,KAA8BnQ,SAA5E,EAAwF;AAEvFkN,UAAAA,OAAO,CAACiD,iBAAR,GAA4B,EAA5B,CAFuF,CAGvF;;AACAjD,UAAAA,OAAO,CAACkD,gBAAR,GAA2B,EAA3B;AAEA;;AAED,YAAKtE,QAAQ,CAACkB,aAAT,CAAuBjL,KAAvB,KAAiC,IAAjC,IAAyCmL,OAAO,CAACiD,iBAAR,KAA8BnQ,SAA5E,EAAwF;AAEvF,iBAAOkN,OAAO,CAACiD,iBAAf;AACA,iBAAOjD,OAAO,CAACkD,gBAAf;AAEA;AAED;AA1WK,KAAP;AA8WA;AAED;;AACA;;AACA;AAEA;AACA;;;AACA,WAASC,0BAAT,CAAqCC,kBAArC,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,YAAnF,EAAkG;AAEjG5Q,IAAAA,KAAK,CAAC6Q,WAAN,CAAkBC,IAAlB,CAAwB,IAAxB,EAA8BL,kBAA9B,EAAkDC,YAAlD,EAAgEC,UAAhE,EAA4EC,YAA5E;AAEA;;AAEDJ,EAAAA,0BAA0B,CAAClQ,SAA3B,GAAuCyQ,MAAM,CAACC,MAAP,CAAehR,KAAK,CAAC6Q,WAAN,CAAkBvQ,SAAjC,CAAvC;AACAkQ,EAAAA,0BAA0B,CAAClQ,SAA3B,CAAqCC,WAArC,GAAmDiQ,0BAAnD;;AAEAA,EAAAA,0BAA0B,CAAClQ,SAA3B,CAAqC2Q,gBAArC,GAAwD,UAAWC,KAAX,EAAmB;AAE1E;AACA;AAEA,QAAIC,MAAM,GAAG,KAAKP,YAAlB;AAAA,QACCQ,MAAM,GAAG,KAAKV,YADf;AAAA,QAECW,SAAS,GAAG,KAAKA,SAFlB;AAAA,QAGChG,MAAM,GAAG6F,KAAK,GAAGG,SAAR,GAAoB,CAApB,GAAwBA,SAHlC;;AAKA,SAAM,IAAIjO,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKiO,SAAvB,EAAkCjO,CAAC,EAAnC,EAAyC;AAExC+N,MAAAA,MAAM,CAAE/N,CAAF,CAAN,GAAcgO,MAAM,CAAE/F,MAAM,GAAGjI,CAAX,CAApB;AAEA;;AAED,WAAO+N,MAAP;AAEA,GAlBD;;AAoBAX,EAAAA,0BAA0B,CAAClQ,SAA3B,CAAqCgR,YAArC,GAAoDd,0BAA0B,CAAClQ,SAA3B,CAAqC2Q,gBAAzF;AAEAT,EAAAA,0BAA0B,CAAClQ,SAA3B,CAAqCiR,SAArC,GAAiDf,0BAA0B,CAAClQ,SAA3B,CAAqC2Q,gBAAtF;;AAEAT,EAAAA,0BAA0B,CAAClQ,SAA3B,CAAqCkR,YAArC,GAAoD,UAAWC,EAAX,EAAeC,EAAf,EAAmBC,CAAnB,EAAsBC,EAAtB,EAA2B;AAE9E,QAAIT,MAAM,GAAG,KAAKP,YAAlB;AACA,QAAIQ,MAAM,GAAG,KAAKV,YAAlB;AACA,QAAImB,MAAM,GAAG,KAAKR,SAAlB;AAEA,QAAIS,OAAO,GAAGD,MAAM,GAAG,CAAvB;AACA,QAAIE,OAAO,GAAGF,MAAM,GAAG,CAAvB;AAEA,QAAIG,EAAE,GAAGJ,EAAE,GAAGF,EAAd;AAEA,QAAIO,CAAC,GAAG,CAAEN,CAAC,GAAGD,EAAN,IAAaM,EAArB;AACA,QAAIE,EAAE,GAAGD,CAAC,GAAGA,CAAb;AACA,QAAIE,GAAG,GAAGD,EAAE,GAAGD,CAAf;AAEA,QAAIG,OAAO,GAAGX,EAAE,GAAGM,OAAnB;AACA,QAAIM,OAAO,GAAGD,OAAO,GAAGL,OAAxB;AAEA,QAAIO,EAAE,GAAG,IAAIH,GAAJ,GAAU,IAAID,EAAd,GAAmB,CAA5B;AACA,QAAIK,EAAE,GAAGJ,GAAG,GAAG,IAAID,EAAV,GAAeD,CAAxB;AACA,QAAIO,EAAE,GAAG,CAAE,CAAF,GAAML,GAAN,GAAY,IAAID,EAAzB;AACA,QAAIO,EAAE,GAAGN,GAAG,GAAGD,EAAf,CArB8E,CAuB9E;AACA;;AACA,SAAM,IAAI9O,CAAC,GAAG,CAAd,EAAiBA,CAAC,KAAKyO,MAAvB,EAA+BzO,CAAC,EAAhC,EAAsC;AAErC,UAAIsP,EAAE,GAAGtB,MAAM,CAAEiB,OAAO,GAAGjP,CAAV,GAAcyO,MAAhB,CAAf,CAFqC,CAEI;;AACzC,UAAIc,EAAE,GAAGvB,MAAM,CAAEiB,OAAO,GAAGjP,CAAV,GAAc0O,OAAhB,CAAN,GAAkCE,EAA3C,CAHqC,CAGU;;AAC/C,UAAIY,EAAE,GAAGxB,MAAM,CAAEgB,OAAO,GAAGhP,CAAV,GAAcyO,MAAhB,CAAf,CAJqC,CAII;;AACzC,UAAIgB,EAAE,GAAGzB,MAAM,CAAEgB,OAAO,GAAGhP,CAAZ,CAAN,GAAwB4O,EAAjC,CALqC,CAKA;;AAErCb,MAAAA,MAAM,CAAE/N,CAAF,CAAN,GAAckP,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGI,EAAf,GAAoBH,EAAE,GAAGI,EAAzB,GAA8BH,EAAE,GAAGI,EAAjD;AAEA;;AAED,WAAO1B,MAAP;AAEA,GAtCD;AAwCA;;AACA;;AACA;;AAEA;;;AAEA,MAAI2B,eAAe,GAAG;AACrBC,IAAAA,KAAK,EAAE,IADc;AAErB;AACAC,IAAAA,UAAU,EAAE,KAHS;AAIrBC,IAAAA,UAAU,EAAE,KAJS;AAKrBC,IAAAA,UAAU,EAAE,KALS;AAMrBC,IAAAA,UAAU,EAAE,KANS;AAOrBC,IAAAA,UAAU,EAAE,KAPS;AAQrBC,IAAAA,MAAM,EAAE,IARa;AASrBC,IAAAA,MAAM,EAAE,KATa;AAUrBC,IAAAA,UAAU,EAAE,KAVS;AAWrBC,IAAAA,MAAM,EAAE,CAXa;AAYrBC,IAAAA,KAAK,EAAE,CAZc;AAarBC,IAAAA,SAAS,EAAE,CAbU;AAcrBC,IAAAA,UAAU,EAAE,CAdS;AAerBC,IAAAA,SAAS,EAAE,CAfU;AAgBrBC,IAAAA,cAAc,EAAE,CAhBK;AAiBrBC,IAAAA,YAAY,EAAE,CAjBO;AAkBrBC,IAAAA,aAAa,EAAE,IAlBM;AAmBrBC,IAAAA,cAAc,EAAE;AAnBK,GAAtB;AAsBA,MAAIC,UAAU,GAAG;AAChB,UAAMC,MADU;AAEhB;AACA,WAAOlU,KAAK,CAACmU,OAHG;AAIhB,WAAOnU,KAAK,CAACoU,OAJG;AAKhB,WAAOpU,KAAK,CAACqU,OALG;AAMhB,WAAOrU,KAAK,CAACsU,OANG;AAOhB,WAAOtU,KAAK,CAACuU,OAPG;AAQhB,WAAOvU,KAAK,CAACwU;AARG,GAAjB;AAWA,MAAI9J,qBAAqB,GAAG;AAC3B,UAAM+J,SADqB;AAE3B,UAAMhS,UAFqB;AAG3B,UAAMiS,UAHqB;AAI3B,UAAMC,WAJqB;AAK3B,UAAMC,WALqB;AAM3B,UAAMC;AANqB,GAA5B;AASA,MAAIC,aAAa,GAAG;AACnB,UAAM9U,KAAK,CAAC+U,aADO;AAEnB,UAAM/U,KAAK,CAACgV,YAFO;AAGnB,UAAMhV,KAAK,CAACiV,0BAHO;AAInB,UAAMjV,KAAK,CAACkV,yBAJO;AAKnB,UAAMlV,KAAK,CAACmV,yBALO;AAMnB,UAAMnV,KAAK,CAACoV;AANO,GAApB;AASA,MAAIC,eAAe,GAAG;AACrB,WAAOrV,KAAK,CAACsV,mBADQ;AAErB,WAAOtV,KAAK,CAACuV,sBAFQ;AAGrB,WAAOvV,KAAK,CAACwV;AAHQ,GAAtB;AAMA,MAAIC,WAAW,GAAG;AACjB,UAAMzV,KAAK,CAAC0V,QADK;AACK;AACtB,UAAM1V,KAAK,CAAC2V,SAFK,CAEK;AACtB;;AAHiB,GAAlB;AAMA,MAAIC,iBAAiB,GAAG;AACvB,SAAK5V,KAAK,CAAC6V,UADY;AAEvB,SAAK7V,KAAK,CAAC8V,SAFY;AAGvB,SAAK9V,KAAK,CAAC+V,UAHY;AAIvB,SAAK/V,KAAK,CAACgW,cAJY;AAKvB,SAAKhW,KAAK,CAACiW,iBALY;AAMvB,SAAKjW,KAAK,CAACkW,aANY;AAOvB,SAAKlW,KAAK,CAACiW,iBAPY;AAQvB,SAAKjW,KAAK,CAACmW;AARY,GAAxB;AAWA,MAAIC,qBAAqB,GAAG;AAC3B,WAAOpW,KAAK,CAACqW,WADc;AAE3B,WAAOrW,KAAK,CAACsW,gBAFc;AAG3B,WAAOtW,KAAK,CAACuW;AAHc,GAA5B;AAMA,MAAIC,iBAAiB,GAAG;AACvB,OAAGxW,KAAK,CAACyW,UADc;AAEvB,OAAGzW,KAAK,CAAC0W,SAFc;AAGvB,SAAK1W,KAAK,CAAC2W,cAHY;AAIvB,SAAK3W,KAAK,CAAC4W,sBAJY;AAKvB,SAAK5W,KAAK,CAAC6W,cALY;AAMvB,SAAK7W,KAAK,CAAC8W,sBANY;AAOvB,SAAK9W,KAAK,CAAC+W,cAPY;AAQvB,SAAK/W,KAAK,CAACgX,sBARY;AASvB,SAAKhX,KAAK,CAACiX,cATY;AAUvB,SAAKjX,KAAK,CAACkX,sBAVY;AAWvB,SAAKlX,KAAK,CAACmX,sBAXY,CAYvB;AACA;AACA;AACA;AACA;;AAhBuB,GAAxB;AAmBA,MAAIC,gBAAgB,GAAG;AACtB,cAAU,CADY;AAEtB,YAAQ,CAFc;AAGtB,YAAQ,CAHc;AAItB,YAAQ,CAJc;AAKtB,YAAQ,CALc;AAMtB,YAAQ,CANc;AAOtB,YAAQ;AAPc,GAAvB;AAUA,MAAI9M,UAAU,GAAG;AAChB+M,IAAAA,QAAQ,EAAE,UADM;AAEhBC,IAAAA,MAAM,EAAE,QAFQ;AAGhBC,IAAAA,UAAU,EAAE,IAHI;AAIhBC,IAAAA,UAAU,EAAE,KAJI;AAKhBC,IAAAA,OAAO,EAAE,OALO;AAMhBC,IAAAA,SAAS,EAAE,YANK;AAOhBC,IAAAA,QAAQ,EAAE;AAPM,GAAjB;AAUA,MAAIC,eAAe,GAAG;AACrBrM,IAAAA,KAAK,EAAE,OADc;AAErBsM,IAAAA,WAAW,EAAE,UAFQ;AAGrBvM,IAAAA,QAAQ,EAAE,YAHW;AAIrBwM,IAAAA,OAAO,EAAE;AAJY,GAAtB;AAOA,MAAIC,aAAa,GAAG;AACnBC,IAAAA,WAAW,EAAEhY,KAAK,CAACiY,iBADA;AACmB;AACA;AACA;AACA;AACtC5E,IAAAA,MAAM,EAAErT,KAAK,CAACkY,iBALK;AAMnBC,IAAAA,IAAI,EAAEnY,KAAK,CAACoY;AANO,GAApB;AASA,MAAIC,cAAc,GAAG;AACpB,UAAM,WADc;AAEpB,UAAM,YAFc;AAGpB,UAAM,OAHc;AAIpB,UAAM,cAJc;AAKpB,WAAO,qBALa;AAMpB,WAAO;AANa,GAArB;AASA,MAAIC,WAAW,GAAG;AACjBC,IAAAA,MAAM,EAAE,QADS;AAEjBC,IAAAA,IAAI,EAAE,MAFW;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GAAlB;AAMA,MAAIC,iBAAiB,GAAG;AACvB,iBAAa1Y,KAAK,CAAC2Y,UADI;AAEvB,kBAAc3Y,KAAK,CAAC4Y;AAFG,GAAxB;AAKA;;AAEA,WAASC,UAAT,CAAqBnY,GAArB,EAA0BM,IAA1B,EAAiC;AAEhC;AACA,QAAK,OAAON,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAxC,EAA6C,OAAO,EAAP,CAHb,CAKhC;;AACA,QAAK,mBAAmBoY,IAAnB,CAAyBpY,GAAzB,CAAL,EAAsC,OAAOA,GAAP,CANN,CAQhC;;AACA,QAAK,gBAAgBoY,IAAhB,CAAsBpY,GAAtB,CAAL,EAAmC,OAAOA,GAAP,CATH,CAWhC;;AACA,QAAK,aAAaoY,IAAb,CAAmBpY,GAAnB,CAAL,EAAgC,OAAOA,GAAP,CAZA,CAchC;;AACA,WAAOM,IAAI,GAAGN,GAAd;AAEA;AAED;;;;;AAGA,WAASqY,qBAAT,GAAiC;AAEhC,WAAO,IAAI/Y,KAAK,CAACgZ,oBAAV,CAAgC;AACtC/S,MAAAA,KAAK,EAAE,QAD+B;AAEtCuH,MAAAA,QAAQ,EAAE,QAF4B;AAGtCZ,MAAAA,SAAS,EAAE,CAH2B;AAItCD,MAAAA,SAAS,EAAE,CAJ2B;AAKtCoB,MAAAA,WAAW,EAAE,KALyB;AAMtCkL,MAAAA,SAAS,EAAE,IAN2B;AAOtCC,MAAAA,IAAI,EAAElZ,KAAK,CAAC2V;AAP0B,KAAhC,CAAP;AAUA;;AAED,WAAS7Q,8BAAT,CAAyCqU,eAAzC,EAA0D/T,MAA1D,EAAkEgU,SAAlE,EAA8E;AAE7E;AAEA,SAAM,IAAI5T,IAAV,IAAkB4T,SAAS,CAAC9W,UAA5B,EAAyC;AAExC,UAAK6W,eAAe,CAAE3T,IAAF,CAAf,KAA4BrF,SAAjC,EAA6C;AAE5CiF,QAAAA,MAAM,CAACP,QAAP,CAAgBwU,cAAhB,GAAiCjU,MAAM,CAACP,QAAP,CAAgBwU,cAAhB,IAAkC,EAAnE;AACAjU,QAAAA,MAAM,CAACP,QAAP,CAAgBwU,cAAhB,CAAgC7T,IAAhC,IAAyC4T,SAAS,CAAC9W,UAAV,CAAsBkD,IAAtB,CAAzC;AAEA;AAED;AAED;AAED;;;;;;AAIA,WAAS8T,sBAAT,CAAiClU,MAAjC,EAAyCmU,OAAzC,EAAmD;AAElD,QAAKA,OAAO,CAACC,MAAR,KAAmBrZ,SAAxB,EAAoC;AAEnC,UAAK,QAAOoZ,OAAO,CAACC,MAAf,MAA0B,QAA/B,EAA0C;AAEzCpU,QAAAA,MAAM,CAACP,QAAP,GAAkB0U,OAAO,CAACC,MAA1B;AAEA,OAJD,MAIO;AAENlY,QAAAA,OAAO,CAAC+C,IAAR,CAAc,wDAAwDkV,OAAO,CAACC,MAA9E;AAEA;AAED;AAED;AAED;;;;;;;;;;AAQA,WAASC,eAAT,CAA0B1O,QAA1B,EAAoC2O,OAApC,EAA6CpV,MAA7C,EAAsD;AAErD,QAAIqV,gBAAgB,GAAG,KAAvB;AACA,QAAIC,cAAc,GAAG,KAArB;;AAEA,SAAM,IAAIxW,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGoK,OAAO,CAACrW,MAA9B,EAAsCD,CAAC,GAAGkM,EAA1C,EAA8ClM,CAAC,EAA/C,EAAqD;AAEpD,UAAImD,MAAM,GAAGmT,OAAO,CAAEtW,CAAF,CAApB;AAEA,UAAKmD,MAAM,CAAC8Q,QAAP,KAAoBlX,SAAzB,EAAqCwZ,gBAAgB,GAAG,IAAnB;AACrC,UAAKpT,MAAM,CAAC+Q,MAAP,KAAkBnX,SAAvB,EAAmCyZ,cAAc,GAAG,IAAjB;AAEnC,UAAKD,gBAAgB,IAAIC,cAAzB,EAA0C;AAE1C;;AAED,QAAK,CAAED,gBAAF,IAAsB,CAAEC,cAA7B,EAA8C,OAAOtS,OAAO,CAACC,OAAR,CAAiBwD,QAAjB,CAAP;AAE9C,QAAI8O,wBAAwB,GAAG,EAA/B;AACA,QAAIC,sBAAsB,GAAG,EAA7B;;AAEA,SAAM,IAAI1W,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGoK,OAAO,CAACrW,MAA9B,EAAsCD,CAAC,GAAGkM,EAA1C,EAA8ClM,CAAC,EAA/C,EAAqD;AAEpD,UAAImD,MAAM,GAAGmT,OAAO,CAAEtW,CAAF,CAApB;;AAEA,UAAKuW,gBAAL,EAAwB;AAEvB;AACA,YAAII,QAAQ,GAAGxT,MAAM,CAAC8Q,QAAP,KAAoBlX,SAApB,GACZmE,MAAM,CAACsG,aAAP,CAAsB,UAAtB,EAAkCrE,MAAM,CAAC8Q,QAAzC,EACAxM,IADA,CACM,UAAWkP,QAAX,EAAsB;AAC5B;AACA,iBAAOC,oBAAoB,CAAED,QAAF,CAA3B;AACA,SAJA,CADY,GAMZhP,QAAQ,CAACd,UAAT,CAAoBzD,QANvB;AAQAqT,QAAAA,wBAAwB,CAACvR,IAAzB,CAA+ByR,QAA/B;AAEA;;AAED,UAAKH,cAAL,EAAsB;AAErB;AACA,YAAIG,QAAQ,GAAGxT,MAAM,CAAC+Q,MAAP,KAAkBnX,SAAlB,GACZmE,MAAM,CAACsG,aAAP,CAAsB,UAAtB,EAAkCrE,MAAM,CAAC+Q,MAAzC,EACAzM,IADA,CACM,UAAWkP,QAAX,EAAsB;AAC5B,iBAAOC,oBAAoB,CAAED,QAAF,CAA3B;AACA,SAHA,CADY,GAKZhP,QAAQ,CAACd,UAAT,CAAoBgQ,MALvB;AAOAH,QAAAA,sBAAsB,CAACxR,IAAvB,CAA6ByR,QAA7B;AAEA;AAED;;AAED,WAAOzS,OAAO,CAACkB,GAAR,CAAa,CACnBlB,OAAO,CAACkB,GAAR,CAAaqR,wBAAb,CADmB,EAEnBvS,OAAO,CAACkB,GAAR,CAAasR,sBAAb,CAFmB,CAAb,EAGHjP,IAHG,CAGG,UAAWL,SAAX,EAAuB;AAEhC,UAAI0P,cAAc,GAAG1P,SAAS,CAAE,CAAF,CAA9B;AACA,UAAI2P,YAAY,GAAG3P,SAAS,CAAE,CAAF,CAA5B;;AAEA,WAAM,IAAIpH,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGoK,OAAO,CAACrW,MAA9B,EAAsCD,CAAC,GAAGkM,EAA1C,EAA8ClM,CAAC,EAA/C,EAAqD;AAEpD,YAAImD,MAAM,GAAGmT,OAAO,CAAEtW,CAAF,CAApB;AACA,YAAIiH,aAAa,GAAG,gBAAgBjH,CAApC;;AAEA,YAAKuW,gBAAL,EAAwB;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAKpT,MAAM,CAAC8Q,QAAP,KAAoBlX,SAAzB,EAAqC;AAEpC,gBAAIia,iBAAiB,GAAGF,cAAc,CAAE9W,CAAF,CAAtC;AACAgX,YAAAA,iBAAiB,CAAC5U,IAAlB,GAAyB6E,aAAzB;AAEA,gBAAI7D,QAAQ,GAAGuE,QAAQ,CAACd,UAAT,CAAoBzD,QAAnC;;AAEA,iBAAM,IAAI6T,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGF,iBAAiB,CAACG,KAAxC,EAA+CF,CAAC,GAAGC,EAAnD,EAAuDD,CAAC,EAAxD,EAA8D;AAE7DD,cAAAA,iBAAiB,CAACI,MAAlB,CACCH,CADD,EAECD,iBAAiB,CAACK,IAAlB,CAAwBJ,CAAxB,IAA8B7T,QAAQ,CAACiU,IAAT,CAAeJ,CAAf,CAF/B,EAGCD,iBAAiB,CAACM,IAAlB,CAAwBL,CAAxB,IAA8B7T,QAAQ,CAACkU,IAAT,CAAeL,CAAf,CAH/B,EAICD,iBAAiB,CAACO,IAAlB,CAAwBN,CAAxB,IAA8B7T,QAAQ,CAACmU,IAAT,CAAeN,CAAf,CAJ/B;AAOA;AAED;AAED;;AAED,YAAKT,cAAL,EAAsB;AAErB;AAEA,cAAKrT,MAAM,CAAC+Q,MAAP,KAAkBnX,SAAvB,EAAmC;AAElC,gBAAIya,eAAe,GAAGT,YAAY,CAAE/W,CAAF,CAAlC;AACAwX,YAAAA,eAAe,CAACpV,IAAhB,GAAuB6E,aAAvB;AAEA,gBAAI4P,MAAM,GAAGlP,QAAQ,CAACd,UAAT,CAAoBgQ,MAAjC;;AAEA,iBAAM,IAAII,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGM,eAAe,CAACL,KAAtC,EAA6CF,CAAC,GAAGC,EAAjD,EAAqDD,CAAC,EAAtD,EAA4D;AAE3DO,cAAAA,eAAe,CAACJ,MAAhB,CACCH,CADD,EAECO,eAAe,CAACH,IAAhB,CAAsBJ,CAAtB,IAA4BJ,MAAM,CAACQ,IAAP,CAAaJ,CAAb,CAF7B,EAGCO,eAAe,CAACF,IAAhB,CAAsBL,CAAtB,IAA4BJ,MAAM,CAACS,IAAP,CAAaL,CAAb,CAH7B,EAICO,eAAe,CAACD,IAAhB,CAAsBN,CAAtB,IAA4BJ,MAAM,CAACU,IAAP,CAAaN,CAAb,CAJ7B;AAOA;AAED;AAED;AAED;;AAED,UAAKV,gBAAL,EAAwB5O,QAAQ,CAAC8P,eAAT,CAAyBrU,QAAzB,GAAoC0T,cAApC;AACxB,UAAKN,cAAL,EAAsB7O,QAAQ,CAAC8P,eAAT,CAAyBZ,MAAzB,GAAkCE,YAAlC;AAEtB,aAAOpP,QAAP;AAEA,KAlFM,CAAP;AAoFA;AAED;;;;;;AAIA,WAAS+P,kBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA6C;AAE5CD,IAAAA,IAAI,CAACD,kBAAL;;AAEA,QAAKE,OAAO,CAAClD,OAAR,KAAoB3X,SAAzB,EAAqC;AAEpC,WAAM,IAAIiD,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG0L,OAAO,CAAClD,OAAR,CAAgBzU,MAAtC,EAA8CD,CAAC,GAAGkM,EAAlD,EAAsDlM,CAAC,EAAvD,EAA6D;AAE5D2X,QAAAA,IAAI,CAACE,qBAAL,CAA4B7X,CAA5B,IAAkC4X,OAAO,CAAClD,OAAR,CAAiB1U,CAAjB,CAAlC;AAEA;AAED,KAZ2C,CAc5C;;;AACA,QAAK4X,OAAO,CAACxB,MAAR,IAAkBvR,KAAK,CAACC,OAAN,CAAe8S,OAAO,CAACxB,MAAR,CAAe0B,WAA9B,CAAvB,EAAqE;AAEpE,UAAIA,WAAW,GAAGF,OAAO,CAACxB,MAAR,CAAe0B,WAAjC;;AAEA,UAAKH,IAAI,CAACE,qBAAL,CAA2B5X,MAA3B,KAAsC6X,WAAW,CAAC7X,MAAvD,EAAgE;AAE/D0X,QAAAA,IAAI,CAACI,qBAAL,GAA6B,EAA7B;;AAEA,aAAM,IAAI/X,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG4L,WAAW,CAAC7X,MAAlC,EAA0CD,CAAC,GAAGkM,EAA9C,EAAkDlM,CAAC,EAAnD,EAAyD;AAExD2X,UAAAA,IAAI,CAACI,qBAAL,CAA4BD,WAAW,CAAE9X,CAAF,CAAvC,IAAiDA,CAAjD;AAEA;AAED,OAVD,MAUO;AAEN9B,QAAAA,OAAO,CAAC+C,IAAR,CAAc,sEAAd;AAEA;AAED;AAED;;AAED,WAAS+W,gBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAkC;AAEjC,QAAIC,SAAS,GAAGF,CAAC,CAAC/Y,UAAF,GAAe+Y,CAAC,CAAC/Y,UAAF,CAAcK,UAAU,CAACmB,0BAAzB,CAAf,GAAuE3D,SAAvF;AACA,QAAIqb,SAAS,GAAGF,CAAC,CAAChZ,UAAF,GAAegZ,CAAC,CAAChZ,UAAF,CAAcK,UAAU,CAACmB,0BAAzB,CAAf,GAAuE3D,SAAvF;;AAEA,QAAKob,SAAS,IAAIC,SAAlB,EAA8B;AAE7B,UAAKD,SAAS,CAACxR,UAAV,KAAyByR,SAAS,CAACzR,UAAxC,EAAqD,OAAO,KAAP;AAErD,aAAO0R,aAAa,CAAEF,SAAS,CAACtR,UAAZ,EAAwBuR,SAAS,CAACvR,UAAlC,CAApB;AAEA;;AAED,QAAKoR,CAAC,CAACK,OAAF,KAAcJ,CAAC,CAACI,OAArB,EAA+B;AAE9B,aAAO,KAAP;AAEA;;AAED,WAAOD,aAAa,CAAEJ,CAAC,CAACpR,UAAJ,EAAgBqR,CAAC,CAACrR,UAAlB,CAApB;AAEA;;AAED,WAASwR,aAAT,CAAwBJ,CAAxB,EAA2BC,CAA3B,EAA+B;AAE9B,QAAKvK,MAAM,CAAC4K,IAAP,CAAaN,CAAb,EAAiBhY,MAAjB,KAA4B0N,MAAM,CAAC4K,IAAP,CAAaL,CAAb,EAAiBjY,MAAlD,EAA2D,OAAO,KAAP;;AAE3D,SAAM,IAAI6B,GAAV,IAAiBmW,CAAjB,EAAqB;AAEpB,UAAKA,CAAC,CAAEnW,GAAF,CAAD,KAAaoW,CAAC,CAAEpW,GAAF,CAAnB,EAA6B,OAAO,KAAP;AAE7B;;AAED,WAAO,IAAP;AAEA;;AAED,WAAS0W,YAAT,CAAuBP,CAAvB,EAA0BC,CAA1B,EAA8B;AAE7B,QAAKD,CAAC,CAAChY,MAAF,KAAaiY,CAAC,CAACjY,MAApB,EAA6B,OAAO,KAAP;;AAE7B,SAAM,IAAID,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG+L,CAAC,CAAChY,MAAxB,EAAgCD,CAAC,GAAGkM,EAApC,EAAwClM,CAAC,EAAzC,EAA+C;AAE9C,UAAKiY,CAAC,CAAEjY,CAAF,CAAD,KAAWkY,CAAC,CAAElY,CAAF,CAAjB,EAAyB,OAAO,KAAP;AAEzB;;AAED,WAAO,IAAP;AAEA;;AAED,WAASyY,iBAAT,CAA4BC,KAA5B,EAAmCC,YAAnC,EAAkD;AAEjD,SAAM,IAAI3Y,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGwM,KAAK,CAACzY,MAA5B,EAAoCD,CAAC,GAAGkM,EAAxC,EAA4ClM,CAAC,EAA7C,EAAmD;AAElD,UAAI4Y,MAAM,GAAGF,KAAK,CAAE1Y,CAAF,CAAlB;AAEA,UAAKgY,gBAAgB,CAAEY,MAAM,CAACnS,SAAT,EAAoBkS,YAApB,CAArB,EAA0D,OAAOC,MAAM,CAACC,OAAd;AAE1D;;AAED,WAAO,IAAP;AAEA;;AAED,WAASC,yBAAT,CAAoCJ,KAApC,EAA2CK,UAA3C,EAAwD;AAEvD,SAAM,IAAI/Y,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGwM,KAAK,CAACzY,MAA5B,EAAoCD,CAAC,GAAGkM,EAAxC,EAA4ClM,CAAC,EAA7C,EAAmD;AAElD,UAAI4Y,MAAM,GAAGF,KAAK,CAAE1Y,CAAF,CAAlB;AAEA,UAAKwY,YAAY,CAAEO,UAAF,EAAcH,MAAM,CAACI,cAArB,CAAjB,EAAyD,OAAOJ,MAAM,CAACjR,QAAd;AAEzD;;AAED,WAAO,IAAP;AAEA;;AAED,WAASsR,0BAAT,CAAqCP,KAArC,EAA4C/Q,QAA5C,EAAsDuR,UAAtD,EAAmE;AAElE,SAAM,IAAIlZ,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGwM,KAAK,CAACzY,MAA5B,EAAoCD,CAAC,GAAGkM,EAAxC,EAA4ClM,CAAC,EAA7C,EAAmD;AAElD,UAAI4Y,MAAM,GAAGF,KAAK,CAAE1Y,CAAF,CAAlB;AAEA,UAAK2H,QAAQ,KAAKiR,MAAM,CAACO,YAApB,IAAoCX,YAAY,CAAEU,UAAF,EAAcN,MAAM,CAACM,UAArB,CAArD,EAAyF,OAAON,MAAM,CAACjR,QAAd;AAEzF;;AAED,WAAO,IAAP;AAEA;;AAED,WAASiP,oBAAT,CAA+BhP,SAA/B,EAA2C;AAE1C,QAAKA,SAAS,CAACwR,4BAAf,EAA8C;AAE7C,UAAIjC,KAAK,GAAGvP,SAAS,CAACuP,KAAtB;AACA,UAAIkC,QAAQ,GAAGzR,SAAS,CAACyR,QAAzB;AACA,UAAIrU,KAAK,GAAG4C,SAAS,CAAC5C,KAAV,CAAgBa,KAAhB,CAAuB,CAAvB,EAA0BsR,KAAK,GAAGkC,QAAlC,CAAZ;;AAEA,WAAM,IAAIrZ,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGmX,KAArB,EAA4B,EAAGnX,CAA/B,EAAmC;AAElCgF,QAAAA,KAAK,CAAEhF,CAAF,CAAL,GAAa4H,SAAS,CAACyP,IAAV,CAAgBrX,CAAhB,CAAb;AACA,YAAKqZ,QAAQ,IAAI,CAAjB,EAAqBrU,KAAK,CAAEhF,CAAC,GAAG,CAAN,CAAL,GAAiB4H,SAAS,CAAC0P,IAAV,CAAgBtX,CAAhB,CAAjB;AACrB,YAAKqZ,QAAQ,IAAI,CAAjB,EAAqBrU,KAAK,CAAEhF,CAAC,GAAG,CAAN,CAAL,GAAiB4H,SAAS,CAAC2P,IAAV,CAAgBvX,CAAhB,CAAjB;AACrB,YAAKqZ,QAAQ,IAAI,CAAjB,EAAqBrU,KAAK,CAAEhF,CAAC,GAAG,CAAN,CAAL,GAAiB4H,SAAS,CAAC0R,IAAV,CAAgBtZ,CAAhB,CAAjB;AAErB;;AAED,aAAO,IAAIpD,KAAK,CAAC2c,eAAV,CAA2BvU,KAA3B,EAAkCqU,QAAlC,EAA4CzR,SAAS,CAACL,UAAtD,CAAP;AAEA;;AAED,WAAOK,SAAS,CAACI,KAAV,EAAP;AAEA;AAED;;;;;;;;;;AAQA,WAASwR,mBAAT,CAA8BN,UAA9B,EAA2C;AAE1C,QAAKA,UAAU,CAACjZ,MAAX,GAAoB,CAAzB,EAA6B,OAAO,KAAP;AAE7B,QAAIwZ,UAAU,GAAGP,UAAU,CAAE,CAAF,CAA3B;AACA,QAAIQ,QAAQ,GAAGD,UAAU,CAACnD,OAAX,IAAsB,EAArC;AAEA,QAAKmD,UAAU,CAACnB,OAAX,KAAuBvb,SAA5B,EAAwC,OAAO,KAAP;;AAExC,SAAM,IAAIiD,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGgN,UAAU,CAACjZ,MAAjC,EAAyCD,CAAC,GAAGkM,EAA7C,EAAiDlM,CAAC,EAAlD,EAAwD;AAEvD,UAAIyG,SAAS,GAAGyS,UAAU,CAAElZ,CAAF,CAA1B;AAEA,UAAKyZ,UAAU,CAACE,IAAX,KAAoBlT,SAAS,CAACkT,IAAnC,EAA0C,OAAO,KAAP;AAC1C,UAAKlT,SAAS,CAAC6R,OAAV,KAAsBvb,SAA3B,EAAuC,OAAO,KAAP;AACvC,UAAK0J,SAAS,CAACvH,UAAV,IAAwBuH,SAAS,CAACvH,UAAV,CAAsBK,UAAU,CAACmB,0BAAjC,CAA7B,EAA6F,OAAO,KAAP;AAC7F,UAAK,CAAE2X,aAAa,CAAEoB,UAAU,CAAC5S,UAAb,EAAyBJ,SAAS,CAACI,UAAnC,CAApB,EAAsE,OAAO,KAAP;AAEtE,UAAIyP,OAAO,GAAG7P,SAAS,CAAC6P,OAAV,IAAqB,EAAnC;AAEA,UAAKoD,QAAQ,CAACzZ,MAAT,KAAoBqW,OAAO,CAACrW,MAAjC,EAA0C,OAAO,KAAP;;AAE1C,WAAM,IAAIgX,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGwC,QAAQ,CAACzZ,MAA/B,EAAuCgX,CAAC,GAAGC,EAA3C,EAA+CD,CAAC,EAAhD,EAAsD;AAErD,YAAK,CAAEoB,aAAa,CAAEqB,QAAQ,CAAEzC,CAAF,CAAV,EAAiBX,OAAO,CAAEW,CAAF,CAAxB,CAApB,EAAsD,OAAO,KAAP;AAEtD;AAED;;AAED,WAAO,IAAP;AAEA;AAED;;;AAEA,WAAS9V,UAAT,CAAqBzB,IAArB,EAA2BR,UAA3B,EAAuC0a,OAAvC,EAAiD;AAEhD,SAAKla,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,SAAKR,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACA,SAAK0a,OAAL,GAAeA,OAAO,IAAI,EAA1B,CAJgD,CAMhD;;AACA,SAAKlB,KAAL,GAAa,IAAI/W,YAAJ,EAAb,CAPgD,CAShD;;AACA,SAAKkY,cAAL,GAAsB,EAAtB;AACA,SAAKC,uBAAL,GAA+B,EAA/B;AACA,SAAKC,sBAAL,GAA8B,EAA9B;AAEA,SAAKC,aAAL,GAAqB,IAAIpd,KAAK,CAACqd,aAAV,CAAyB,KAAKL,OAAL,CAAa9c,OAAtC,CAArB;AACA,SAAKkd,aAAL,CAAmBnb,cAAnB,CAAmC,KAAK+a,OAAL,CAAaxc,WAAhD;AAEA,SAAK8c,UAAL,GAAkB,IAAItd,KAAK,CAAC2B,UAAV,CAAsB,KAAKqb,OAAL,CAAa9c,OAAnC,CAAlB;AACA,SAAKod,UAAL,CAAgBzb,eAAhB,CAAiC,aAAjC;AAEA;;AAED0C,EAAAA,UAAU,CAACjE,SAAX,CAAqByB,KAArB,GAA6B,UAAWpB,MAAX,EAAmBE,OAAnB,EAA6B;AAEzD,QAAIiC,IAAI,GAAG,KAAKA,IAAhB,CAFyD,CAIzD;;AACA,SAAKgZ,KAAL,CAAWxW,SAAX,GALyD,CAOzD;;AACA,SAAKiY,QAAL,GARyD,CAUzD;;AACA,SAAKC,oBAAL,CAA2B,CAE1B,OAF0B,EAG1B,WAH0B,EAI1B,QAJ0B,CAA3B,EAMI3S,IANJ,CAMU,UAAW4S,YAAX,EAA0B;AAEnC,UAAIhZ,MAAM,GAAGgZ,YAAY,CAAChZ,MAAb,IAAuB,EAApC;AACA,UAAID,KAAK,GAAGC,MAAM,CAAE3B,IAAI,CAAC0B,KAAL,IAAc,CAAhB,CAAlB;AACA,UAAIG,UAAU,GAAG8Y,YAAY,CAAC9Y,UAAb,IAA2B,EAA5C;AACA,UAAID,OAAO,GAAG+Y,YAAY,CAAC/Y,OAAb,IAAwB,EAAtC;AAEA/D,MAAAA,MAAM,CAAE6D,KAAF,EAASC,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsC7B,IAAtC,CAAN;AAEA,KAfD,EAeI4a,KAfJ,CAeW7c,OAfX;AAiBA,GA5BD;AA8BA;;;;;AAGA0D,EAAAA,UAAU,CAACjE,SAAX,CAAqBid,QAArB,GAAgC,YAAY;AAE3C,QAAII,QAAQ,GAAG,KAAK7a,IAAL,CAAU8a,KAAV,IAAmB,EAAlC;AACA,QAAIC,QAAQ,GAAG,KAAK/a,IAAL,CAAUgb,KAAV,IAAmB,EAAlC;AACA,QAAIC,QAAQ,GAAG,KAAKjb,IAAL,CAAUkb,MAAV,IAAoB,EAAnC;AAEA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,QAAQ,GAAG,EAAf,CAP2C,CAS3C;AACA;;AACA,SAAM,IAAIC,SAAS,GAAG,CAAhB,EAAmBC,UAAU,GAAGP,QAAQ,CAACxa,MAA/C,EAAuD8a,SAAS,GAAGC,UAAnE,EAA+ED,SAAS,EAAxF,EAA8F;AAE7F,UAAIE,MAAM,GAAGR,QAAQ,CAAEM,SAAF,CAAR,CAAsBE,MAAnC;;AAEA,WAAM,IAAIjb,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG+O,MAAM,CAAChb,MAA7B,EAAqCD,CAAC,GAAGkM,EAAzC,EAA6ClM,CAAC,EAA9C,EAAoD;AAEnDua,QAAAA,QAAQ,CAAEU,MAAM,CAAEjb,CAAF,CAAR,CAAR,CAAwBkb,MAAxB,GAAiC,IAAjC;AAEA;AAED,KArB0C,CAuB3C;AACA;AACA;AACA;AACA;;;AACA,SAAM,IAAIC,SAAS,GAAG,CAAhB,EAAmBC,UAAU,GAAGb,QAAQ,CAACta,MAA/C,EAAuDkb,SAAS,GAAGC,UAAnE,EAA+ED,SAAS,EAAxF,EAA8F;AAE7F,UAAIE,OAAO,GAAGd,QAAQ,CAAEY,SAAF,CAAtB;;AAEA,UAAKE,OAAO,CAAC1D,IAAR,KAAiB5a,SAAtB,EAAkC;AAEjC,YAAK8d,cAAc,CAAEQ,OAAO,CAAC1D,IAAV,CAAd,KAAmC5a,SAAxC,EAAoD;AAEnD8d,UAAAA,cAAc,CAAEQ,OAAO,CAAC1D,IAAV,CAAd,GAAiCmD,QAAQ,CAAEO,OAAO,CAAC1D,IAAV,CAAR,GAA2B,CAA5D;AAEA;;AAEDkD,QAAAA,cAAc,CAAEQ,OAAO,CAAC1D,IAAV,CAAd,GARiC,CAUjC;AACA;AACA;;AACA,YAAK0D,OAAO,CAACC,IAAR,KAAiBve,SAAtB,EAAkC;AAEjC4d,UAAAA,QAAQ,CAAEU,OAAO,CAAC1D,IAAV,CAAR,CAAyB4D,aAAzB,GAAyC,IAAzC;AAEA;AAED;AAED;;AAED,SAAK7b,IAAL,CAAUmb,cAAV,GAA2BA,cAA3B;AACA,SAAKnb,IAAL,CAAUob,QAAV,GAAqBA,QAArB;AAEA,GA1DD;AA4DA;;;;;;;;AAMA3Z,EAAAA,UAAU,CAACjE,SAAX,CAAqBsK,aAArB,GAAqC,UAAWvE,IAAX,EAAiB6K,KAAjB,EAAyB;AAE7D,QAAI0N,QAAQ,GAAGvY,IAAI,GAAG,GAAP,GAAa6K,KAA5B;AACA,QAAI2N,UAAU,GAAG,KAAK/C,KAAL,CAAW7W,GAAX,CAAgB2Z,QAAhB,CAAjB;;AAEA,QAAK,CAAEC,UAAP,EAAoB;AAEnB,cAASxY,IAAT;AAEC,aAAK,OAAL;AACCwY,UAAAA,UAAU,GAAG,KAAKC,SAAL,CAAgB5N,KAAhB,CAAb;AACA;;AAED,aAAK,MAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKE,QAAL,CAAe7N,KAAf,CAAb;AACA;;AAED,aAAK,MAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKG,QAAL,CAAe9N,KAAf,CAAb;AACA;;AAED,aAAK,UAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKI,YAAL,CAAmB/N,KAAnB,CAAb;AACA;;AAED,aAAK,YAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKK,cAAL,CAAqBhO,KAArB,CAAb;AACA;;AAED,aAAK,QAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKM,UAAL,CAAiBjO,KAAjB,CAAb;AACA;;AAED,aAAK,UAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKO,YAAL,CAAmBlO,KAAnB,CAAb;AACA;;AAED,aAAK,SAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKQ,WAAL,CAAkBnO,KAAlB,CAAb;AACA;;AAED,aAAK,MAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKS,QAAL,CAAepO,KAAf,CAAb;AACA;;AAED,aAAK,WAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKU,aAAL,CAAoBrO,KAApB,CAAb;AACA;;AAED,aAAK,QAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKW,UAAL,CAAiBtO,KAAjB,CAAb;AACA;;AAED,aAAK,OAAL;AACC2N,UAAAA,UAAU,GAAG,KAAKvc,UAAL,CAAiBK,UAAU,CAACa,mBAA5B,EAAkDqC,SAAlD,CAA6DqL,KAA7D,CAAb;AACA;;AAED;AACC,gBAAM,IAAIhO,KAAJ,CAAW,mBAAmBmD,IAA9B,CAAN;AAnDF;;AAuDA,WAAKyV,KAAL,CAAW3W,GAAX,CAAgByZ,QAAhB,EAA0BC,UAA1B;AAEA;;AAED,WAAOA,UAAP;AAEA,GApED;AAsEA;;;;;;;AAKAta,EAAAA,UAAU,CAACjE,SAAX,CAAqBmf,eAArB,GAAuC,UAAWpZ,IAAX,EAAkB;AAExD,QAAIoX,YAAY,GAAG,KAAK3B,KAAL,CAAW7W,GAAX,CAAgBoB,IAAhB,CAAnB;;AAEA,QAAK,CAAEoX,YAAP,EAAsB;AAErB,UAAInZ,MAAM,GAAG,IAAb;AACA,UAAIob,IAAI,GAAG,KAAK5c,IAAL,CAAWuD,IAAI,IAAKA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,GAA9B,CAAf,KAAwD,EAAnE;AAEAoX,MAAAA,YAAY,GAAGnW,OAAO,CAACkB,GAAR,CAAakX,IAAI,CAACzR,GAAL,CAAU,UAAW0R,GAAX,EAAgBzO,KAAhB,EAAwB;AAE7D,eAAO5M,MAAM,CAACsG,aAAP,CAAsBvE,IAAtB,EAA4B6K,KAA5B,CAAP;AAEA,OAJ2B,CAAb,CAAf;AAMA,WAAK4K,KAAL,CAAW3W,GAAX,CAAgBkB,IAAhB,EAAsBoX,YAAtB;AAEA;;AAED,WAAOA,YAAP;AAEA,GArBD;AAuBA;;;;;;;AAKAlZ,EAAAA,UAAU,CAACjE,SAAX,CAAqBkd,oBAArB,GAA4C,UAAWoC,KAAX,EAAmB;AAE9D,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIhY,OAAO,GAAG,EAAd;;AAEA,SAAM,IAAIzE,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGsQ,KAAK,CAACvc,MAA5B,EAAoCD,CAAC,GAAGkM,EAAxC,EAA4ClM,CAAC,EAA7C,EAAmD;AAElD,UAAIiD,IAAI,GAAGuZ,KAAK,CAAExc,CAAF,CAAhB;AACA,UAAIlB,KAAK,GAAG,KAAKud,eAAL,CAAsBpZ,IAAtB,CAAZ,CAHkD,CAKlD;;AACAnE,MAAAA,KAAK,GAAGA,KAAK,CAAC2I,IAAN,CAAY,UAAW3F,GAAX,EAAgBhD,KAAhB,EAAwB;AAE3C2d,QAAAA,OAAO,CAAE3a,GAAF,CAAP,GAAiBhD,KAAjB;AAEA,OAJmB,CAIlB4d,IAJkB,CAIZ,IAJY,EAINzZ,IAAI,IAAKA,IAAI,KAAK,MAAT,GAAkB,IAAlB,GAAyB,GAA9B,CAJE,CAAZ,CAAR;AAMAwB,MAAAA,OAAO,CAACS,IAAR,CAAcpG,KAAd;AAEA;;AAED,WAAOoF,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,aAAOgV,OAAP;AAEA,KAJM,CAAP;AAMA,GA3BD;AA6BA;;;;;;;AAKAtb,EAAAA,UAAU,CAACjE,SAAX,CAAqB6e,UAArB,GAAkC,UAAWY,WAAX,EAAyB;AAE1D,QAAIC,SAAS,GAAG,KAAKld,IAAL,CAAUmd,OAAV,CAAmBF,WAAnB,CAAhB;AACA,QAAIre,MAAM,GAAG,KAAK4b,UAAlB;;AAEA,QAAK0C,SAAS,CAAC3Z,IAAV,IAAkB2Z,SAAS,CAAC3Z,IAAV,KAAmB,aAA1C,EAA0D;AAEzD,YAAM,IAAInD,KAAJ,CAAW,uBAAuB8c,SAAS,CAAC3Z,IAAjC,GAAwC,gCAAnD,CAAN;AAEA,KATyD,CAW1D;;;AACA,QAAK2Z,SAAS,CAACE,GAAV,KAAkB/f,SAAlB,IAA+B4f,WAAW,KAAK,CAApD,EAAwD;AAEvD,aAAOzY,OAAO,CAACC,OAAR,CAAiB,KAAKjF,UAAL,CAAiBK,UAAU,CAACC,eAA5B,EAA8CiG,IAA/D,CAAP;AAEA;;AAED,QAAImU,OAAO,GAAG,KAAKA,OAAnB;AAEA,WAAO,IAAI1V,OAAJ,CAAa,UAAWC,OAAX,EAAoB4Y,MAApB,EAA6B;AAEhDze,MAAAA,MAAM,CAACjB,IAAP,CAAaoY,UAAU,CAAEmH,SAAS,CAACE,GAAZ,EAAiBlD,OAAO,CAAChc,IAAzB,CAAvB,EAAwDuG,OAAxD,EAAiEpH,SAAjE,EAA4E,YAAY;AAEvFggB,QAAAA,MAAM,CAAE,IAAIjd,KAAJ,CAAW,8CAA8C8c,SAAS,CAACE,GAAxD,GAA8D,IAAzE,CAAF,CAAN;AAEA,OAJD;AAMA,KARM,CAAP;AAUA,GA9BD;AAgCA;;;;;;;AAKA3b,EAAAA,UAAU,CAACjE,SAAX,CAAqB4e,cAArB,GAAsC,UAAWpV,eAAX,EAA6B;AAElE,QAAIsW,aAAa,GAAG,KAAKtd,IAAL,CAAUud,WAAV,CAAuBvW,eAAvB,CAApB;AAEA,WAAO,KAAKc,aAAL,CAAoB,QAApB,EAA8BwV,aAAa,CAACE,MAA5C,EAAqDzV,IAArD,CAA2D,UAAWyV,MAAX,EAAoB;AAErF,UAAIjX,UAAU,GAAG+W,aAAa,CAAC/W,UAAd,IAA4B,CAA7C;AACA,UAAII,UAAU,GAAG2W,aAAa,CAAC3W,UAAd,IAA4B,CAA7C;AACA,aAAO6W,MAAM,CAACrX,KAAP,CAAcQ,UAAd,EAA0BA,UAAU,GAAGJ,UAAvC,CAAP;AAEA,KANM,CAAP;AAQA,GAZD;AAcA;;;;;;;AAKA9E,EAAAA,UAAU,CAACjE,SAAX,CAAqB2e,YAArB,GAAoC,UAAWsB,aAAX,EAA2B;AAE9D,QAAIjc,MAAM,GAAG,IAAb;AACA,QAAIxB,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAIyH,WAAW,GAAG,KAAKzH,IAAL,CAAU0H,SAAV,CAAqB+V,aAArB,CAAlB;;AAEA,QAAKhW,WAAW,CAACR,UAAZ,KAA2B5J,SAA3B,IAAwCoK,WAAW,CAACiW,MAAZ,KAAuBrgB,SAApE,EAAgF;AAE/E;AACA;AACA;AACA,aAAOmH,OAAO,CAACC,OAAR,CAAiB,IAAjB,CAAP;AAEA;;AAED,QAAIkZ,kBAAkB,GAAG,EAAzB;;AAEA,QAAKlW,WAAW,CAACR,UAAZ,KAA2B5J,SAAhC,EAA4C;AAE3CsgB,MAAAA,kBAAkB,CAACnY,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACR,UAA9C,CAAzB;AAEA,KAJD,MAIO;AAEN0W,MAAAA,kBAAkB,CAACnY,IAAnB,CAAyB,IAAzB;AAEA;;AAED,QAAKiC,WAAW,CAACiW,MAAZ,KAAuBrgB,SAA5B,EAAwC;AAEvCsgB,MAAAA,kBAAkB,CAACnY,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACiW,MAAZ,CAAmB9E,OAAnB,CAA2B3R,UAA7D,CAAzB;AACA0W,MAAAA,kBAAkB,CAACnY,IAAnB,CAAyB,KAAKsC,aAAL,CAAoB,YAApB,EAAkCL,WAAW,CAACiW,MAAZ,CAAmBpP,MAAnB,CAA0BrH,UAA5D,CAAzB;AAEA;;AAED,WAAOzC,OAAO,CAACkB,GAAR,CAAaiY,kBAAb,EAAkC5V,IAAlC,CAAwC,UAAWwV,WAAX,EAAyB;AAEvE,UAAItW,UAAU,GAAGsW,WAAW,CAAE,CAAF,CAA5B;AAEA,UAAI5D,QAAQ,GAAGrF,gBAAgB,CAAE7M,WAAW,CAAClE,IAAd,CAA/B;AACA,UAAIqa,UAAU,GAAGhW,qBAAqB,CAAEH,WAAW,CAACE,aAAd,CAAtC,CALuE,CAOvE;;AACA,UAAIkW,YAAY,GAAGD,UAAU,CAACE,iBAA9B;AACA,UAAIC,SAAS,GAAGF,YAAY,GAAGlE,QAA/B;AACA,UAAIhT,UAAU,GAAGc,WAAW,CAACd,UAAZ,IAA0B,CAA3C;AACA,UAAIqX,UAAU,GAAGvW,WAAW,CAACR,UAAZ,KAA2B5J,SAA3B,GAAuC2C,IAAI,CAACud,WAAL,CAAkB9V,WAAW,CAACR,UAA9B,EAA2C+W,UAAlF,GAA+F3gB,SAAhH;AACA,UAAIwK,UAAU,GAAGJ,WAAW,CAACI,UAAZ,KAA2B,IAA5C;AACA,UAAIvC,KAAJ,EAAW2Y,eAAX,CAbuE,CAevE;;AACA,UAAKD,UAAU,IAAIA,UAAU,KAAKD,SAAlC,EAA8C;AAE7C,YAAIG,UAAU,GAAG,uBAAuBzW,WAAW,CAACR,UAAnC,GAAgD,GAAhD,GAAsDQ,WAAW,CAACE,aAAnF;AACA,YAAIwW,EAAE,GAAG3c,MAAM,CAACwX,KAAP,CAAa7W,GAAb,CAAkB+b,UAAlB,CAAT;;AAEA,YAAK,CAAEC,EAAP,EAAY;AAEX;AACA7Y,UAAAA,KAAK,GAAG,IAAIsY,UAAJ,CAAgB3W,UAAhB,CAAR,CAHW,CAKX;;AACAkX,UAAAA,EAAE,GAAG,IAAIjhB,KAAK,CAACkhB,iBAAV,CAA6B9Y,KAA7B,EAAoC0Y,UAAU,GAAGH,YAAjD,CAAL;AAEArc,UAAAA,MAAM,CAACwX,KAAP,CAAa3W,GAAb,CAAkB6b,UAAlB,EAA8BC,EAA9B;AAEA;;AAEDF,QAAAA,eAAe,GAAG,IAAI/gB,KAAK,CAACmhB,0BAAV,CAAsCF,EAAtC,EAA0CxE,QAA1C,EAAoDhT,UAAU,GAAGkX,YAAjE,EAA+EhW,UAA/E,CAAlB;AAEA,OAnBD,MAmBO;AAEN,YAAKZ,UAAU,KAAK,IAApB,EAA2B;AAE1B3B,UAAAA,KAAK,GAAG,IAAIsY,UAAJ,CAAgBnW,WAAW,CAACgQ,KAAZ,GAAoBkC,QAApC,CAAR;AAEA,SAJD,MAIO;AAENrU,UAAAA,KAAK,GAAG,IAAIsY,UAAJ,CAAgB3W,UAAhB,EAA4BN,UAA5B,EAAwCc,WAAW,CAACgQ,KAAZ,GAAoBkC,QAA5D,CAAR;AAEA;;AAEDsE,QAAAA,eAAe,GAAG,IAAI/gB,KAAK,CAAC2c,eAAV,CAA2BvU,KAA3B,EAAkCqU,QAAlC,EAA4C9R,UAA5C,CAAlB;AAEA,OAjDsE,CAmDvE;;;AACA,UAAKJ,WAAW,CAACiW,MAAZ,KAAuBrgB,SAA5B,EAAwC;AAEvC,YAAIihB,eAAe,GAAGhK,gBAAgB,CAACiK,MAAvC;AACA,YAAIC,iBAAiB,GAAG5W,qBAAqB,CAAEH,WAAW,CAACiW,MAAZ,CAAmB9E,OAAnB,CAA2BjR,aAA7B,CAA7C;AAEA,YAAI8W,iBAAiB,GAAGhX,WAAW,CAACiW,MAAZ,CAAmB9E,OAAnB,CAA2BjS,UAA3B,IAAyC,CAAjE;AACA,YAAI+X,gBAAgB,GAAGjX,WAAW,CAACiW,MAAZ,CAAmBpP,MAAnB,CAA0B3H,UAA1B,IAAwC,CAA/D;AAEA,YAAIgY,aAAa,GAAG,IAAIH,iBAAJ,CAAuBjB,WAAW,CAAE,CAAF,CAAlC,EAAyCkB,iBAAzC,EAA4DhX,WAAW,CAACiW,MAAZ,CAAmBjG,KAAnB,GAA2B6G,eAAvF,CAApB;AACA,YAAIM,YAAY,GAAG,IAAIhB,UAAJ,CAAgBL,WAAW,CAAE,CAAF,CAA3B,EAAkCmB,gBAAlC,EAAoDjX,WAAW,CAACiW,MAAZ,CAAmBjG,KAAnB,GAA2BkC,QAA/E,CAAnB;;AAEA,YAAK1S,UAAU,KAAK,IAApB,EAA2B;AAE1B;AACAgX,UAAAA,eAAe,CAACY,QAAhB,CAA0BZ,eAAe,CAAC3Y,KAAhB,CAAsBa,KAAtB,EAA1B;AAEA;;AAED,aAAM,IAAI7F,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGmS,aAAa,CAACpe,MAApC,EAA4CD,CAAC,GAAGkM,EAAhD,EAAoDlM,CAAC,EAArD,EAA2D;AAE1D,cAAI8N,KAAK,GAAGuQ,aAAa,CAAEre,CAAF,CAAzB;AAEA2d,UAAAA,eAAe,CAACa,IAAhB,CAAsB1Q,KAAtB,EAA6BwQ,YAAY,CAAEte,CAAC,GAAGqZ,QAAN,CAAzC;AACA,cAAKA,QAAQ,IAAI,CAAjB,EAAqBsE,eAAe,CAACc,IAAhB,CAAsB3Q,KAAtB,EAA6BwQ,YAAY,CAAEte,CAAC,GAAGqZ,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqBsE,eAAe,CAACe,IAAhB,CAAsB5Q,KAAtB,EAA6BwQ,YAAY,CAAEte,CAAC,GAAGqZ,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqBsE,eAAe,CAACgB,IAAhB,CAAsB7Q,KAAtB,EAA6BwQ,YAAY,CAAEte,CAAC,GAAGqZ,QAAJ,GAAe,CAAjB,CAAzC;AACrB,cAAKA,QAAQ,IAAI,CAAjB,EAAqB,MAAM,IAAIvZ,KAAJ,CAAW,mEAAX,CAAN;AAErB;AAED;;AAED,aAAO6d,eAAP;AAEA,KAtFM,CAAP;AAwFA,GA3HD;AA6HA;;;;;;;AAKAxc,EAAAA,UAAU,CAACjE,SAAX,CAAqB+e,WAArB,GAAmC,UAAW2C,YAAX,EAA0B;AAE5D,QAAI1d,MAAM,GAAG,IAAb;AACA,QAAIxB,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIka,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAII,aAAa,GAAG,KAAKA,aAAzB;AAEA,QAAI6E,GAAG,GAAGC,MAAM,CAACD,GAAP,IAAcC,MAAM,CAACC,SAA/B;AAEA,QAAIC,UAAU,GAAGtf,IAAI,CAACuf,QAAL,CAAeL,YAAf,CAAjB;AAEA,QAAIM,iBAAiB,GAAGF,UAAU,CAAC9f,UAAX,IAAyB,EAAjD;AAEA,QAAI+M,MAAJ;;AAEA,QAAKiT,iBAAiB,CAAE3f,UAAU,CAACqB,gBAAb,CAAtB,EAAwD;AAEvDqL,MAAAA,MAAM,GAAGvM,IAAI,CAACyf,MAAL,CAAaD,iBAAiB,CAAE3f,UAAU,CAACqB,gBAAb,CAAjB,CAAiDqL,MAA9D,CAAT;AAEA,KAJD,MAIO;AAENA,MAAAA,MAAM,GAAGvM,IAAI,CAACyf,MAAL,CAAaH,UAAU,CAAC/S,MAAxB,CAAT;AAEA;;AAED,QAAImT,SAAS,GAAGnT,MAAM,CAAC6Q,GAAvB;AACA,QAAIuC,WAAW,GAAG,KAAlB;;AAEA,QAAKpT,MAAM,CAACtF,UAAP,KAAsB5J,SAA3B,EAAuC;AAEtC;AAEAqiB,MAAAA,SAAS,GAAGle,MAAM,CAACsG,aAAP,CAAsB,YAAtB,EAAoCyE,MAAM,CAACtF,UAA3C,EAAwDc,IAAxD,CAA8D,UAAWd,UAAX,EAAwB;AAEjG0Y,QAAAA,WAAW,GAAG,IAAd;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAU,CAAE5Y,UAAF,CAAV,EAA0B;AAAE1D,UAAAA,IAAI,EAAEgJ,MAAM,CAACuT;AAAf,SAA1B,CAAX;AACAJ,QAAAA,SAAS,GAAGP,GAAG,CAACY,eAAJ,CAAqBH,IAArB,CAAZ;AACA,eAAOF,SAAP;AAEA,OAPW,CAAZ;AASA;;AAED,WAAOlb,OAAO,CAACC,OAAR,CAAiBib,SAAjB,EAA6B3X,IAA7B,CAAmC,UAAW2X,SAAX,EAAuB;AAEhE;AAEA,UAAI9gB,MAAM,GAAG1B,KAAK,CAAC8iB,MAAN,CAAaC,QAAb,CAAsB9d,GAAtB,CAA2Bud,SAA3B,CAAb;;AAEA,UAAK,CAAE9gB,MAAP,EAAgB;AAEfA,QAAAA,MAAM,GAAG4gB,iBAAiB,CAAE3f,UAAU,CAACqB,gBAAb,CAAjB,GACNM,MAAM,CAAChC,UAAP,CAAmBK,UAAU,CAACqB,gBAA9B,EAAiDyB,SAD3C,GAEN2X,aAFH;AAIA;;AAED,aAAO,IAAI9V,OAAJ,CAAa,UAAWC,OAAX,EAAoB4Y,MAApB,EAA6B;AAEhDze,QAAAA,MAAM,CAACjB,IAAP,CAAaoY,UAAU,CAAE2J,SAAF,EAAaxF,OAAO,CAAChc,IAArB,CAAvB,EAAoDuG,OAApD,EAA6DpH,SAA7D,EAAwEggB,MAAxE;AAEA,OAJM,CAAP;AAMA,KApBM,EAoBHtV,IApBG,CAoBG,UAAWK,OAAX,EAAqB;AAE9B;AAEA,UAAKuX,WAAW,KAAK,IAArB,EAA4B;AAE3BR,QAAAA,GAAG,CAACe,eAAJ,CAAqBR,SAArB;AAEA;;AAEDtX,MAAAA,OAAO,CAAC+X,KAAR,GAAgB,KAAhB;AAEA,UAAKb,UAAU,CAAC5c,IAAX,KAAoBrF,SAAzB,EAAqC+K,OAAO,CAAC1F,IAAR,GAAe4c,UAAU,CAAC5c,IAA1B,CAZP,CAc9B;;AACA,UAAK6J,MAAM,CAACuT,QAAP,IAAmBlK,iBAAxB,EAA4C;AAE3CxN,QAAAA,OAAO,CAACgY,MAAR,GAAiBxK,iBAAiB,CAAErJ,MAAM,CAACuT,QAAT,CAAlC;AAEA;;AAED,UAAIO,QAAQ,GAAGrgB,IAAI,CAACqgB,QAAL,IAAiB,EAAhC;AACA,UAAIC,OAAO,GAAGD,QAAQ,CAAEf,UAAU,CAACgB,OAAb,CAAR,IAAkC,EAAhD;AAEAlY,MAAAA,OAAO,CAACmY,SAAR,GAAoBvO,aAAa,CAAEsO,OAAO,CAACC,SAAV,CAAb,IAAsCrjB,KAAK,CAACgV,YAAhE;AACA9J,MAAAA,OAAO,CAACoY,SAAR,GAAoBxO,aAAa,CAAEsO,OAAO,CAACE,SAAV,CAAb,IAAsCtjB,KAAK,CAACoV,wBAAhE;AACAlK,MAAAA,OAAO,CAACqY,KAAR,GAAgBlO,eAAe,CAAE+N,OAAO,CAACG,KAAV,CAAf,IAAoCvjB,KAAK,CAACwV,cAA1D;AACAtK,MAAAA,OAAO,CAACsY,KAAR,GAAgBnO,eAAe,CAAE+N,OAAO,CAACI,KAAV,CAAf,IAAoCxjB,KAAK,CAACwV,cAA1D;AAEA,aAAOtK,OAAP;AAEA,KAnDM,CAAP;AAqDA,GAhGD;AAkGA;;;;;;;;;AAOA3G,EAAAA,UAAU,CAACjE,SAAX,CAAqBiI,aAArB,GAAqC,UAAWX,cAAX,EAA2B6b,OAA3B,EAAoCC,MAApC,EAA6C;AAEjF,QAAIpf,MAAM,GAAG,IAAb;AAEA,WAAO,KAAKsG,aAAL,CAAoB,SAApB,EAA+B8Y,MAAM,CAACxS,KAAtC,EAA8CrG,IAA9C,CAAoD,UAAWK,OAAX,EAAqB;AAE/E,UAAK5G,MAAM,CAAChC,UAAP,CAAmBK,UAAU,CAACuB,qBAA9B,CAAL,EAA6D;AAE5D,YAAIiH,SAAS,GAAGuY,MAAM,CAACphB,UAAP,KAAsBnC,SAAtB,GAAkCujB,MAAM,CAACphB,UAAP,CAAmBK,UAAU,CAACuB,qBAA9B,CAAlC,GAA0F/D,SAA1G;;AAEA,YAAKgL,SAAL,EAAiB;AAEhBD,UAAAA,OAAO,GAAG5G,MAAM,CAAChC,UAAP,CAAmBK,UAAU,CAACuB,qBAA9B,EAAsD+G,aAAtD,CAAqEC,OAArE,EAA8EC,SAA9E,CAAV;AAEA;AAED;;AAEDvD,MAAAA,cAAc,CAAE6b,OAAF,CAAd,GAA4BvY,OAA5B;AAEA,KAhBM,CAAP;AAkBA,GAtBD;AAwBA;;;;;;;AAKA3G,EAAAA,UAAU,CAACjE,SAAX,CAAqB8e,YAArB,GAAoC,UAAWuE,aAAX,EAA2B;AAE9D,QAAIrf,MAAM,GAAG,IAAb;AACA,QAAIxB,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIshB,WAAW,GAAG9gB,IAAI,CAAC+gB,SAAL,CAAgBF,aAAhB,CAAlB;AAEA,QAAIG,YAAJ;AACA,QAAIlc,cAAc,GAAG,EAArB;AACA,QAAImc,kBAAkB,GAAGH,WAAW,CAACthB,UAAZ,IAA0B,EAAnD;AAEA,QAAIuF,OAAO,GAAG,EAAd;;AAEA,QAAKkc,kBAAkB,CAAEphB,UAAU,CAACiB,qCAAb,CAAvB,EAA8E;AAE7E,UAAIogB,WAAW,GAAG1hB,UAAU,CAAEK,UAAU,CAACiB,qCAAb,CAA5B;AACAkgB,MAAAA,YAAY,GAAGE,WAAW,CAACxc,eAAZ,CAA6Boc,WAA7B,CAAf;AACA/b,MAAAA,OAAO,CAACS,IAAR,CAAc0b,WAAW,CAACrc,YAAZ,CAA0BC,cAA1B,EAA0Cgc,WAA1C,EAAuDtf,MAAvD,CAAd;AAEA,KAND,MAMO,IAAKyf,kBAAkB,CAAEphB,UAAU,CAACe,mBAAb,CAAvB,EAA4D;AAElE,UAAIugB,YAAY,GAAG3hB,UAAU,CAAEK,UAAU,CAACe,mBAAb,CAA7B;AACAogB,MAAAA,YAAY,GAAGG,YAAY,CAACzc,eAAb,CAA8Boc,WAA9B,CAAf;AACA/b,MAAAA,OAAO,CAACS,IAAR,CAAc2b,YAAY,CAACtc,YAAb,CAA2BC,cAA3B,EAA2Cgc,WAA3C,EAAwDtf,MAAxD,CAAd;AAEA,KANM,MAMA;AAEN;AACA;AAEAwf,MAAAA,YAAY,GAAG9jB,KAAK,CAACgZ,oBAArB;AAEA,UAAIjR,iBAAiB,GAAG6b,WAAW,CAAC5b,oBAAZ,IAAoC,EAA5D;AAEAJ,MAAAA,cAAc,CAAC3B,KAAf,GAAuB,IAAIjG,KAAK,CAACkG,KAAV,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,CAAvB;AACA0B,MAAAA,cAAc,CAACE,OAAf,GAAyB,GAAzB;;AAEA,UAAKG,KAAK,CAACC,OAAN,CAAeH,iBAAiB,CAACI,eAAjC,CAAL,EAA0D;AAEzD,YAAIC,KAAK,GAAGL,iBAAiB,CAACI,eAA9B;AAEAP,QAAAA,cAAc,CAAC3B,KAAf,CAAqBE,SAArB,CAAgCiC,KAAhC;AACAR,QAAAA,cAAc,CAACE,OAAf,GAAyBM,KAAK,CAAE,CAAF,CAA9B;AAEA;;AAED,UAAKL,iBAAiB,CAACM,gBAAlB,KAAuClI,SAA5C,EAAwD;AAEvD0H,QAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,KAAtC,EAA6CG,iBAAiB,CAACM,gBAA/D,CAAd;AAEA;;AAEDT,MAAAA,cAAc,CAACgF,SAAf,GAA2B7E,iBAAiB,CAACmc,cAAlB,KAAqC/jB,SAArC,GAAiD4H,iBAAiB,CAACmc,cAAnE,GAAoF,GAA/G;AACAtc,MAAAA,cAAc,CAAC+E,SAAf,GAA2B5E,iBAAiB,CAACoc,eAAlB,KAAsChkB,SAAtC,GAAkD4H,iBAAiB,CAACoc,eAApE,GAAsF,GAAjH;;AAEA,UAAKpc,iBAAiB,CAACqc,wBAAlB,KAA+CjkB,SAApD,EAAgE;AAE/D0H,QAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,cAAtC,EAAsDG,iBAAiB,CAACqc,wBAAxE,CAAd;AACAvc,QAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,cAAtC,EAAsDG,iBAAiB,CAACqc,wBAAxE,CAAd;AAEA;AAED;;AAED,QAAKR,WAAW,CAACS,WAAZ,KAA4B,IAAjC,EAAwC;AAEvCzc,MAAAA,cAAc,CAACsR,IAAf,GAAsBlZ,KAAK,CAACskB,UAA5B;AAEA;;AAED,QAAIC,SAAS,GAAGX,WAAW,CAACW,SAAZ,IAAyBjM,WAAW,CAACC,MAArD;;AAEA,QAAKgM,SAAS,KAAKjM,WAAW,CAACG,KAA/B,EAAuC;AAEtC7Q,MAAAA,cAAc,CAACmG,WAAf,GAA6B,IAA7B;AAEA,KAJD,MAIO;AAENnG,MAAAA,cAAc,CAACmG,WAAf,GAA6B,KAA7B;;AAEA,UAAKwW,SAAS,KAAKjM,WAAW,CAACE,IAA/B,EAAsC;AAErC5Q,QAAAA,cAAc,CAAC4c,SAAf,GAA2BZ,WAAW,CAACa,WAAZ,KAA4BtkB,SAA5B,GAAwCyjB,WAAW,CAACa,WAApD,GAAkE,GAA7F;AAEA;AAED;;AAED,QAAKb,WAAW,CAACc,aAAZ,KAA8BvkB,SAA9B,IAA2C2jB,YAAY,KAAK9jB,KAAK,CAAC0H,iBAAvE,EAA2F;AAE1FG,MAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,WAAtC,EAAmDgc,WAAW,CAACc,aAA/D,CAAd;AAEA9c,MAAAA,cAAc,CAAC+G,WAAf,GAA6B,IAAI3O,KAAK,CAACqU,OAAV,CAAmB,CAAnB,EAAsB,CAAtB,CAA7B;;AAEA,UAAKuP,WAAW,CAACc,aAAZ,CAA0BnZ,KAA1B,KAAoCpL,SAAzC,EAAqD;AAEpDyH,QAAAA,cAAc,CAAC+G,WAAf,CAA2BlI,GAA3B,CAAgCmd,WAAW,CAACc,aAAZ,CAA0BnZ,KAA1D,EAAiEqY,WAAW,CAACc,aAAZ,CAA0BnZ,KAA3F;AAEA;AAED;;AAED,QAAKqY,WAAW,CAACe,gBAAZ,KAAiCxkB,SAAjC,IAA8C2jB,YAAY,KAAK9jB,KAAK,CAAC0H,iBAA1E,EAA8F;AAE7FG,MAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,OAAtC,EAA+Cgc,WAAW,CAACe,gBAA3D,CAAd;;AAEA,UAAKf,WAAW,CAACe,gBAAZ,CAA6BC,QAA7B,KAA0CzkB,SAA/C,EAA2D;AAE1DyH,QAAAA,cAAc,CAACyG,cAAf,GAAgCuV,WAAW,CAACe,gBAAZ,CAA6BC,QAA7D;AAEA;AAED;;AAED,QAAKhB,WAAW,CAACiB,cAAZ,KAA+B1kB,SAA/B,IAA4C2jB,YAAY,KAAK9jB,KAAK,CAAC0H,iBAAxE,EAA4F;AAE3FE,MAAAA,cAAc,CAAC4F,QAAf,GAA0B,IAAIxN,KAAK,CAACkG,KAAV,GAAkBC,SAAlB,CAA6Byd,WAAW,CAACiB,cAAzC,CAA1B;AAEA;;AAED,QAAKjB,WAAW,CAACkB,eAAZ,KAAgC3kB,SAAhC,IAA6C2jB,YAAY,KAAK9jB,KAAK,CAAC0H,iBAAzE,EAA6F;AAE5FG,MAAAA,OAAO,CAACS,IAAR,CAAchE,MAAM,CAACiE,aAAP,CAAsBX,cAAtB,EAAsC,aAAtC,EAAqDgc,WAAW,CAACkB,eAAjE,CAAd;AAEA;;AAED,WAAOxd,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,UAAIpD,QAAJ;;AAEA,UAAKqc,YAAY,KAAK9jB,KAAK,CAAC4L,cAA5B,EAA6C;AAE5CnE,QAAAA,QAAQ,GAAGnF,UAAU,CAAEK,UAAU,CAACiB,qCAAb,CAAV,CAA+DiK,cAA/D,CAA+EjG,cAA/E,CAAX;AAEA,OAJD,MAIO;AAENH,QAAAA,QAAQ,GAAG,IAAIqc,YAAJ,CAAkBlc,cAAlB,CAAX;AAEA;;AAED,UAAKgc,WAAW,CAACpe,IAAZ,KAAqBrF,SAA1B,EAAsCsH,QAAQ,CAACjC,IAAT,GAAgBoe,WAAW,CAACpe,IAA5B,CAdS,CAgB/C;AACA;;AACA,UAAKiC,QAAQ,CAACkH,WAAd,EAA4B;AAE3BlH,QAAAA,QAAQ,CAACkH,WAAT,CAAqBoW,CAArB,GAAyB,CAAEtd,QAAQ,CAACkH,WAAT,CAAqBoW,CAAhD;AAEA,OAtB8C,CAwB/C;;;AACA,UAAKtd,QAAQ,CAACwG,GAAd,EAAoBxG,QAAQ,CAACwG,GAAT,CAAa+W,QAAb,GAAwBhlB,KAAK,CAACilB,YAA9B;AACpB,UAAKxd,QAAQ,CAAC8G,WAAd,EAA4B9G,QAAQ,CAAC8G,WAAT,CAAqByW,QAArB,GAAgChlB,KAAK,CAACilB,YAAtC;AAC5B,UAAKxd,QAAQ,CAACyF,WAAd,EAA4BzF,QAAQ,CAACyF,WAAT,CAAqB8X,QAArB,GAAgChlB,KAAK,CAACilB,YAAtC;AAE5B3L,MAAAA,sBAAsB,CAAE7R,QAAF,EAAYmc,WAAZ,CAAtB;AAEA,UAAKA,WAAW,CAACthB,UAAjB,EAA8BwC,8BAA8B,CAAExC,UAAF,EAAcmF,QAAd,EAAwBmc,WAAxB,CAA9B;AAE9B,aAAOnc,QAAP;AAEA,KAnCM,CAAP;AAqCA,GAnKD;AAqKA;;;;;;;;AAMA,WAASyd,sBAAT,CAAiCna,QAAjC,EAA2Coa,YAA3C,EAAyD7gB,MAAzD,EAAkE;AAEjE,QAAI2F,UAAU,GAAGkb,YAAY,CAAClb,UAA9B;AAEA,QAAIpC,OAAO,GAAG,EAAd;;AAEA,aAASud,uBAAT,CAAkC7E,aAAlC,EAAiDlW,aAAjD,EAAiE;AAEhE,aAAO/F,MAAM,CAACsG,aAAP,CAAsB,UAAtB,EAAkC2V,aAAlC,EACL1V,IADK,CACC,UAAWkP,QAAX,EAAsB;AAE5BhP,QAAAA,QAAQ,CAACsa,YAAT,CAAuBhb,aAAvB,EAAsC0P,QAAtC;AAEA,OALK,CAAP;AAOA;;AAED,SAAM,IAAIuL,iBAAV,IAA+Brb,UAA/B,EAA4C;AAE3C,UAAIsb,kBAAkB,GAAGjb,UAAU,CAAEgb,iBAAF,CAAnC;AAEA,UAAK,CAAEC,kBAAP,EAA4B,SAJe,CAM3C;;AACA,UAAKA,kBAAkB,IAAIxa,QAAQ,CAACd,UAApC,EAAiD;AAEjDpC,MAAAA,OAAO,CAACS,IAAR,CAAc8c,uBAAuB,CAAEnb,UAAU,CAAEqb,iBAAF,CAAZ,EAAmCC,kBAAnC,CAArC;AAEA;;AAED,QAAKJ,YAAY,CAACzJ,OAAb,KAAyBvb,SAAzB,IAAsC,CAAE4K,QAAQ,CAACmG,KAAtD,EAA8D;AAE7D,UAAI6I,QAAQ,GAAGzV,MAAM,CAACsG,aAAP,CAAsB,UAAtB,EAAkCua,YAAY,CAACzJ,OAA/C,EAAyD7Q,IAAzD,CAA+D,UAAWkP,QAAX,EAAsB;AAEnGhP,QAAAA,QAAQ,CAACya,QAAT,CAAmBzL,QAAnB;AAEA,OAJc,CAAf;AAMAlS,MAAAA,OAAO,CAACS,IAAR,CAAcyR,QAAd;AAEA;;AAEDT,IAAAA,sBAAsB,CAAEvO,QAAF,EAAYoa,YAAZ,CAAtB;AAEA,WAAO7d,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,aAAOsa,YAAY,CAACzL,OAAb,KAAyBvZ,SAAzB,GACJsZ,eAAe,CAAE1O,QAAF,EAAYoa,YAAY,CAACzL,OAAzB,EAAkCpV,MAAlC,CADX,GAEJyG,QAFH;AAIA,KANM,CAAP;AAQA;AAED;;;;;;;;;;;;AAUAxG,EAAAA,UAAU,CAACjE,SAAX,CAAqBmlB,cAArB,GAAsC,UAAWnJ,UAAX,EAAwB;AAE7D,QAAIhY,MAAM,GAAG,IAAb;AACA,QAAIhC,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIwZ,KAAK,GAAG,KAAKmB,cAAjB;AAEA,QAAIyI,WAAW,GAAG9I,mBAAmB,CAAEN,UAAF,CAArC;AACA,QAAIqJ,kBAAJ;;AAEA,QAAKD,WAAL,EAAmB;AAElBC,MAAAA,kBAAkB,GAAGrJ,UAArB,CAFkB,CAEe;AAEjC;AACA;;AAEAA,MAAAA,UAAU,GAAG,CAAEA,UAAU,CAAE,CAAF,CAAZ,CAAb,CAPkB,CASlB;AAEA;;AAED,aAASsJ,oBAAT,CAA+B/b,SAA/B,EAA2C;AAE1C,aAAOvH,UAAU,CAAEK,UAAU,CAACmB,0BAAb,CAAV,CACL8F,eADK,CACYC,SADZ,EACuBvF,MADvB,EAELuG,IAFK,CAEC,UAAWE,QAAX,EAAsB;AAE5B,eAAOma,sBAAsB,CAAEna,QAAF,EAAYlB,SAAZ,EAAuBvF,MAAvB,CAA7B;AAEA,OANK,CAAP;AAQA;;AAED,QAAIuD,OAAO,GAAG,EAAd;;AAEA,SAAM,IAAIzE,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGgN,UAAU,CAACjZ,MAAjC,EAAyCD,CAAC,GAAGkM,EAA7C,EAAiDlM,CAAC,EAAlD,EAAwD;AAEvD,UAAIyG,SAAS,GAAGyS,UAAU,CAAElZ,CAAF,CAA1B,CAFuD,CAIvD;;AACA,UAAI4Y,MAAM,GAAGH,iBAAiB,CAAEC,KAAF,EAASjS,SAAT,CAA9B;;AAEA,UAAKmS,MAAL,EAAc;AAEb;AACAnU,QAAAA,OAAO,CAACS,IAAR,CAAc0T,MAAd;AAEA,OALD,MAKO;AAEN,YAAI6J,eAAJ;;AAEA,YAAKhc,SAAS,CAACvH,UAAV,IAAwBuH,SAAS,CAACvH,UAAV,CAAsBK,UAAU,CAACmB,0BAAjC,CAA7B,EAA6F;AAE5F;AACA+hB,UAAAA,eAAe,GAAGD,oBAAoB,CAAE/b,SAAF,CAAtC;AAEA,SALD,MAKO;AAEN;AACAgc,UAAAA,eAAe,GAAGX,sBAAsB,CAAE,IAAIllB,KAAK,CAAC8lB,cAAV,EAAF,EAA8Bjc,SAA9B,EAAyCvF,MAAzC,CAAxC;AAEA,SAdK,CAgBN;;;AACAwX,QAAAA,KAAK,CAACxT,IAAN,CAAY;AAAEuB,UAAAA,SAAS,EAAEA,SAAb;AAAwBoS,UAAAA,OAAO,EAAE4J;AAAjC,SAAZ;AAEAhe,QAAAA,OAAO,CAACS,IAAR,CAAcud,eAAd;AAEA;AAED;;AAED,WAAOve,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,UAAWsR,UAAX,EAAwB;AAE3D,UAAKuJ,WAAL,EAAmB;AAElB,YAAInJ,YAAY,GAAGJ,UAAU,CAAE,CAAF,CAA7B,CAFkB,CAIlB;;AACA,YAAIL,KAAK,GAAGxX,MAAM,CAAC6Y,sBAAnB;AACA,YAAInB,MAAM,GAAGK,0BAA0B,CAAEP,KAAF,EAASS,YAAT,EAAuBoJ,kBAAvB,CAAvC;AAEA,YAAK3J,MAAM,KAAK,IAAhB,EAAuB,OAAO,CAAEA,MAAM,CAACjR,QAAT,CAAP,CARL,CAUlB;AACA;;AACA,YAAIA,QAAQ,GAAG,IAAI/K,KAAK,CAAC8lB,cAAV,EAAf;AAEA/a,QAAAA,QAAQ,CAACvF,IAAT,GAAgB+W,YAAY,CAAC/W,IAA7B;AACAuF,QAAAA,QAAQ,CAAClG,QAAT,GAAoB0X,YAAY,CAAC1X,QAAjC;;AAEA,aAAM,IAAIK,GAAV,IAAiBqX,YAAY,CAACtS,UAA9B;AAA2Cc,UAAAA,QAAQ,CAACsa,YAAT,CAAuBngB,GAAvB,EAA4BqX,YAAY,CAACtS,UAAb,CAAyB/E,GAAzB,CAA5B;AAA3C;;AACA,aAAM,IAAIA,GAAV,IAAiBqX,YAAY,CAAC1B,eAA9B;AAAgD9P,UAAAA,QAAQ,CAAC8P,eAAT,CAA0B3V,GAA1B,IAAkCqX,YAAY,CAAC1B,eAAb,CAA8B3V,GAA9B,CAAlC;AAAhD;;AAEA,YAAI6gB,cAAc,GAAG,EAArB;;AAEA,aAAM,IAAI3iB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGqW,kBAAkB,CAACtiB,MAAzC,EAAiDD,CAAC,GAAGkM,EAArD,EAAyDlM,CAAC,EAA1D,EAAgE;AAE/D2iB,UAAAA,cAAc,CAACzd,IAAf,CAAqBhE,MAAM,CAACsG,aAAP,CAAsB,UAAtB,EAAkC+a,kBAAkB,CAAEviB,CAAF,CAAlB,CAAwBsY,OAA1D,CAArB;AAEA;;AAED,eAAOpU,OAAO,CAACkB,GAAR,CAAaud,cAAb,EAA8Blb,IAA9B,CAAoC,UAAWL,SAAX,EAAuB;AAEjE,cAAIkR,OAAO,GAAG,EAAd;AACA,cAAIrQ,MAAM,GAAG,CAAb;;AAEA,eAAM,IAAIjI,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGqW,kBAAkB,CAACtiB,MAAzC,EAAiDD,CAAC,GAAGkM,EAArD,EAAyDlM,CAAC,EAA1D,EAAgE;AAE/D,gBAAI2W,QAAQ,GAAGvP,SAAS,CAAEpH,CAAF,CAAxB;;AAEA,iBAAM,IAAIiX,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGP,QAAQ,CAACQ,KAA/B,EAAsCF,CAAC,GAAGC,EAA1C,EAA8CD,CAAC,EAA/C;AAAqDqB,cAAAA,OAAO,CAACpT,IAAR,CAAcyR,QAAQ,CAAC3R,KAAT,CAAgBiS,CAAhB,CAAd;AAArD;;AAEAtP,YAAAA,QAAQ,CAACib,QAAT,CAAmB3a,MAAnB,EAA2B0O,QAAQ,CAACQ,KAApC,EAA2CnX,CAA3C;AAEAiI,YAAAA,MAAM,IAAI0O,QAAQ,CAACQ,KAAnB;AAEA;;AAEDxP,UAAAA,QAAQ,CAACya,QAAT,CAAmB9J,OAAnB;AAEAI,UAAAA,KAAK,CAACxT,IAAN,CAAY;AAAEyC,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBwR,YAAAA,YAAY,EAAEA,YAApC;AAAkDD,YAAAA,UAAU,EAAEqJ;AAA9D,WAAZ;AAEA,iBAAO,CAAE5a,QAAF,CAAP;AAEA,SAvBM,CAAP;AAyBA,OArDD,MAqDO,IAAKoR,UAAU,CAAC9Y,MAAX,GAAoB,CAApB,IAAyBrD,KAAK,CAACimB,mBAAN,KAA8B9lB,SAA5D,EAAwE;AAE9E;AAEA,aAAM,IAAIiD,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGgN,UAAU,CAACjZ,MAAjC,EAAyCD,CAAC,GAAGkM,EAA7C,EAAiDlM,CAAC,EAAlD,EAAwD;AAEvD;AACA,cAAKkZ,UAAU,CAAE,CAAF,CAAV,CAAgBS,IAAhB,KAAyBT,UAAU,CAAElZ,CAAF,CAAV,CAAgB2Z,IAA9C,EAAqD,OAAOZ,UAAP;AAErD,SAT6E,CAW9E;;;AACA,YAAIL,KAAK,GAAGxX,MAAM,CAAC4Y,uBAAnB;AACA,YAAIlB,MAAM,GAAGE,yBAAyB,CAAEJ,KAAF,EAASK,UAAT,CAAtC;;AAEA,YAAKH,MAAL,EAAc;AAEb,cAAKA,MAAM,CAACjR,QAAP,KAAoB,IAAzB,EAAgC,OAAO,CAAEiR,MAAM,CAACjR,QAAT,CAAP;AAEhC,SAJD,MAIO;AAEN,cAAIA,QAAQ,GAAG/K,KAAK,CAACimB,mBAAN,CAA0BC,qBAA1B,CAAiD/J,UAAjD,EAA6D,IAA7D,CAAf;AAEAL,UAAAA,KAAK,CAACxT,IAAN,CAAY;AAAEyC,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBqR,YAAAA,cAAc,EAAED;AAAtC,WAAZ;AAEA,cAAKpR,QAAQ,KAAK,IAAlB,EAAyB,OAAO,CAAEA,QAAF,CAAP;AAEzB;AAED;;AAED,aAAOoR,UAAP;AAEA,KAxFM,CAAP;AA0FA,GAnKD;AAqKA;;;;;;;AAKA5X,EAAAA,UAAU,CAACjE,SAAX,CAAqB0e,QAArB,GAAgC,UAAWmH,SAAX,EAAuB;AAEtD,QAAI7hB,MAAM,GAAG,IAAb;AACA,QAAIxB,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB;AAEA,QAAI0Y,OAAO,GAAGlY,IAAI,CAACkb,MAAL,CAAamI,SAAb,CAAd;AACA,QAAI7J,UAAU,GAAGtB,OAAO,CAACsB,UAAzB;AAEA,QAAIzU,OAAO,GAAG,EAAd;;AAEA,SAAM,IAAIzE,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGgN,UAAU,CAACjZ,MAAjC,EAAyCD,CAAC,GAAGkM,EAA7C,EAAiDlM,CAAC,EAAlD,EAAwD;AAEvD,UAAIqE,QAAQ,GAAG6U,UAAU,CAAElZ,CAAF,CAAV,CAAgBqE,QAAhB,KAA6BtH,SAA7B,GACZ4Y,qBAAqB,EADT,GAEZ,KAAKnO,aAAL,CAAoB,UAApB,EAAgC0R,UAAU,CAAElZ,CAAF,CAAV,CAAgBqE,QAAhD,CAFH;AAIAI,MAAAA,OAAO,CAACS,IAAR,CAAcb,QAAd;AAEA;;AAED,WAAOH,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,UAAWub,iBAAX,EAA+B;AAElE,aAAO9hB,MAAM,CAACmhB,cAAP,CAAuBnJ,UAAvB,EAAoCzR,IAApC,CAA0C,UAAWsR,UAAX,EAAwB;AAExE,YAAIkK,eAAe,GAAGlK,UAAU,CAAC9Y,MAAX,KAAsB,CAAtB,IAA2B8Y,UAAU,CAAE,CAAF,CAAV,CAAgBmK,MAAhB,CAAuBjjB,MAAvB,GAAgC,CAAjF;AAEA,YAAI2a,MAAM,GAAG,EAAb;;AAEA,aAAM,IAAI5a,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG6M,UAAU,CAAC9Y,MAAjC,EAAyCD,CAAC,GAAGkM,EAA7C,EAAiDlM,CAAC,EAAlD,EAAwD;AAEvD,cAAI2H,QAAQ,GAAGoR,UAAU,CAAE/Y,CAAF,CAAzB;AACA,cAAIyG,SAAS,GAAGyS,UAAU,CAAElZ,CAAF,CAA1B,CAHuD,CAKvD;;AAEA,cAAI2X,IAAJ;AAEA,cAAItT,QAAQ,GAAG4e,eAAe,GAAGD,iBAAH,GAAuBA,iBAAiB,CAAEhjB,CAAF,CAAtE;;AAEA,cAAKyG,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACc,SAAnC,IACJ/J,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACe,cAD/B,IAEJhK,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACgB,YAF/B,IAGJjK,SAAS,CAACkT,IAAV,KAAmB5c,SAHpB,EAGgC;AAE/B;AACA4a,YAAAA,IAAI,GAAGC,OAAO,CAAC2D,aAAR,KAA0B,IAA1B,GACJ,IAAI3e,KAAK,CAACumB,WAAV,CAAuBxb,QAAvB,EAAiCtD,QAAjC,CADI,GAEJ,IAAIzH,KAAK,CAACwmB,IAAV,CAAgBzb,QAAhB,EAA0BtD,QAA1B,CAFH;;AAIA,gBAAKoC,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACe,cAAxC,EAAyD;AAExDkH,cAAAA,IAAI,CAAC0L,QAAL,GAAgBzmB,KAAK,CAAC0mB,qBAAtB;AAEA,aAJD,MAIO,IAAK7c,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACgB,YAAxC,EAAuD;AAE7DiH,cAAAA,IAAI,CAAC0L,QAAL,GAAgBzmB,KAAK,CAAC2mB,mBAAtB;AAEA;AAED,WApBD,MAoBO,IAAK9c,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACW,KAAxC,EAAgD;AAEtDsH,YAAAA,IAAI,GAAG,IAAI/a,KAAK,CAAC4mB,YAAV,CAAwB7b,QAAxB,EAAkCtD,QAAlC,CAAP;AAEA,WAJM,MAIA,IAAKoC,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACa,UAAxC,EAAqD;AAE3DoH,YAAAA,IAAI,GAAG,IAAI/a,KAAK,CAAC6mB,IAAV,CAAgB9b,QAAhB,EAA0BtD,QAA1B,CAAP;AAEA,WAJM,MAIA,IAAKoC,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACY,SAAxC,EAAoD;AAE1DqH,YAAAA,IAAI,GAAG,IAAI/a,KAAK,CAAC8mB,QAAV,CAAoB/b,QAApB,EAA8BtD,QAA9B,CAAP;AAEA,WAJM,MAIA,IAAKoC,SAAS,CAACkT,IAAV,KAAmBjK,eAAe,CAACU,MAAxC,EAAiD;AAEvDuH,YAAAA,IAAI,GAAG,IAAI/a,KAAK,CAAC+mB,MAAV,CAAkBhc,QAAlB,EAA4BtD,QAA5B,CAAP;AAEA,WAJM,MAIA;AAEN,kBAAM,IAAIvE,KAAJ,CAAW,mDAAmD2G,SAAS,CAACkT,IAAxE,CAAN;AAEA;;AAED,cAAKhM,MAAM,CAAC4K,IAAP,CAAaZ,IAAI,CAAChQ,QAAL,CAAc8P,eAA3B,EAA6CxX,MAA7C,GAAsD,CAA3D,EAA+D;AAE9DyX,YAAAA,kBAAkB,CAAEC,IAAF,EAAQC,OAAR,CAAlB;AAEA;;AAEDD,UAAAA,IAAI,CAACvV,IAAL,GAAYwV,OAAO,CAACxV,IAAR,IAAkB,UAAU2gB,SAAxC;AAEA,cAAKhK,UAAU,CAAC9Y,MAAX,GAAoB,CAAzB,EAA6B0X,IAAI,CAACvV,IAAL,IAAa,MAAMpC,CAAnB;AAE7BkW,UAAAA,sBAAsB,CAAEyB,IAAF,EAAQC,OAAR,CAAtB;AAEAgD,UAAAA,MAAM,CAAC1V,IAAP,CAAayS,IAAb,EAjEuD,CAmEvD;;AAEA,cAAI8I,SAAS,GAAGwC,eAAe,GAAGtL,IAAI,CAACtT,QAAR,GAAmB,CAAEsT,IAAI,CAACtT,QAAP,CAAlD;AAEA,cAAIuf,eAAe,GAAGjc,QAAQ,CAACd,UAAT,CAAoBhE,KAApB,KAA8B9F,SAApD;AACA,cAAI8mB,cAAc,GAAGlc,QAAQ,CAACd,UAAT,CAAoBgQ,MAApB,KAA+B9Z,SAApD;AACA,cAAI+mB,WAAW,GAAGnM,IAAI,CAAC4D,aAAL,KAAuB,IAAzC;AACA,cAAIwI,eAAe,GAAGpW,MAAM,CAAC4K,IAAP,CAAa5Q,QAAQ,CAAC8P,eAAtB,EAAwCxX,MAAxC,GAAiD,CAAvE;AACA,cAAI+jB,eAAe,GAAGD,eAAe,IAAIpc,QAAQ,CAAC8P,eAAT,CAAyBZ,MAAzB,KAAoC9Z,SAA7E;;AAEA,eAAM,IAAIka,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGuJ,SAAS,CAACxgB,MAAhC,EAAwCgX,CAAC,GAAGC,EAA5C,EAAgDD,CAAC,EAAjD,EAAuD;AAEtD,gBAAI5S,QAAQ,GAAGoc,SAAS,CAAExJ,CAAF,CAAxB;;AAEA,gBAAKU,IAAI,CAACsM,QAAV,EAAqB;AAEpB,kBAAIzI,QAAQ,GAAG,oBAAoBnX,QAAQ,CAAC6f,IAA5C;AAEA,kBAAIC,cAAc,GAAGjjB,MAAM,CAACwX,KAAP,CAAa7W,GAAb,CAAkB2Z,QAAlB,CAArB;;AAEA,kBAAK,CAAE2I,cAAP,EAAwB;AAEvBA,gBAAAA,cAAc,GAAG,IAAIvnB,KAAK,CAACwnB,cAAV,EAAjB;AACAxnB,gBAAAA,KAAK,CAACynB,QAAN,CAAennB,SAAf,CAAyBsP,IAAzB,CAA8BkB,IAA9B,CAAoCyW,cAApC,EAAoD9f,QAApD;AACA8f,gBAAAA,cAAc,CAACthB,KAAf,CAAqB2J,IAArB,CAA2BnI,QAAQ,CAACxB,KAApC;AACAshB,gBAAAA,cAAc,CAACtZ,GAAf,GAAqBxG,QAAQ,CAACwG,GAA9B;AACAsZ,gBAAAA,cAAc,CAAC3hB,MAAf,GAAwB,KAAxB,CANuB,CAMQ;;AAE/BtB,gBAAAA,MAAM,CAACwX,KAAP,CAAa3W,GAAb,CAAkByZ,QAAlB,EAA4B2I,cAA5B;AAEA;;AAED9f,cAAAA,QAAQ,GAAG8f,cAAX;AAEA,aApBD,MAoBO,IAAKxM,IAAI,CAAC2M,MAAV,EAAmB;AAEzB,kBAAI9I,QAAQ,GAAG,uBAAuBnX,QAAQ,CAAC6f,IAA/C;AAEA,kBAAIK,YAAY,GAAGrjB,MAAM,CAACwX,KAAP,CAAa7W,GAAb,CAAkB2Z,QAAlB,CAAnB;;AAEA,kBAAK,CAAE+I,YAAP,EAAsB;AAErBA,gBAAAA,YAAY,GAAG,IAAI3nB,KAAK,CAAC4nB,iBAAV,EAAf;AACA5nB,gBAAAA,KAAK,CAACynB,QAAN,CAAennB,SAAf,CAAyBsP,IAAzB,CAA8BkB,IAA9B,CAAoC6W,YAApC,EAAkDlgB,QAAlD;AACAkgB,gBAAAA,YAAY,CAAC1hB,KAAb,CAAmB2J,IAAnB,CAAyBnI,QAAQ,CAACxB,KAAlC;AACA0hB,gBAAAA,YAAY,CAAC/hB,MAAb,GAAsB,KAAtB,CALqB,CAKQ;;AAE7BtB,gBAAAA,MAAM,CAACwX,KAAP,CAAa3W,GAAb,CAAkByZ,QAAlB,EAA4B+I,YAA5B;AAEA;;AAEDlgB,cAAAA,QAAQ,GAAGkgB,YAAX;AAEA,aA3CqD,CA6CtD;;;AACA,gBAAKX,eAAe,IAAIC,cAAnB,IAAqCC,WAArC,IAAoDC,eAAzD,EAA2E;AAE1E,kBAAIvI,QAAQ,GAAG,oBAAoBnX,QAAQ,CAAC6f,IAA7B,GAAoC,GAAnD;AAEA,kBAAK7f,QAAQ,CAACuG,gCAAd,EAAiD4Q,QAAQ,IAAI,sBAAZ;AACjD,kBAAKsI,WAAL,EAAmBtI,QAAQ,IAAI,WAAZ;AACnB,kBAAKoI,eAAL,EAAuBpI,QAAQ,IAAI,gBAAZ;AACvB,kBAAKqI,cAAL,EAAsBrI,QAAQ,IAAI,eAAZ;AACtB,kBAAKuI,eAAL,EAAuBvI,QAAQ,IAAI,gBAAZ;AACvB,kBAAKwI,eAAL,EAAuBxI,QAAQ,IAAI,gBAAZ;AAEvB,kBAAIiJ,cAAc,GAAGvjB,MAAM,CAACwX,KAAP,CAAa7W,GAAb,CAAkB2Z,QAAlB,CAArB;;AAEA,kBAAK,CAAEiJ,cAAP,EAAwB;AAEvBA,gBAAAA,cAAc,GAAGpgB,QAAQ,CAACuG,gCAAT,GACd1L,UAAU,CAAEK,UAAU,CAACiB,qCAAb,CAAV,CAA+DwL,aAA/D,CAA8E3H,QAA9E,CADc,GAEdA,QAAQ,CAAC2D,KAAT,EAFH;AAIA,oBAAK8b,WAAL,EAAmBW,cAAc,CAACC,QAAf,GAA0B,IAA1B;AACnB,oBAAKd,eAAL,EAAuBa,cAAc,CAACE,YAAf,GAA8B/nB,KAAK,CAACgoB,YAApC;AACvB,oBAAKf,cAAL,EAAsBY,cAAc,CAACI,WAAf,GAA6B,IAA7B;AACtB,oBAAKd,eAAL,EAAuBU,cAAc,CAACK,YAAf,GAA8B,IAA9B;AACvB,oBAAKd,eAAL,EAAuBS,cAAc,CAAC1N,YAAf,GAA8B,IAA9B;AAEvB7V,gBAAAA,MAAM,CAACwX,KAAP,CAAa3W,GAAb,CAAkByZ,QAAlB,EAA4BiJ,cAA5B;AAEA;;AAEDpgB,cAAAA,QAAQ,GAAGogB,cAAX;AAEA;;AAEDhE,YAAAA,SAAS,CAAExJ,CAAF,CAAT,GAAiB5S,QAAjB,CA/EsD,CAiFtD;;AAEA,gBAAKA,QAAQ,CAAC2G,KAAT,IAAkBrD,QAAQ,CAACd,UAAT,CAAoBke,GAApB,KAA4BhoB,SAA9C,IAA2D4K,QAAQ,CAACd,UAAT,CAAoBme,EAApB,KAA2BjoB,SAA3F,EAAuG;AAEtGmB,cAAAA,OAAO,CAAC+mB,GAAR,CAAa,qDAAb;AACAtd,cAAAA,QAAQ,CAACsa,YAAT,CAAuB,KAAvB,EAA8B,IAAIrlB,KAAK,CAAC2c,eAAV,CAA2B5R,QAAQ,CAACd,UAAT,CAAoBme,EAApB,CAAuBhgB,KAAlD,EAAyD,CAAzD,CAA9B;AAEA;;AAED,gBAAKX,QAAQ,CAACuG,gCAAd,EAAiD;AAEhD;AACA+M,cAAAA,IAAI,CAACuN,cAAL,GAAsBhmB,UAAU,CAAEK,UAAU,CAACiB,qCAAb,CAAV,CAA+D2L,eAArF;AAEA;AAED;;AAEDwL,UAAAA,IAAI,CAACtT,QAAL,GAAgB4e,eAAe,GAAGxC,SAAH,GAAeA,SAAS,CAAE,CAAF,CAAvD;AAEA;;AAED,YAAK7F,MAAM,CAAC3a,MAAP,KAAkB,CAAvB,EAA2B;AAE1B,iBAAO2a,MAAM,CAAE,CAAF,CAAb;AAEA;;AAED,YAAItO,KAAK,GAAG,IAAI1P,KAAK,CAACuoB,KAAV,EAAZ;;AAEA,aAAM,IAAInlB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG0O,MAAM,CAAC3a,MAA7B,EAAqCD,CAAC,GAAGkM,EAAzC,EAA6ClM,CAAC,EAA9C,EAAoD;AAEnDsM,UAAAA,KAAK,CAACvK,GAAN,CAAW6Y,MAAM,CAAE5a,CAAF,CAAjB;AAEA;;AAED,eAAOsM,KAAP;AAEA,OA1MM,CAAP;AA4MA,KA9MM,CAAP;AAgNA,GArOD;AAuOA;;;;;;;AAKAnL,EAAAA,UAAU,CAACjE,SAAX,CAAqBkf,UAArB,GAAkC,UAAWgJ,WAAX,EAAyB;AAE1D,QAAI/Y,MAAJ;AACA,QAAIgZ,SAAS,GAAG,KAAK3lB,IAAL,CAAU4B,OAAV,CAAmB8jB,WAAnB,CAAhB;AACA,QAAI3c,MAAM,GAAG4c,SAAS,CAAEA,SAAS,CAACpiB,IAAZ,CAAtB;;AAEA,QAAK,CAAEwF,MAAP,EAAgB;AAEfvK,MAAAA,OAAO,CAAC+C,IAAR,CAAc,8CAAd;AACA;AAEA;;AAED,QAAKokB,SAAS,CAACpiB,IAAV,KAAmB,aAAxB,EAAwC;AAEvCoJ,MAAAA,MAAM,GAAG,IAAIzP,KAAK,CAAC0oB,iBAAV,CAA6B1oB,KAAK,CAACgH,IAAN,CAAW2hB,QAAX,CAAqB9c,MAAM,CAAC+c,IAA5B,CAA7B,EAAiE/c,MAAM,CAACgd,WAAP,IAAsB,CAAvF,EAA0Fhd,MAAM,CAACid,KAAP,IAAgB,CAA1G,EAA6Gjd,MAAM,CAACkd,IAAP,IAAe,GAA5H,CAAT;AAEA,KAJD,MAIO,IAAKN,SAAS,CAACpiB,IAAV,KAAmB,cAAxB,EAAyC;AAE/CoJ,MAAAA,MAAM,GAAG,IAAIzP,KAAK,CAACgpB,kBAAV,CAA8Bnd,MAAM,CAACod,IAAP,GAAc,CAAE,CAA9C,EAAiDpd,MAAM,CAACod,IAAP,GAAc,CAA/D,EAAkEpd,MAAM,CAACqd,IAAP,GAAc,CAAhF,EAAmFrd,MAAM,CAACqd,IAAP,GAAc,CAAE,CAAnG,EAAsGrd,MAAM,CAACid,KAA7G,EAAoHjd,MAAM,CAACkd,IAA3H,CAAT;AAEA;;AAED,QAAKN,SAAS,CAACjjB,IAAV,KAAmBrF,SAAxB,EAAoCsP,MAAM,CAACjK,IAAP,GAAcijB,SAAS,CAACjjB,IAAxB;AAEpC8T,IAAAA,sBAAsB,CAAE7J,MAAF,EAAUgZ,SAAV,CAAtB;AAEA,WAAOnhB,OAAO,CAACC,OAAR,CAAiBkI,MAAjB,CAAP;AAEA,GA7BD;AA+BA;;;;;;;AAKAlL,EAAAA,UAAU,CAACjE,SAAX,CAAqBgf,QAArB,GAAgC,UAAWnB,SAAX,EAAuB;AAEtD,QAAIgL,OAAO,GAAG,KAAKrmB,IAAL,CAAUgb,KAAV,CAAiBK,SAAjB,CAAd;AAEA,QAAIiL,SAAS,GAAG;AAAE/K,MAAAA,MAAM,EAAE8K,OAAO,CAAC9K;AAAlB,KAAhB;;AAEA,QAAK8K,OAAO,CAACE,mBAAR,KAAgClpB,SAArC,EAAiD;AAEhD,aAAOmH,OAAO,CAACC,OAAR,CAAiB6hB,SAAjB,CAAP;AAEA;;AAED,WAAO,KAAKxe,aAAL,CAAoB,UAApB,EAAgCue,OAAO,CAACE,mBAAxC,EAA8Dxe,IAA9D,CAAoE,UAAWkP,QAAX,EAAsB;AAEhGqP,MAAAA,SAAS,CAACC,mBAAV,GAAgCtP,QAAhC;AAEA,aAAOqP,SAAP;AAEA,KANM,CAAP;AAQA,GApBD;AAsBA;;;;;;;AAKA7kB,EAAAA,UAAU,CAACjE,SAAX,CAAqBif,aAArB,GAAqC,UAAW+J,cAAX,EAA4B;AAEhE,QAAIxmB,IAAI,GAAG,KAAKA,IAAhB;AAEA,QAAIymB,YAAY,GAAGzmB,IAAI,CAAC6B,UAAL,CAAiB2kB,cAAjB,CAAnB;AAEA,QAAIE,YAAY,GAAG,EAAnB;AACA,QAAIC,qBAAqB,GAAG,EAA5B;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,cAAc,GAAG,EAArB;;AAEA,SAAM,IAAIxmB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGia,YAAY,CAACM,QAAb,CAAsBxmB,MAA5C,EAAoDD,CAAC,GAAGkM,EAAxD,EAA4DlM,CAAC,EAA7D,EAAmE;AAElE,UAAI0mB,OAAO,GAAGP,YAAY,CAACM,QAAb,CAAuBzmB,CAAvB,CAAd;AACA,UAAIggB,OAAO,GAAGmG,YAAY,CAACpG,QAAb,CAAuB2G,OAAO,CAAC1G,OAA/B,CAAd;AACA,UAAI7c,MAAM,GAAGujB,OAAO,CAACvjB,MAArB;AACA,UAAIf,IAAI,GAAGe,MAAM,CAACwjB,IAAP,KAAgB5pB,SAAhB,GAA4BoG,MAAM,CAACwjB,IAAnC,GAA0CxjB,MAAM,CAACyjB,EAA5D,CALkE,CAKF;;AAChE,UAAIC,KAAK,GAAGV,YAAY,CAACW,UAAb,KAA4B/pB,SAA5B,GAAwCopB,YAAY,CAACW,UAAb,CAAyB9G,OAAO,CAAC6G,KAAjC,CAAxC,GAAmF7G,OAAO,CAAC6G,KAAvG;AACA,UAAIE,MAAM,GAAGZ,YAAY,CAACW,UAAb,KAA4B/pB,SAA5B,GAAwCopB,YAAY,CAACW,UAAb,CAAyB9G,OAAO,CAAC+G,MAAjC,CAAxC,GAAoF/G,OAAO,CAAC+G,MAAzG;AAEAX,MAAAA,YAAY,CAAClhB,IAAb,CAAmB,KAAKsC,aAAL,CAAoB,MAApB,EAA4BpF,IAA5B,CAAnB;AACAikB,MAAAA,qBAAqB,CAACnhB,IAAtB,CAA4B,KAAKsC,aAAL,CAAoB,UAApB,EAAgCqf,KAAhC,CAA5B;AACAP,MAAAA,sBAAsB,CAACphB,IAAvB,CAA6B,KAAKsC,aAAL,CAAoB,UAApB,EAAgCuf,MAAhC,CAA7B;AACAR,MAAAA,eAAe,CAACrhB,IAAhB,CAAsB8a,OAAtB;AACAwG,MAAAA,cAAc,CAACthB,IAAf,CAAqB/B,MAArB;AAEA;;AAED,WAAOe,OAAO,CAACkB,GAAR,CAAa,CAEnBlB,OAAO,CAACkB,GAAR,CAAaghB,YAAb,CAFmB,EAGnBliB,OAAO,CAACkB,GAAR,CAAaihB,qBAAb,CAHmB,EAInBniB,OAAO,CAACkB,GAAR,CAAakhB,sBAAb,CAJmB,EAKnBpiB,OAAO,CAACkB,GAAR,CAAamhB,eAAb,CALmB,EAMnBriB,OAAO,CAACkB,GAAR,CAAaohB,cAAb,CANmB,CAAb,EAQH/e,IARG,CAQG,UAAW4S,YAAX,EAA0B;AAEnC,UAAIG,KAAK,GAAGH,YAAY,CAAE,CAAF,CAAxB;AACA,UAAI2M,cAAc,GAAG3M,YAAY,CAAE,CAAF,CAAjC;AACA,UAAI4M,eAAe,GAAG5M,YAAY,CAAE,CAAF,CAAlC;AACA,UAAI0F,QAAQ,GAAG1F,YAAY,CAAE,CAAF,CAA3B;AACA,UAAI/D,OAAO,GAAG+D,YAAY,CAAE,CAAF,CAA1B;AAEA,UAAI6M,MAAM,GAAG,EAAb;;AAEA,WAAM,IAAIlnB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGsO,KAAK,CAACva,MAA5B,EAAoCD,CAAC,GAAGkM,EAAxC,EAA4ClM,CAAC,EAA7C,EAAmD;AAElD,YAAI2mB,IAAI,GAAGnM,KAAK,CAAExa,CAAF,CAAhB;AACA,YAAImnB,aAAa,GAAGH,cAAc,CAAEhnB,CAAF,CAAlC;AACA,YAAIonB,cAAc,GAAGH,eAAe,CAAEjnB,CAAF,CAApC;AACA,YAAIggB,OAAO,GAAGD,QAAQ,CAAE/f,CAAF,CAAtB;AACA,YAAImD,MAAM,GAAGmT,OAAO,CAAEtW,CAAF,CAApB;AAEA,YAAK2mB,IAAI,KAAK5pB,SAAd,EAA0B;AAE1B4pB,QAAAA,IAAI,CAAC9Z,YAAL;AACA8Z,QAAAA,IAAI,CAAC/Z,gBAAL,GAAwB,IAAxB;AAEA,YAAIya,kBAAJ;;AAEA,gBAAS7S,eAAe,CAAErR,MAAM,CAACvF,IAAT,CAAxB;AAEC,eAAK4W,eAAe,CAACE,OAArB;AAEC2S,YAAAA,kBAAkB,GAAGzqB,KAAK,CAAC0qB,mBAA3B;AACA;;AAED,eAAK9S,eAAe,CAACtM,QAArB;AAECmf,YAAAA,kBAAkB,GAAGzqB,KAAK,CAAC2qB,uBAA3B;AACA;;AAED,eAAK/S,eAAe,CAACpR,QAArB;AACA,eAAKoR,eAAe,CAACrM,KAArB;AACA;AAECkf,YAAAA,kBAAkB,GAAGzqB,KAAK,CAAC4qB,mBAA3B;AACA;AAjBF;;AAqBA,YAAIC,UAAU,GAAGd,IAAI,CAACvkB,IAAL,GAAYukB,IAAI,CAACvkB,IAAjB,GAAwBukB,IAAI,CAACzC,IAA9C;AAEA,YAAIwD,aAAa,GAAG1H,OAAO,CAAC0H,aAAR,KAA0B3qB,SAA1B,GAAsC4X,aAAa,CAAEqL,OAAO,CAAC0H,aAAV,CAAnD,GAA+E9qB,KAAK,CAACkY,iBAAzG;AAEA,YAAIgD,WAAW,GAAG,EAAlB;;AAEA,YAAKtD,eAAe,CAAErR,MAAM,CAACvF,IAAT,CAAf,KAAmC4W,eAAe,CAACE,OAAxD,EAAkE;AAEjE;AACA;AACA;AAEAiS,UAAAA,IAAI,CAACgB,QAAL,CAAe,UAAW3lB,MAAX,EAAoB;AAElC,gBAAKA,MAAM,CAAC4lB,MAAP,KAAkB,IAAlB,IAA0B5lB,MAAM,CAAC6V,qBAAtC,EAA8D;AAE7DC,cAAAA,WAAW,CAAC5S,IAAZ,CAAkBlD,MAAM,CAACI,IAAP,GAAcJ,MAAM,CAACI,IAArB,GAA4BJ,MAAM,CAACkiB,IAArD;AAEA;AAED,WARD;AAUA,SAhBD,MAgBO;AAENpM,UAAAA,WAAW,CAAC5S,IAAZ,CAAkBuiB,UAAlB;AAEA,SA9DiD,CAgElD;AACA;AACA;;;AACA,aAAM,IAAIxQ,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGY,WAAW,CAAC7X,MAAlC,EAA0CgX,CAAC,GAAGC,EAA9C,EAAkDD,CAAC,EAAnD,EAAyD;AAExD,cAAI4Q,KAAK,GAAG,IAAIR,kBAAJ,CACXvP,WAAW,CAAEb,CAAF,CAAX,GAAmB,GAAnB,GAAyBzC,eAAe,CAAErR,MAAM,CAACvF,IAAT,CAD7B,EAEXhB,KAAK,CAACkrB,cAAN,CAAqBC,UAArB,CAAiCZ,aAAa,CAACniB,KAA/C,EAAsD,CAAtD,CAFW,EAGXpI,KAAK,CAACkrB,cAAN,CAAqBC,UAArB,CAAiCX,cAAc,CAACpiB,KAAhD,EAAuD,CAAvD,CAHW,EAIX0iB,aAJW,CAAZ,CAFwD,CASxD;AACA;;AACA,cAAK1H,OAAO,CAAC0H,aAAR,KAA0B,aAA/B,EAA+C;AAE9CG,YAAAA,KAAK,CAACG,iBAAN,GAA0B,SAASC,uCAAT,CAAkDla,MAAlD,EAA2D;AAEpF;AACA;AACA;AAEA,qBAAO,IAAIX,0BAAJ,CAAgC,KAAK8a,KAArC,EAA4C,KAAKla,MAAjD,EAAyD,KAAKma,YAAL,KAAsB,CAA/E,EAAkFpa,MAAlF,CAAP;AAEA,aARD,CAF8C,CAY9C;AACA;;;AACA8Z,YAAAA,KAAK,CAACG,iBAAN,CAAwBI,yCAAxB,GAAoE,IAApE;AAEA;;AAEDlB,UAAAA,MAAM,CAAChiB,IAAP,CAAa2iB,KAAb;AAEA;AAED;;AAED,UAAIzlB,IAAI,GAAG+jB,YAAY,CAAC/jB,IAAb,KAAsBrF,SAAtB,GAAkCopB,YAAY,CAAC/jB,IAA/C,GAAsD,eAAe8jB,cAAhF;AAEA,aAAO,IAAItpB,KAAK,CAACyrB,aAAV,CAAyBjmB,IAAzB,EAA+BrF,SAA/B,EAA0CmqB,MAA1C,CAAP;AAEA,KA5HM,CAAP;AA8HA,GA3JD;AA6JA;;;;;;;AAKA/lB,EAAAA,UAAU,CAACjE,SAAX,CAAqBye,QAArB,GAAgC,UAAWR,SAAX,EAAuB;AAEtD,QAAIzb,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,QAAIgC,MAAM,GAAG,IAAb;AAEA,QAAI2Z,cAAc,GAAGnb,IAAI,CAACmb,cAA1B;AACA,QAAIC,QAAQ,GAAGpb,IAAI,CAACob,QAApB;AAEA,QAAIO,OAAO,GAAG3b,IAAI,CAAC8a,KAAL,CAAYW,SAAZ,CAAd;AAEA,WAAO,IAAIjX,OAAJ,CAAa,UAAWC,OAAX,EAAqB;AAExC;AACA,UAAKkX,OAAO,CAACH,MAAR,KAAmB,IAAxB,EAA+B;AAE9B/W,QAAAA,OAAO,CAAE,IAAIvH,KAAK,CAAC0rB,IAAV,EAAF,CAAP;AAEA,OAJD,MAIO,IAAKjN,OAAO,CAAC1D,IAAR,KAAiB5a,SAAtB,EAAkC;AAExCmE,QAAAA,MAAM,CAACsG,aAAP,CAAsB,MAAtB,EAA8B6T,OAAO,CAAC1D,IAAtC,EAA6ClQ,IAA7C,CAAmD,UAAWkQ,IAAX,EAAkB;AAEpE,cAAIgP,IAAJ;;AAEA,cAAK9L,cAAc,CAAEQ,OAAO,CAAC1D,IAAV,CAAd,GAAiC,CAAtC,EAA0C;AAEzC,gBAAI4Q,WAAW,GAAGzN,QAAQ,CAAEO,OAAO,CAAC1D,IAAV,CAAR,EAAlB;AAEAgP,YAAAA,IAAI,GAAGhP,IAAI,CAAC3P,KAAL,EAAP;AACA2e,YAAAA,IAAI,CAACvkB,IAAL,IAAa,eAAemmB,WAA5B,CALyC,CAOzC;;AACA5B,YAAAA,IAAI,CAACzB,cAAL,GAAsBvN,IAAI,CAACuN,cAA3B;;AAEA,iBAAM,IAAIllB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGya,IAAI,CAAC6B,QAAL,CAAcvoB,MAApC,EAA4CD,CAAC,GAAGkM,EAAhD,EAAoDlM,CAAC,EAArD,EAA2D;AAE1D2mB,cAAAA,IAAI,CAAC6B,QAAL,CAAexoB,CAAf,EAAmBoC,IAAnB,IAA2B,eAAemmB,WAA1C;AACA5B,cAAAA,IAAI,CAAC6B,QAAL,CAAexoB,CAAf,EAAmBklB,cAAnB,GAAoCvN,IAAI,CAAC6Q,QAAL,CAAexoB,CAAf,EAAmBklB,cAAvD;AAEA;AAED,WAjBD,MAiBO;AAENyB,YAAAA,IAAI,GAAGhP,IAAP;AAEA;;AAEDxT,UAAAA,OAAO,CAAEwiB,IAAF,CAAP;AAEA,SA7BD;AA+BA,OAjCM,MAiCA,IAAKtL,OAAO,CAAChP,MAAR,KAAmBtP,SAAxB,EAAoC;AAE1CmE,QAAAA,MAAM,CAACsG,aAAP,CAAsB,QAAtB,EAAgC6T,OAAO,CAAChP,MAAxC,EAAiD5E,IAAjD,CAAuDtD,OAAvD;AAEA,OAJM,MAIA,IAAKkX,OAAO,CAACnc,UAAR,IACRmc,OAAO,CAACnc,UAAR,CAAoBK,UAAU,CAACa,mBAA/B,CADQ,IAERib,OAAO,CAACnc,UAAR,CAAoBK,UAAU,CAACa,mBAA/B,EAAqDqoB,KAArD,KAA+D1rB,SAF5D,EAEwE;AAE9EmE,QAAAA,MAAM,CAACsG,aAAP,CAAsB,OAAtB,EAA+B6T,OAAO,CAACnc,UAAR,CAAoBK,UAAU,CAACa,mBAA/B,EAAqDqoB,KAApF,EAA4FhhB,IAA5F,CAAkGtD,OAAlG;AAEA,OANM,MAMA;AAENA,QAAAA,OAAO,CAAE,IAAIvH,KAAK,CAAC8rB,QAAV,EAAF,CAAP;AAEA;AAED,KAxDM,EAwDHjhB,IAxDG,CAwDG,UAAWkf,IAAX,EAAkB;AAE3B,UAAKtL,OAAO,CAACjZ,IAAR,KAAiBrF,SAAtB,EAAkC;AAEjC4pB,QAAAA,IAAI,CAACvkB,IAAL,GAAYxF,KAAK,CAAC+rB,eAAN,CAAsBC,gBAAtB,CAAwCvN,OAAO,CAACjZ,IAAhD,CAAZ;AAEA;;AAED8T,MAAAA,sBAAsB,CAAEyQ,IAAF,EAAQtL,OAAR,CAAtB;AAEA,UAAKA,OAAO,CAACnc,UAAb,EAA0BwC,8BAA8B,CAAExC,UAAF,EAAcynB,IAAd,EAAoBtL,OAApB,CAA9B;;AAE1B,UAAKA,OAAO,CAACtO,MAAR,KAAmBhQ,SAAxB,EAAoC;AAEnC,YAAIgQ,MAAM,GAAG,IAAInQ,KAAK,CAACoU,OAAV,EAAb;AACAjE,QAAAA,MAAM,CAAChK,SAAP,CAAkBsY,OAAO,CAACtO,MAA1B;AACA4Z,QAAAA,IAAI,CAACkC,WAAL,CAAkB9b,MAAlB;AAEA,OAND,MAMO;AAEN,YAAKsO,OAAO,CAAC5G,WAAR,KAAwB1X,SAA7B,EAAyC;AAExC4pB,UAAAA,IAAI,CAACvjB,QAAL,CAAcL,SAAd,CAAyBsY,OAAO,CAAC5G,WAAjC;AAEA;;AAED,YAAK4G,OAAO,CAACnT,QAAR,KAAqBnL,SAA1B,EAAsC;AAErC4pB,UAAAA,IAAI,CAACmC,UAAL,CAAgB/lB,SAAhB,CAA2BsY,OAAO,CAACnT,QAAnC;AAEA;;AAED,YAAKmT,OAAO,CAAClT,KAAR,KAAkBpL,SAAvB,EAAmC;AAElC4pB,UAAAA,IAAI,CAACxe,KAAL,CAAWpF,SAAX,CAAsBsY,OAAO,CAAClT,KAA9B;AAEA;AAED;;AAED,aAAOwe,IAAP;AAEA,KAlGM,CAAP;AAoGA,GA/GD;AAiHA;;;;;;;AAKAxlB,EAAAA,UAAU,CAACjE,SAAX,CAAqBwe,SAArB,GAAiC,YAAY;AAE5C;AAEA,aAASqN,iBAAT,CAA4BC,MAA5B,EAAoCC,YAApC,EAAkDvpB,IAAlD,EAAwDwB,MAAxD,EAAiE;AAEhE,UAAIma,OAAO,GAAG3b,IAAI,CAAC8a,KAAL,CAAYwO,MAAZ,CAAd;AAEA,aAAO9nB,MAAM,CAACsG,aAAP,CAAsB,MAAtB,EAA8BwhB,MAA9B,EAAuCvhB,IAAvC,CAA6C,UAAWkf,IAAX,EAAkB;AAErE,YAAKtL,OAAO,CAACC,IAAR,KAAiBve,SAAtB,EAAkC,OAAO4pB,IAAP,CAFmC,CAIrE;;AAEA,YAAIX,SAAJ;AAEA,eAAO9kB,MAAM,CAACsG,aAAP,CAAsB,MAAtB,EAA8B6T,OAAO,CAACC,IAAtC,EAA6C7T,IAA7C,CAAmD,UAAW6T,IAAX,EAAkB;AAE3E0K,UAAAA,SAAS,GAAG1K,IAAZ;AAEA,cAAI4N,aAAa,GAAG,EAApB;;AAEA,eAAM,IAAIlpB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG8Z,SAAS,CAAC/K,MAAV,CAAiBhb,MAAvC,EAA+CD,CAAC,GAAGkM,EAAnD,EAAuDlM,CAAC,EAAxD,EAA8D;AAE7DkpB,YAAAA,aAAa,CAAChkB,IAAd,CAAoBhE,MAAM,CAACsG,aAAP,CAAsB,MAAtB,EAA8Bwe,SAAS,CAAC/K,MAAV,CAAkBjb,CAAlB,CAA9B,CAApB;AAEA;;AAED,iBAAOkE,OAAO,CAACkB,GAAR,CAAa8jB,aAAb,CAAP;AAEA,SAdM,EAcHzhB,IAdG,CAcG,UAAW0hB,UAAX,EAAwB;AAEjC,cAAIvO,MAAM,GAAG+L,IAAI,CAACyC,OAAL,KAAiB,IAAjB,GAAwBzC,IAAI,CAAC6B,QAA7B,GAAwC,CAAE7B,IAAF,CAArD;;AAEA,eAAM,IAAI3mB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG0O,MAAM,CAAC3a,MAA7B,EAAqCD,CAAC,GAAGkM,EAAzC,EAA6ClM,CAAC,EAA9C,EAAoD;AAEnD,gBAAI2X,IAAI,GAAGiD,MAAM,CAAE5a,CAAF,CAAjB;AAEA,gBAAIqpB,KAAK,GAAG,EAAZ;AACA,gBAAIC,YAAY,GAAG,EAAnB;;AAEA,iBAAM,IAAIrS,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGiS,UAAU,CAAClpB,MAAjC,EAAyCgX,CAAC,GAAGC,EAA7C,EAAiDD,CAAC,EAAlD,EAAwD;AAEvD,kBAAIsS,SAAS,GAAGJ,UAAU,CAAElS,CAAF,CAA1B;;AAEA,kBAAKsS,SAAL,EAAiB;AAEhBF,gBAAAA,KAAK,CAACnkB,IAAN,CAAYqkB,SAAZ;AAEA,oBAAIC,GAAG,GAAG,IAAI5sB,KAAK,CAACoU,OAAV,EAAV;;AAEA,oBAAKgV,SAAS,CAACC,mBAAV,KAAkClpB,SAAvC,EAAmD;AAElDysB,kBAAAA,GAAG,CAACzmB,SAAJ,CAAeijB,SAAS,CAACC,mBAAV,CAA8BjhB,KAA7C,EAAoDiS,CAAC,GAAG,EAAxD;AAEA;;AAEDqS,gBAAAA,YAAY,CAACpkB,IAAb,CAAmBskB,GAAnB;AAEA,eAdD,MAcO;AAENtrB,gBAAAA,OAAO,CAAC+C,IAAR,CAAc,kDAAd,EAAkE+kB,SAAS,CAAC/K,MAAV,CAAkBhE,CAAlB,CAAlE;AAEA;AAED;;AAEDU,YAAAA,IAAI,CAAC+E,IAAL,CAAW,IAAI9f,KAAK,CAAC6sB,QAAV,CAAoBJ,KAApB,EAA2BC,YAA3B,CAAX,EAAsD3R,IAAI,CAAC+R,WAA3D;AAEA;;AAAA;AAED,iBAAO/C,IAAP;AAEA,SAzDM,CAAP;AA2DA,OAnEM,EAmEHlf,IAnEG,CAmEG,UAAWkf,IAAX,EAAkB;AAE3B;AAEAsC,QAAAA,YAAY,CAAClnB,GAAb,CAAkB4kB,IAAlB;AAEA,YAAIliB,OAAO,GAAG,EAAd;;AAEA,YAAK4W,OAAO,CAACmN,QAAb,EAAwB;AAEvB,cAAIA,QAAQ,GAAGnN,OAAO,CAACmN,QAAvB;;AAEA,eAAM,IAAIxoB,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAGsc,QAAQ,CAACvoB,MAA/B,EAAuCD,CAAC,GAAGkM,EAA3C,EAA+ClM,CAAC,EAAhD,EAAsD;AAErD,gBAAI2pB,KAAK,GAAGnB,QAAQ,CAAExoB,CAAF,CAApB;AACAyE,YAAAA,OAAO,CAACS,IAAR,CAAc6jB,iBAAiB,CAAEY,KAAF,EAAShD,IAAT,EAAejnB,IAAf,EAAqBwB,MAArB,CAA/B;AAEA;AAED;;AAED,eAAOgD,OAAO,CAACkB,GAAR,CAAaX,OAAb,CAAP;AAEA,OA1FM,CAAP;AA4FA;;AAED,WAAO,SAASiX,SAAT,CAAoBkO,UAApB,EAAiC;AAEvC,UAAIlqB,IAAI,GAAG,KAAKA,IAAhB;AACA,UAAIR,UAAU,GAAG,KAAKA,UAAtB;AACA,UAAI2qB,QAAQ,GAAG,KAAKnqB,IAAL,CAAU2B,MAAV,CAAkBuoB,UAAlB,CAAf;AACA,UAAI1oB,MAAM,GAAG,IAAb;AAEA,UAAIE,KAAK,GAAG,IAAIxE,KAAK,CAACktB,KAAV,EAAZ;AACA,UAAKD,QAAQ,CAACznB,IAAT,KAAkBrF,SAAvB,EAAmCqE,KAAK,CAACgB,IAAN,GAAaynB,QAAQ,CAACznB,IAAtB;AAEnC8T,MAAAA,sBAAsB,CAAE9U,KAAF,EAASyoB,QAAT,CAAtB;AAEA,UAAKA,QAAQ,CAAC3qB,UAAd,EAA2BwC,8BAA8B,CAAExC,UAAF,EAAckC,KAAd,EAAqByoB,QAArB,CAA9B;AAE3B,UAAIE,OAAO,GAAGF,QAAQ,CAACrP,KAAT,IAAkB,EAAhC;AAEA,UAAI/V,OAAO,GAAG,EAAd;;AAEA,WAAM,IAAIzE,CAAC,GAAG,CAAR,EAAWkM,EAAE,GAAG6d,OAAO,CAAC9pB,MAA9B,EAAsCD,CAAC,GAAGkM,EAA1C,EAA8ClM,CAAC,EAA/C,EAAqD;AAEpDyE,QAAAA,OAAO,CAACS,IAAR,CAAc6jB,iBAAiB,CAAEgB,OAAO,CAAE/pB,CAAF,CAAT,EAAgBoB,KAAhB,EAAuB1B,IAAvB,EAA6BwB,MAA7B,CAA/B;AAEA;;AAED,aAAOgD,OAAO,CAACkB,GAAR,CAAaX,OAAb,EAAuBgD,IAAvB,CAA6B,YAAY;AAE/C,eAAOrG,KAAP;AAEA,OAJM,CAAP;AAMA,KA9BD;AAgCA,GAtIgC,EAAjC;;AAwIA,SAAOvE,UAAP;AAEA,CA3xGkB,EAAnB","file":"GLTFLoader.c6f095a3.map","sourceRoot":"..","sourcesContent":["/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nTHREE.GLTFLoader = ( function () {\r\n\r\n\tfunction GLTFLoader( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.dracoLoader = null;\r\n\r\n\t}\r\n\r\n\tGLTFLoader.prototype = {\r\n\r\n\t\tconstructor: GLTFLoader,\r\n\r\n\t\tcrossOrigin: 'anonymous',\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar resourcePath;\r\n\r\n\t\t\tif ( this.resourcePath !== undefined ) {\r\n\r\n\t\t\t\tresourcePath = this.resourcePath;\r\n\r\n\t\t\t} else if ( this.path !== undefined ) {\r\n\r\n\t\t\t\tresourcePath = this.path;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\r\n\t\t\t// the model is fully loaded. This means the count of items loaded will\r\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tvar _onError = function ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\r\n\r\n\t\t\tloader.setPath( this.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\t\tloader.load( url, function ( data ) {\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\r\n\r\n\t\t\t\t\t\tonLoad( gltf );\r\n\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t\t}, _onError );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t_onError( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, _onError );\r\n\r\n\t\t},\r\n\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\t\tthis.crossOrigin = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetPath: function ( value ) {\r\n\r\n\t\t\tthis.path = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetResourcePath: function ( value ) {\r\n\r\n\t\t\tthis.resourcePath = value;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetDRACOLoader: function ( dracoLoader ) {\r\n\r\n\t\t\tthis.dracoLoader = dracoLoader;\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( data, path, onLoad, onError ) {\r\n\r\n\t\t\tvar content;\r\n\t\t\tvar extensions = {};\r\n\r\n\t\t\tif ( typeof data === 'string' ) {\r\n\r\n\t\t\t\tcontent = data;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\r\n\r\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n\r\n\t\t\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\t\t\tif ( onError ) onError( error );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar json = JSON.parse( content );\r\n\r\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\r\n\r\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.extensionsUsed ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\r\n\r\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\r\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\r\n\r\n\t\t\t\t\tswitch ( extensionName ) {\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\r\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\r\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\r\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\r\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\r\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension( json );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\r\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar parser = new GLTFParser( json, extensions, {\r\n\r\n\t\t\t\tpath: path || this.resourcePath || '',\r\n\t\t\t\tcrossOrigin: this.crossOrigin,\r\n\t\t\t\tmanager: this.manager\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, json ) {\r\n\r\n\t\t\t\tvar glTF = {\r\n\t\t\t\t\tscene: scene,\r\n\t\t\t\t\tscenes: scenes,\r\n\t\t\t\t\tcameras: cameras,\r\n\t\t\t\t\tanimations: animations,\r\n\t\t\t\t\tasset: json.asset,\r\n\t\t\t\t\tparser: parser,\r\n\t\t\t\t\tuserData: {}\r\n\t\t\t\t};\r\n\r\n\t\t\t\taddUnknownExtensionsToUserData( extensions, glTF, json );\r\n\r\n\t\t\t\tonLoad( glTF );\r\n\r\n\t\t\t}, onError );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/* GLTFREGISTRY */\r\n\r\n\tfunction GLTFRegistry() {\r\n\r\n\t\tvar objects = {};\r\n\r\n\t\treturn\t{\r\n\r\n\t\t\tget: function ( key ) {\r\n\r\n\t\t\t\treturn objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tadd: function ( key, object ) {\r\n\r\n\t\t\t\tobjects[ key ] = object;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremove: function ( key ) {\r\n\r\n\t\t\t\tdelete objects[ key ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremoveAll: function () {\r\n\r\n\t\t\t\tobjects = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** EXTENSIONS ***********/\r\n\t/*********************************/\r\n\r\n\tvar EXTENSIONS = {\r\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\r\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\r\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\r\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\r\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\r\n\t};\r\n\r\n\t/**\r\n\t * DDS Texture Extension\r\n\t *\r\n\t * Specification:\r\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\r\n\t *\r\n\t */\r\n\tfunction GLTFTextureDDSExtension() {\r\n\r\n\t\tif ( ! THREE.DDSLoader ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\r\n\t\tthis.ddsLoader = new THREE.DDSLoader();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Lights Extension\r\n\t *\r\n\t * Specification: PENDING\r\n\t */\r\n\tfunction GLTFLightsExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\r\n\r\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\r\n\t\tthis.lightDefs = extension.lights || [];\r\n\r\n\t}\r\n\r\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\r\n\r\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\r\n\t\tvar lightNode;\r\n\r\n\t\tvar color = new THREE.Color( 0xffffff );\r\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\r\n\r\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\r\n\r\n\t\tswitch ( lightDef.type ) {\r\n\r\n\t\t\tcase 'directional':\r\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\r\n\t\t\t\tlightNode.target.position.set( 0, 0, -1 );\r\n\t\t\t\tlightNode.add( lightNode.target );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'point':\r\n\t\t\t\tlightNode = new THREE.PointLight( color );\r\n\t\t\t\tlightNode.distance = range;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'spot':\r\n\t\t\t\tlightNode = new THREE.SpotLight( color );\r\n\t\t\t\tlightNode.distance = range;\r\n\t\t\t\t// Handle spotlight properties.\r\n\t\t\t\tlightDef.spot = lightDef.spot || {};\r\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\r\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\r\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\r\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\r\n\t\t\t\tlightNode.target.position.set( 0, 0, -1 );\r\n\t\t\t\tlightNode.add( lightNode.target );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\r\n\r\n\t\t}\r\n\r\n\t\tlightNode.decay = 2;\r\n\r\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\r\n\r\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\r\n\r\n\t\treturn Promise.resolve( lightNode );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Unlit Materials Extension (pending)\r\n\t *\r\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\r\n\t */\r\n\tfunction GLTFMaterialsUnlitExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\r\n\r\n\t}\r\n\r\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\r\n\r\n\t\treturn THREE.MeshBasicMaterial;\r\n\r\n\t};\r\n\r\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\tmaterialParams.opacity = 1.0;\r\n\r\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\r\n\r\n\t\tif ( metallicRoughness ) {\r\n\r\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\r\n\r\n\t\t\t\tmaterialParams.color.fromArray( array );\r\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending );\r\n\r\n\t};\r\n\r\n\t/* BINARY EXTENSION */\r\n\r\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\n\tfunction GLTFBinaryExtension( data ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n\t\tthis.content = null;\r\n\t\tthis.body = null;\r\n\r\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n\t\tthis.header = {\r\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n\t\t\tversion: headerView.getUint32( 4, true ),\r\n\t\t\tlength: headerView.getUint32( 8, true )\r\n\t\t};\r\n\r\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\r\n\r\n\t\t} else if ( this.header.version < 2.0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\r\n\t\tvar chunkIndex = 0;\r\n\r\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\r\n\r\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\r\n\t\t\tchunkIndex += 4;\r\n\r\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\r\n\r\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\r\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\r\n\r\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\r\n\r\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Clients must ignore chunks with unknown types.\r\n\r\n\t\t\tchunkIndex += chunkLength;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.content === null ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * DRACO Mesh Compression Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\r\n\t */\r\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\r\n\r\n\t\tif ( ! dracoLoader ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\r\n\t\tthis.json = json;\r\n\t\tthis.dracoLoader = dracoLoader;\r\n\t\tTHREE.DRACOLoader.getDecoderModule();\r\n\r\n\t}\r\n\r\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar dracoLoader = this.dracoLoader;\r\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\r\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\r\n\t\tvar threeAttributeMap = {};\r\n\t\tvar attributeNormalizedMap = {};\r\n\t\tvar attributeTypeMap = {};\r\n\r\n\t\tfor ( var attributeName in gltfAttributeMap ) {\r\n\r\n\t\t\tif ( ! ( attributeName in ATTRIBUTES ) ) continue;\r\n\r\n\t\t\tthreeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( attributeName in primitive.attributes ) {\r\n\r\n\t\t\tif ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\r\n\r\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\r\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n\t\t\t\tattributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\r\n\t\t\t\tattributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\r\n\r\n\t\t\treturn new Promise( function ( resolve ) {\r\n\r\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\r\n\r\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\r\n\r\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\r\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\r\n\r\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve( geometry );\r\n\r\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Texture Transform Extension\r\n\t *\r\n\t * Specification:\r\n\t */\r\n\tfunction GLTFTextureTransformExtension( json ) {\r\n\r\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\r\n\r\n\t}\r\n\r\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\r\n\r\n\t\ttexture = texture.clone();\r\n\r\n\t\tif ( transform.offset !== undefined ) {\r\n\r\n\t\t\ttexture.offset.fromArray( transform.offset );\r\n\r\n\t\t}\r\n\r\n\t\tif ( transform.rotation !== undefined ) {\r\n\r\n\t\t\ttexture.rotation = transform.rotation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( transform.scale !== undefined ) {\r\n\r\n\t\t\ttexture.repeat.fromArray( transform.scale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( transform.texCoord !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\r\n\r\n\t\t}\r\n\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specular-Glossiness Extension\r\n\t *\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\r\n\t */\r\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n\t\t\tspecularGlossinessParams: [\r\n\t\t\t\t'color',\r\n\t\t\t\t'map',\r\n\t\t\t\t'lightMap',\r\n\t\t\t\t'lightMapIntensity',\r\n\t\t\t\t'aoMap',\r\n\t\t\t\t'aoMapIntensity',\r\n\t\t\t\t'emissive',\r\n\t\t\t\t'emissiveIntensity',\r\n\t\t\t\t'emissiveMap',\r\n\t\t\t\t'bumpMap',\r\n\t\t\t\t'bumpScale',\r\n\t\t\t\t'normalMap',\r\n\t\t\t\t'displacementMap',\r\n\t\t\t\t'displacementScale',\r\n\t\t\t\t'displacementBias',\r\n\t\t\t\t'specularMap',\r\n\t\t\t\t'specular',\r\n\t\t\t\t'glossinessMap',\r\n\t\t\t\t'glossiness',\r\n\t\t\t\t'alphaMap',\r\n\t\t\t\t'envMap',\r\n\t\t\t\t'envMapIntensity',\r\n\t\t\t\t'refractionRatio',\r\n\t\t\t],\r\n\r\n\t\t\tgetMaterialType: function () {\r\n\r\n\t\t\t\treturn THREE.ShaderMaterial;\r\n\r\n\t\t\t},\r\n\r\n\t\t\textendParams: function ( params, material, parser ) {\r\n\r\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\r\n\r\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t\t\tvar specularMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar specularMapFragmentChunk = [\r\n\t\t\t\t\t'vec3 specularFactor = specular;',\r\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\r\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar glossinessMapFragmentChunk = [\r\n\t\t\t\t\t'float glossinessFactor = glossiness;',\r\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\r\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\r\n\t\t\t\t\t'#endif'\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar lightPhysicalFragmentChunk = [\r\n\t\t\t\t\t'PhysicalMaterial material;',\r\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\r\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\r\n\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\tvar fragmentShader = shader.fragmentShader\r\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\r\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\r\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\r\n\r\n\t\t\t\tdelete uniforms.roughness;\r\n\t\t\t\tdelete uniforms.metalness;\r\n\t\t\t\tdelete uniforms.roughnessMap;\r\n\t\t\t\tdelete uniforms.metalnessMap;\r\n\r\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\r\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\r\n\t\t\t\tuniforms.specularMap = { value: null };\r\n\t\t\t\tuniforms.glossinessMap = { value: null };\r\n\r\n\t\t\t\tparams.vertexShader = shader.vertexShader;\r\n\t\t\t\tparams.fragmentShader = fragmentShader;\r\n\t\t\t\tparams.uniforms = uniforms;\r\n\t\t\t\tparams.defines = { 'STANDARD': '' };\r\n\r\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\t\tparams.opacity = 1.0;\r\n\r\n\t\t\t\tvar pending = [];\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\r\n\r\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n\t\t\t\t\tparams.color.fromArray( array );\r\n\t\t\t\t\tparams.opacity = array[ 3 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\r\n\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\r\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\r\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\r\n\r\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) );\r\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all( pending );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tcreateMaterial: function ( params ) {\r\n\r\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n\r\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\r\n\t\t\t\t\tdefines: params.defines,\r\n\t\t\t\t\tvertexShader: params.vertexShader,\r\n\t\t\t\t\tfragmentShader: params.fragmentShader,\r\n\t\t\t\t\tuniforms: params.uniforms,\r\n\t\t\t\t\tfog: true,\r\n\t\t\t\t\tlights: true,\r\n\t\t\t\t\topacity: params.opacity,\r\n\t\t\t\t\ttransparent: params.transparent\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tmaterial.color = params.color;\r\n\r\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\r\n\r\n\t\t\t\tmaterial.lightMap = null;\r\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.emissive = params.emissive;\r\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\r\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n\r\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n\t\t\t\tmaterial.bumpScale = 1;\r\n\r\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\r\n\r\n\t\t\t\tmaterial.displacementMap = null;\r\n\t\t\t\tmaterial.displacementScale = 1;\r\n\t\t\t\tmaterial.displacementBias = 0;\r\n\r\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n\t\t\t\tmaterial.specular = params.specular;\r\n\r\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n\t\t\t\tmaterial.glossiness = params.glossiness;\r\n\r\n\t\t\t\tmaterial.alphaMap = null;\r\n\r\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\r\n\t\t\t\tmaterial.envMapIntensity = 1.0;\r\n\r\n\t\t\t\tmaterial.refractionRatio = 0.98;\r\n\r\n\t\t\t\tmaterial.extensions.derivatives = true;\r\n\r\n\t\t\t\treturn material;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\r\n\t\t\t * normally be defined by MeshStandardMaterial.\r\n\t\t\t *\r\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\r\n\t\t\t *\r\n\t\t\t * @param  {THREE.ShaderMaterial} source\r\n\t\t\t * @return {THREE.ShaderMaterial}\r\n\t\t\t */\r\n\t\t\tcloneMaterial: function ( source ) {\r\n\r\n\t\t\t\tvar target = source.clone();\r\n\r\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n\t\t\t\tvar params = this.specularGlossinessParams;\r\n\r\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn target;\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\r\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uniforms = material.uniforms;\r\n\t\t\t\tvar defines = material.defines;\r\n\r\n\t\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t\t\tuniforms.map.value = material.map;\r\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t\t// 1. color map\r\n\t\t\t\t// 2. specular map\r\n\t\t\t\t// 3. normal map\r\n\t\t\t\t// 4. bump map\r\n\t\t\t\t// 5. alpha map\r\n\t\t\t\t// 6. emissive map\r\n\r\n\t\t\t\tvar uvScaleMap;\r\n\r\n\t\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t\t\t} else if ( material.glossinessMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\r\n\r\n\t\t\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t\t\t// backwards compatibility\r\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\r\n\r\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t\t\tuniforms.specular.value.copy( material.specular );\r\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\r\n\r\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\r\n\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\r\n\r\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\r\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\r\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\r\n\r\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\r\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*********************************/\r\n\t/********** INTERPOLATION ********/\r\n\t/*********************************/\r\n\r\n\t// Spline Interpolation\r\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\r\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\r\n\r\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\r\n\r\n\t\t// Copies a sample value to the result buffer. See description of glTF\r\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tvalueSize = this.valueSize,\r\n\t\t\toffset = index * valueSize * 3 + valueSize;\r\n\r\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer;\r\n\t\tvar values = this.sampleValues;\r\n\t\tvar stride = this.valueSize;\r\n\r\n\t\tvar stride2 = stride * 2;\r\n\t\tvar stride3 = stride * 3;\r\n\r\n\t\tvar td = t1 - t0;\r\n\r\n\t\tvar p = ( t - t0 ) / td;\r\n\t\tvar pp = p * p;\r\n\t\tvar ppp = pp * p;\r\n\r\n\t\tvar offset1 = i1 * stride3;\r\n\t\tvar offset0 = offset1 - stride3;\r\n\r\n\t\tvar s0 = 2 * ppp - 3 * pp + 1;\r\n\t\tvar s1 = ppp - 2 * pp + p;\r\n\t\tvar s2 = - 2 * ppp + 3 * pp;\r\n\t\tvar s3 = ppp - pp;\r\n\r\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\r\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\r\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\r\n\r\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\r\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\r\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\r\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\r\n\r\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t/*********************************/\r\n\t/********** INTERNALS ************/\r\n\t/*********************************/\r\n\r\n\t/* CONSTANTS */\r\n\r\n\tvar WEBGL_CONSTANTS = {\r\n\t\tFLOAT: 5126,\r\n\t\t//FLOAT_MAT2: 35674,\r\n\t\tFLOAT_MAT3: 35675,\r\n\t\tFLOAT_MAT4: 35676,\r\n\t\tFLOAT_VEC2: 35664,\r\n\t\tFLOAT_VEC3: 35665,\r\n\t\tFLOAT_VEC4: 35666,\r\n\t\tLINEAR: 9729,\r\n\t\tREPEAT: 10497,\r\n\t\tSAMPLER_2D: 35678,\r\n\t\tPOINTS: 0,\r\n\t\tLINES: 1,\r\n\t\tLINE_LOOP: 2,\r\n\t\tLINE_STRIP: 3,\r\n\t\tTRIANGLES: 4,\r\n\t\tTRIANGLE_STRIP: 5,\r\n\t\tTRIANGLE_FAN: 6,\r\n\t\tUNSIGNED_BYTE: 5121,\r\n\t\tUNSIGNED_SHORT: 5123\r\n\t};\r\n\r\n\tvar WEBGL_TYPE = {\r\n\t\t5126: Number,\r\n\t\t//35674: THREE.Matrix2,\r\n\t\t35675: THREE.Matrix3,\r\n\t\t35676: THREE.Matrix4,\r\n\t\t35664: THREE.Vector2,\r\n\t\t35665: THREE.Vector3,\r\n\t\t35666: THREE.Vector4,\r\n\t\t35678: THREE.Texture\r\n\t};\r\n\r\n\tvar WEBGL_COMPONENT_TYPES = {\r\n\t\t5120: Int8Array,\r\n\t\t5121: Uint8Array,\r\n\t\t5122: Int16Array,\r\n\t\t5123: Uint16Array,\r\n\t\t5125: Uint32Array,\r\n\t\t5126: Float32Array\r\n\t};\r\n\r\n\tvar WEBGL_FILTERS = {\r\n\t\t9728: THREE.NearestFilter,\r\n\t\t9729: THREE.LinearFilter,\r\n\t\t9984: THREE.NearestMipMapNearestFilter,\r\n\t\t9985: THREE.LinearMipMapNearestFilter,\r\n\t\t9986: THREE.NearestMipMapLinearFilter,\r\n\t\t9987: THREE.LinearMipMapLinearFilter\r\n\t};\r\n\r\n\tvar WEBGL_WRAPPINGS = {\r\n\t\t33071: THREE.ClampToEdgeWrapping,\r\n\t\t33648: THREE.MirroredRepeatWrapping,\r\n\t\t10497: THREE.RepeatWrapping\r\n\t};\r\n\r\n\tvar WEBGL_SIDES = {\r\n\t\t1028: THREE.BackSide, // Culling front\r\n\t\t1029: THREE.FrontSide // Culling back\r\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\r\n\t};\r\n\r\n\tvar WEBGL_DEPTH_FUNCS = {\r\n\t\t512: THREE.NeverDepth,\r\n\t\t513: THREE.LessDepth,\r\n\t\t514: THREE.EqualDepth,\r\n\t\t515: THREE.LessEqualDepth,\r\n\t\t516: THREE.GreaterEqualDepth,\r\n\t\t517: THREE.NotEqualDepth,\r\n\t\t518: THREE.GreaterEqualDepth,\r\n\t\t519: THREE.AlwaysDepth\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_EQUATIONS = {\r\n\t\t32774: THREE.AddEquation,\r\n\t\t32778: THREE.SubtractEquation,\r\n\t\t32779: THREE.ReverseSubtractEquation\r\n\t};\r\n\r\n\tvar WEBGL_BLEND_FUNCS = {\r\n\t\t0: THREE.ZeroFactor,\r\n\t\t1: THREE.OneFactor,\r\n\t\t768: THREE.SrcColorFactor,\r\n\t\t769: THREE.OneMinusSrcColorFactor,\r\n\t\t770: THREE.SrcAlphaFactor,\r\n\t\t771: THREE.OneMinusSrcAlphaFactor,\r\n\t\t772: THREE.DstAlphaFactor,\r\n\t\t773: THREE.OneMinusDstAlphaFactor,\r\n\t\t774: THREE.DstColorFactor,\r\n\t\t775: THREE.OneMinusDstColorFactor,\r\n\t\t776: THREE.SrcAlphaSaturateFactor\r\n\t\t// The followings are not supported by Three.js yet\r\n\t\t//32769: CONSTANT_COLOR,\r\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\r\n\t\t//32771: CONSTANT_ALPHA,\r\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\r\n\t};\r\n\r\n\tvar WEBGL_TYPE_SIZES = {\r\n\t\t'SCALAR': 1,\r\n\t\t'VEC2': 2,\r\n\t\t'VEC3': 3,\r\n\t\t'VEC4': 4,\r\n\t\t'MAT2': 4,\r\n\t\t'MAT3': 9,\r\n\t\t'MAT4': 16\r\n\t};\r\n\r\n\tvar ATTRIBUTES = {\r\n\t\tPOSITION: 'position',\r\n\t\tNORMAL: 'normal',\r\n\t\tTEXCOORD_0: 'uv',\r\n\t\tTEXCOORD_1: 'uv2',\r\n\t\tCOLOR_0: 'color',\r\n\t\tWEIGHTS_0: 'skinWeight',\r\n\t\tJOINTS_0: 'skinIndex',\r\n\t};\r\n\r\n\tvar PATH_PROPERTIES = {\r\n\t\tscale: 'scale',\r\n\t\ttranslation: 'position',\r\n\t\trotation: 'quaternion',\r\n\t\tweights: 'morphTargetInfluences'\r\n\t};\r\n\r\n\tvar INTERPOLATION = {\r\n\t\tCUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\r\n\t\t                                      // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\r\n\t\t                                      // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\r\n\t\t                                      // See KeyframeTrack.optimize() for the detail.\r\n\t\tLINEAR: THREE.InterpolateLinear,\r\n\t\tSTEP: THREE.InterpolateDiscrete\r\n\t};\r\n\r\n\tvar STATES_ENABLES = {\r\n\t\t2884: 'CULL_FACE',\r\n\t\t2929: 'DEPTH_TEST',\r\n\t\t3042: 'BLEND',\r\n\t\t3089: 'SCISSOR_TEST',\r\n\t\t32823: 'POLYGON_OFFSET_FILL',\r\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n\t};\r\n\r\n\tvar ALPHA_MODES = {\r\n\t\tOPAQUE: 'OPAQUE',\r\n\t\tMASK: 'MASK',\r\n\t\tBLEND: 'BLEND'\r\n\t};\r\n\r\n\tvar MIME_TYPE_FORMATS = {\r\n\t\t'image/png': THREE.RGBAFormat,\r\n\t\t'image/jpeg': THREE.RGBFormat\r\n\t};\r\n\r\n\t/* UTILITY FUNCTIONS */\r\n\r\n\tfunction resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n\t */\r\n\tfunction createDefaultMaterial() {\r\n\r\n\t\treturn new THREE.MeshStandardMaterial( {\r\n\t\t\tcolor: 0xFFFFFF,\r\n\t\t\temissive: 0x000000,\r\n\t\t\tmetalness: 1,\r\n\t\t\troughness: 1,\r\n\t\t\ttransparent: false,\r\n\t\t\tdepthTest: true,\r\n\t\t\tside: THREE.FrontSide\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\r\n\r\n\t\t// Add unknown glTF extensions to an object's userData.\r\n\r\n\t\tfor ( var name in objectDef.extensions ) {\r\n\r\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\r\n\r\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\r\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\r\n\t * @param {GLTF.definition} gltfDef\r\n\t */\r\n\tfunction assignExtrasToUserData( object, gltfDef ) {\r\n\r\n\t\tif ( gltfDef.extras !== undefined ) {\r\n\r\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\r\n\r\n\t\t\t\tobject.userData = gltfDef.extras;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n\t *\r\n\t * @param {THREE.BufferGeometry} geometry\r\n\t * @param {Array<GLTF.Target>} targets\r\n\t * @param {GLTFParser} parser\r\n\t * @return {Promise<THREE.BufferGeometry>}\r\n\t */\r\n\tfunction addMorphTargets( geometry, targets, parser ) {\r\n\r\n\t\tvar hasMorphPosition = false;\r\n\t\tvar hasMorphNormal = false;\r\n\r\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar target = targets[ i ];\r\n\r\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\r\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\r\n\r\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\r\n\r\n\t\tvar pendingPositionAccessors = [];\r\n\t\tvar pendingNormalAccessors = [];\r\n\r\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar target = targets[ i ];\r\n\r\n\t\t\tif ( hasMorphPosition ) {\r\n\r\n\t\t\t\t// TODO: Error-prone use of a callback inside a loop.\r\n\t\t\t\tvar accessor = target.POSITION !== undefined\r\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\r\n\t\t\t\t\t\t.then( function ( accessor ) {\r\n\t\t\t\t\t\t\t// Cloning not to pollute original accessor below\r\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t: geometry.attributes.position;\r\n\r\n\t\t\t\tpendingPositionAccessors.push( accessor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasMorphNormal ) {\r\n\r\n\t\t\t\t// TODO: Error-prone use of a callback inside a loop.\r\n\t\t\t\tvar accessor = target.NORMAL !== undefined\r\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\r\n\t\t\t\t\t\t.then( function ( accessor ) {\r\n\t\t\t\t\t\t\treturn cloneBufferAttribute( accessor );\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t: geometry.attributes.normal;\r\n\r\n\t\t\t\tpendingNormalAccessors.push( accessor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( [\r\n\t\t\tPromise.all( pendingPositionAccessors ),\r\n\t\t\tPromise.all( pendingNormalAccessors )\r\n\t\t] ).then( function ( accessors ) {\r\n\r\n\t\t\tvar morphPositions = accessors[ 0 ];\r\n\t\t\tvar morphNormals = accessors[ 1 ];\r\n\r\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar target = targets[ i ];\r\n\t\t\t\tvar attributeName = 'morphTarget' + i;\r\n\r\n\t\t\t\tif ( hasMorphPosition ) {\r\n\r\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\r\n\t\t\t\t\t//   basePosition\r\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\r\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\r\n\t\t\t\t\t//     ...\r\n\t\t\t\t\t// while the glTF one is relative\r\n\t\t\t\t\t//   basePosition\r\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\r\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\r\n\t\t\t\t\t//     ...\r\n\t\t\t\t\t// then we need to convert from relative to absolute here.\r\n\r\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\r\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\r\n\r\n\t\t\t\t\t\tvar position = geometry.attributes.position;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\r\n\t\t\t\t\t\t\t\tj,\r\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\r\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\r\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasMorphNormal ) {\r\n\r\n\t\t\t\t\t// see target.POSITION's comment\r\n\r\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\r\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\r\n\r\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\r\n\t\t\t\t\t\t\t\tj,\r\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\r\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\r\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\r\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @param {THREE.Mesh} mesh\r\n\t * @param {GLTF.Mesh} meshDef\r\n\t */\r\n\tfunction updateMorphTargets( mesh, meshDef ) {\r\n\r\n\t\tmesh.updateMorphTargets();\r\n\r\n\t\tif ( meshDef.weights !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\r\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\r\n\r\n\t\t\tvar targetNames = meshDef.extras.targetNames;\r\n\r\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\r\n\r\n\t\t\t\tmesh.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction isPrimitiveEqual( a, b ) {\r\n\r\n\t\tvar dracoExtA = a.extensions ? a.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] : undefined;\r\n\t\tvar dracoExtB = b.extensions ? b.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] : undefined;\r\n\r\n\t\tif ( dracoExtA && dracoExtB ) {\r\n\r\n\t\t\tif ( dracoExtA.bufferView !== dracoExtB.bufferView ) return false;\r\n\r\n\t\t\treturn isObjectEqual( dracoExtA.attributes, dracoExtB.attributes );\r\n\r\n\t\t}\r\n\r\n\t\tif ( a.indices !== b.indices ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn isObjectEqual( a.attributes, b.attributes );\r\n\r\n\t}\r\n\r\n\tfunction isObjectEqual( a, b ) {\r\n\r\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\r\n\r\n\t\tfor ( var key in a ) {\r\n\r\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction isArrayEqual( a, b ) {\r\n\r\n\t\tif ( a.length !== b.length ) return false;\r\n\r\n\t\tfor ( var i = 0, il = a.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getCachedGeometry( cache, newPrimitive ) {\r\n\r\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar cached = cache[ i ];\r\n\r\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) return cached.promise;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction getCachedCombinedGeometry( cache, geometries ) {\r\n\r\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar cached = cache[ i ];\r\n\r\n\t\t\tif ( isArrayEqual( geometries, cached.baseGeometries ) ) return cached.geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction getCachedMultiPassGeometry( cache, geometry, primitives ) {\r\n\r\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar cached = cache[ i ];\r\n\r\n\t\t\tif ( geometry === cached.baseGeometry && isArrayEqual( primitives, cached.primitives ) ) return cached.geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction cloneBufferAttribute( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tvar count = attribute.count;\r\n\t\t\tvar itemSize = attribute.itemSize;\r\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\r\n\r\n\t\t\tfor ( var i = 0; i < count; ++ i ) {\r\n\r\n\t\t\t\tarray[ i ] = attribute.getX( i );\r\n\t\t\t\tif ( itemSize >= 2 ) array[ i + 1 ] = attribute.getY( i );\r\n\t\t\t\tif ( itemSize >= 3 ) array[ i + 2 ] = attribute.getZ( i );\r\n\t\t\t\tif ( itemSize >= 4 ) array[ i + 3 ] = attribute.getW( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\r\n\r\n\t\t}\r\n\r\n\t\treturn attribute.clone();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\r\n\t * Returns true if all primitives use the same attributes/morphAttributes/mode\r\n\t * and also have index. Otherwise returns false.\r\n\t *\r\n\t * @param {Array<GLTF.Primitive>} primitives\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isMultiPassGeometry( primitives ) {\r\n\r\n\t\tif ( primitives.length < 2 ) return false;\r\n\r\n\t\tvar primitive0 = primitives[ 0 ];\r\n\t\tvar targets0 = primitive0.targets || [];\r\n\r\n\t\tif ( primitive0.indices === undefined ) return false;\r\n\r\n\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar primitive = primitives[ i ];\r\n\r\n\t\t\tif ( primitive0.mode !== primitive.mode ) return false;\r\n\t\t\tif ( primitive.indices === undefined ) return false;\r\n\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) return false;\r\n\t\t\tif ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\r\n\r\n\t\t\tvar targets = primitive.targets || [];\r\n\r\n\t\t\tif ( targets0.length !== targets.length ) return false;\r\n\r\n\t\t\tfor ( var j = 0, jl = targets0.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tif ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/* GLTF PARSER */\r\n\r\n\tfunction GLTFParser( json, extensions, options ) {\r\n\r\n\t\tthis.json = json || {};\r\n\t\tthis.extensions = extensions || {};\r\n\t\tthis.options = options || {};\r\n\r\n\t\t// loader object cache\r\n\t\tthis.cache = new GLTFRegistry();\r\n\r\n\t\t// BufferGeometry caching\r\n\t\tthis.primitiveCache = [];\r\n\t\tthis.multiplePrimitivesCache = [];\r\n\t\tthis.multiPassGeometryCache = [];\r\n\r\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\r\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\r\n\r\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\r\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\r\n\r\n\t}\r\n\r\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\t// Clear the loader cache\r\n\t\tthis.cache.removeAll();\r\n\r\n\t\t// Mark the special nodes/meshes in json for efficient parse\r\n\t\tthis.markDefs();\r\n\r\n\t\t// Fire the callback on complete\r\n\t\tthis.getMultiDependencies( [\r\n\r\n\t\t\t'scene',\r\n\t\t\t'animation',\r\n\t\t\t'camera'\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar scenes = dependencies.scenes || [];\r\n\t\t\tvar scene = scenes[ json.scene || 0 ];\r\n\t\t\tvar animations = dependencies.animations || [];\r\n\t\t\tvar cameras = dependencies.cameras || [];\r\n\r\n\t\t\tonLoad( scene, scenes, cameras, animations, json );\r\n\r\n\t\t} ).catch( onError );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Marks the special nodes/meshes in json for efficient parse.\r\n\t */\r\n\tGLTFParser.prototype.markDefs = function () {\r\n\r\n\t\tvar nodeDefs = this.json.nodes || [];\r\n\t\tvar skinDefs = this.json.skins || [];\r\n\t\tvar meshDefs = this.json.meshes || [];\r\n\r\n\t\tvar meshReferences = {};\r\n\t\tvar meshUses = {};\r\n\r\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\r\n\t\t// Object3D. Use the skins' joint references to mark bones.\r\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\r\n\r\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\r\n\r\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n\t\t// avoid having more than one THREE.Mesh with the same name, count\r\n\t\t// references and rename instances below.\r\n\t\t//\r\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\r\n\r\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\r\n\r\n\t\t\tif ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\r\n\r\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\r\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\r\n\t\t\t\t// to mark SkinnedMesh if node has skin.\r\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\r\n\r\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.json.meshReferences = meshReferences;\r\n\t\tthis.json.meshUses = meshUses;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests the specified dependency asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @param {number} index\r\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\r\n\t */\r\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\r\n\r\n\t\tvar cacheKey = type + ':' + index;\r\n\t\tvar dependency = this.cache.get( cacheKey );\r\n\r\n\t\tif ( ! dependency ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'scene':\r\n\t\t\t\t\tdependency = this.loadScene( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'node':\r\n\t\t\t\t\tdependency = this.loadNode( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'mesh':\r\n\t\t\t\t\tdependency = this.loadMesh( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'accessor':\r\n\t\t\t\t\tdependency = this.loadAccessor( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bufferView':\r\n\t\t\t\t\tdependency = this.loadBufferView( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'buffer':\r\n\t\t\t\t\tdependency = this.loadBuffer( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'material':\r\n\t\t\t\t\tdependency = this.loadMaterial( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'texture':\r\n\t\t\t\t\tdependency = this.loadTexture( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'skin':\r\n\t\t\t\t\tdependency = this.loadSkin( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'animation':\r\n\t\t\t\t\tdependency = this.loadAnimation( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'camera':\r\n\t\t\t\t\tdependency = this.loadCamera( index );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'light':\r\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.add( cacheKey, dependency );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependency;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all dependencies of the specified type asynchronously, with caching.\r\n\t * @param {string} type\r\n\t * @return {Promise<Array<Object>>}\r\n\t */\r\n\tGLTFParser.prototype.getDependencies = function ( type ) {\r\n\r\n\t\tvar dependencies = this.cache.get( type );\r\n\r\n\t\tif ( ! dependencies ) {\r\n\r\n\t\t\tvar parser = this;\r\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\r\n\r\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\r\n\r\n\t\t\t\treturn parser.getDependency( type, index );\r\n\r\n\t\t\t} ) );\r\n\r\n\t\t\tthis.cache.add( type, dependencies );\r\n\r\n\t\t}\r\n\r\n\t\treturn dependencies;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n\t * @param {Array<string>} types\r\n\t * @return {Promise<Object<Array<Object>>>}\r\n\t */\r\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\r\n\r\n\t\tvar results = {};\r\n\t\tvar pending = [];\r\n\r\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar type = types[ i ];\r\n\t\t\tvar value = this.getDependencies( type );\r\n\r\n\t\t\t// TODO: Error-prone use of a callback inside a loop.\r\n\t\t\tvalue = value.then( function ( key, value ) {\r\n\r\n\t\t\t\tresults[ key ] = value;\r\n\r\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\r\n\r\n\t\t\tpending.push( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\treturn results;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\r\n\r\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\r\n\t\tvar loader = this.fileLoader;\r\n\r\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\t// If present, GLB container is required to be the first buffer.\r\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\r\n\r\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\r\n\r\n\t\t}\r\n\r\n\t\tvar options = this.options;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\r\n\r\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n\t * @param {number} bufferViewIndex\r\n\t * @return {Promise<ArrayBuffer>}\r\n\t */\r\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\r\n\r\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\r\n\r\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\r\n\r\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\r\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\r\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n\t * @param {number} accessorIndex\r\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n\t */\r\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\r\n\r\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\r\n\r\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\r\n\t\t\t// information about attributes coming from another source (e.g. Draco\r\n\t\t\t// compression extension).\r\n\t\t\treturn Promise.resolve( null );\r\n\r\n\t\t}\r\n\r\n\t\tvar pendingBufferViews = [];\r\n\r\n\t\tif ( accessorDef.bufferView !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpendingBufferViews.push( null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\r\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\r\n\r\n\t\t\tvar bufferView = bufferViews[ 0 ];\r\n\r\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\r\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n\t\t\tvar itemBytes = elementBytes * itemSize;\r\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\r\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\r\n\t\t\tvar normalized = accessorDef.normalized === true;\r\n\t\t\tvar array, bufferAttribute;\r\n\r\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\r\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\r\n\r\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\r\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\r\n\r\n\t\t\t\tif ( ! ib ) {\r\n\r\n\t\t\t\t\t// Use the full buffer if it's interleaved.\r\n\t\t\t\t\tarray = new TypedArray( bufferView );\r\n\r\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\r\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\r\n\r\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( bufferView === null ) {\r\n\r\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n\t\t\tif ( accessorDef.sparse !== undefined ) {\r\n\r\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\r\n\r\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\r\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\r\n\r\n\t\t\t\tif ( bufferView !== null ) {\r\n\r\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar index = sparseIndices[ i ];\r\n\r\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\r\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\r\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\r\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\r\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bufferAttribute;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n\t * @param {number} textureIndex\r\n\t * @return {Promise<THREE.Texture>}\r\n\t */\r\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar options = this.options;\r\n\t\tvar textureLoader = this.textureLoader;\r\n\r\n\t\tvar URL = window.URL || window.webkitURL;\r\n\r\n\t\tvar textureDef = json.textures[ textureIndex ];\r\n\r\n\t\tvar textureExtensions = textureDef.extensions || {};\r\n\r\n\t\tvar source;\r\n\r\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\r\n\r\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tsource = json.images[ textureDef.source ];\r\n\r\n\t\t}\r\n\r\n\t\tvar sourceURI = source.uri;\r\n\t\tvar isObjectURL = false;\r\n\r\n\t\tif ( source.bufferView !== undefined ) {\r\n\r\n\t\t\t// Load binary image data from bufferView, if provided.\r\n\r\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\r\n\r\n\t\t\t\tisObjectURL = true;\r\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\r\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\r\n\t\t\t\treturn sourceURI;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\r\n\r\n\t\t\t// Load Texture resource.\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\r\n\r\n\t\t\tif ( ! loader ) {\r\n\r\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\r\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\r\n\t\t\t\t\t: textureLoader;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} ).then( function ( texture ) {\r\n\r\n\t\t\t// Clean up resources and configure Texture.\r\n\r\n\t\t\tif ( isObjectURL === true ) {\r\n\r\n\t\t\t\tURL.revokeObjectURL( sourceURI );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.flipY = false;\r\n\r\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\r\n\r\n\t\t\t// Ignore unknown mime types, like DDS files.\r\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\r\n\r\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar samplers = json.samplers || {};\r\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\r\n\r\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\r\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\r\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Asynchronously assigns a texture to the given material parameters.\r\n\t * @param {Object} materialParams\r\n\t * @param {string} mapName\r\n\t * @param {Object} mapDef\r\n\t * @return {Promise}\r\n\t */\r\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\r\n\r\n\t\tvar parser = this;\r\n\r\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\r\n\r\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\r\n\r\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\r\n\r\n\t\t\t\tif ( transform ) {\r\n\r\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialParams[ mapName ] = texture;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n\t * @param {number} materialIndex\r\n\t * @return {Promise<THREE.Material>}\r\n\t */\r\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar materialDef = json.materials[ materialIndex ];\r\n\r\n\t\tvar materialType;\r\n\t\tvar materialParams = {};\r\n\t\tvar materialExtensions = materialDef.extensions || {};\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\r\n\r\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\r\n\r\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\r\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\r\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Specification:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\r\n\r\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\r\n\r\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\t\t\tmaterialParams.opacity = 1.0;\r\n\r\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\r\n\r\n\t\t\t\tmaterialParams.color.fromArray( array );\r\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\r\n\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\r\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.doubleSided === true ) {\r\n\r\n\t\t\tmaterialParams.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\r\n\r\n\t\t\tmaterialParams.transparent = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialParams.transparent = false;\r\n\r\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\r\n\r\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\r\n\r\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\r\n\r\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\r\n\r\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\tvar material;\r\n\r\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\r\n\r\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = new materialType( materialParams );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\r\n\r\n\t\t\t// Normal map textures use OpenGL conventions:\r\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\r\n\t\t\tif ( material.normalScale ) {\r\n\r\n\t\t\t\tmaterial.normalScale.y = - material.normalScale.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\r\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\r\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\r\n\r\n\t\t\tassignExtrasToUserData( material, materialDef );\r\n\r\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * @param {THREE.BufferGeometry} geometry\r\n\t * @param {GLTF.Primitive} primitiveDef\r\n\t * @param {GLTFParser} parser\r\n\t * @return {Promise<THREE.BufferGeometry>}\r\n\t */\r\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\r\n\r\n\t\tvar attributes = primitiveDef.attributes;\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\r\n\r\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\r\n\t\t\t\t.then( function ( accessor ) {\r\n\r\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var gltfAttributeName in attributes ) {\r\n\r\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\r\n\r\n\t\t\tif ( ! threeAttributeName ) continue;\r\n\r\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\r\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\r\n\r\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\r\n\r\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\r\n\r\n\t\t\t\tgeometry.setIndex( accessor );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tpending.push( accessor );\r\n\r\n\t\t}\r\n\r\n\t\tassignExtrasToUserData( geometry, primitiveDef );\r\n\r\n\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\treturn primitiveDef.targets !== undefined\r\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\r\n\t\t\t\t: geometry;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n\t *\r\n\t * Creates BufferGeometries from primitives.\r\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\r\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\r\n\t *\r\n\t * @param {Array<GLTF.Primitive>} primitives\r\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\r\n\t */\r\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar cache = this.primitiveCache;\r\n\r\n\t\tvar isMultiPass = isMultiPassGeometry( primitives );\r\n\t\tvar originalPrimitives;\r\n\r\n\t\tif ( isMultiPass ) {\r\n\r\n\t\t\toriginalPrimitives = primitives; // save original primitives and use later\r\n\r\n\t\t\t// We build a single BufferGeometry with .groups from multiple primitives\r\n\t\t\t// because all primitives share the same attributes/morph/mode and have indices.\r\n\r\n\t\t\tprimitives = [ primitives[ 0 ] ];\r\n\r\n\t\t\t// Sets .groups and combined indices to a geometry later in this method.\r\n\r\n\t\t}\r\n\r\n\t\tfunction createDracoPrimitive( primitive ) {\r\n\r\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\r\n\t\t\t\t.decodePrimitive( primitive, parser )\r\n\t\t\t\t.then( function ( geometry ) {\r\n\r\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar primitive = primitives[ i ];\r\n\r\n\t\t\t// See if we've already created this geometry\r\n\t\t\tvar cached = getCachedGeometry( cache, primitive );\r\n\r\n\t\t\tif ( cached ) {\r\n\r\n\t\t\t\t// Use the cached geometry if it exists\r\n\t\t\t\tpending.push( cached );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar geometryPromise;\r\n\r\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\r\n\r\n\t\t\t\t\t// Use DRACO geometry if available\r\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise create a new geometry\r\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Cache this geometry\r\n\t\t\t\tcache.push( { primitive: primitive, promise: geometryPromise } );\r\n\r\n\t\t\t\tpending.push( geometryPromise );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function ( geometries ) {\r\n\r\n\t\t\tif ( isMultiPass ) {\r\n\r\n\t\t\t\tvar baseGeometry = geometries[ 0 ];\r\n\r\n\t\t\t\t// See if we've already created this combined geometry\r\n\t\t\t\tvar cache = parser.multiPassGeometryCache;\r\n\t\t\t\tvar cached = getCachedMultiPassGeometry( cache, baseGeometry, originalPrimitives );\r\n\r\n\t\t\t\tif ( cached !== null ) return [ cached.geometry ];\r\n\r\n\t\t\t\t// Cloning geometry because of index override.\r\n\t\t\t\t// Attributes can be reused so cloning by myself here.\r\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\t\t\tgeometry.name = baseGeometry.name;\r\n\t\t\t\tgeometry.userData = baseGeometry.userData;\r\n\r\n\t\t\t\tfor ( var key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\r\n\t\t\t\tfor ( var key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\r\n\r\n\t\t\t\tvar pendingIndices = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tpendingIndices.push( parser.getDependency( 'accessor', originalPrimitives[ i ].indices ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all( pendingIndices ).then( function ( accessors ) {\r\n\r\n\t\t\t\t\tvar indices = [];\r\n\t\t\t\t\tvar offset = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar accessor = accessors[ i ];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\r\n\r\n\t\t\t\t\t\tgeometry.addGroup( offset, accessor.count, i );\r\n\r\n\t\t\t\t\t\toffset += accessor.count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.setIndex( indices );\r\n\r\n\t\t\t\t\tcache.push( { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives } );\r\n\r\n\t\t\t\t\treturn [ geometry ];\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else if ( geometries.length > 1 && THREE.BufferGeometryUtils !== undefined ) {\r\n\r\n\t\t\t\t// Tries to merge geometries with BufferGeometryUtils if possible\r\n\r\n\t\t\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t// can't merge if draw mode is different\r\n\t\t\t\t\tif ( primitives[ 0 ].mode !== primitives[ i ].mode ) return geometries;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// See if we've already created this combined geometry\r\n\t\t\t\tvar cache = parser.multiplePrimitivesCache;\r\n\t\t\t\tvar cached = getCachedCombinedGeometry( cache, geometries );\r\n\r\n\t\t\t\tif ( cached ) {\r\n\r\n\t\t\t\t\tif ( cached.geometry !== null ) return [ cached.geometry ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar geometry = THREE.BufferGeometryUtils.mergeBufferGeometries( geometries, true );\r\n\r\n\t\t\t\t\tcache.push( { geometry: geometry, baseGeometries: geometries } );\r\n\r\n\t\t\t\t\tif ( geometry !== null ) return [ geometry ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n\t * @param {number} meshIndex\r\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n\t */\r\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\r\n\r\n\t\tvar parser = this;\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\r\n\t\tvar meshDef = json.meshes[ meshIndex ];\r\n\t\tvar primitives = meshDef.primitives;\r\n\r\n\t\tvar pending = [];\r\n\r\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar material = primitives[ i ].material === undefined\r\n\t\t\t\t? createDefaultMaterial()\r\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\r\n\r\n\t\t\tpending.push( material );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\r\n\r\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\r\n\r\n\t\t\t\tvar isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\r\n\r\n\t\t\t\tvar meshes = [];\r\n\r\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometry = geometries[ i ];\r\n\t\t\t\t\tvar primitive = primitives[ i ];\r\n\r\n\t\t\t\t\t// 1. create Mesh\r\n\r\n\t\t\t\t\tvar mesh;\r\n\r\n\t\t\t\t\tvar material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\r\n\r\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n\t\t\t\t\t\tprimitive.mode === undefined ) {\r\n\r\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\r\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\r\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\r\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\r\n\r\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\r\n\r\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\r\n\r\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\r\n\r\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\r\n\r\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\r\n\r\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\r\n\r\n\t\t\t\t\tmeshes.push( mesh );\r\n\r\n\t\t\t\t\t// 2. update Material depending on Mesh and BufferGeometry\r\n\r\n\t\t\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\r\n\r\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\r\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\r\n\t\t\t\t\tvar useSkinning = mesh.isSkinnedMesh === true;\r\n\t\t\t\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\r\n\t\t\t\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = materials.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar material = materials[ j ];\r\n\r\n\t\t\t\t\t\tif ( mesh.isPoints ) {\r\n\r\n\t\t\t\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\r\n\r\n\t\t\t\t\t\t\tvar pointsMaterial = parser.cache.get( cacheKey );\r\n\r\n\t\t\t\t\t\t\tif ( ! pointsMaterial ) {\r\n\r\n\t\t\t\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\r\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\r\n\t\t\t\t\t\t\t\tpointsMaterial.color.copy( material.color );\r\n\t\t\t\t\t\t\t\tpointsMaterial.map = material.map;\r\n\t\t\t\t\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\r\n\r\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, pointsMaterial );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaterial = pointsMaterial;\r\n\r\n\t\t\t\t\t\t} else if ( mesh.isLine ) {\r\n\r\n\t\t\t\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\r\n\r\n\t\t\t\t\t\t\tvar lineMaterial = parser.cache.get( cacheKey );\r\n\r\n\t\t\t\t\t\t\tif ( ! lineMaterial ) {\r\n\r\n\t\t\t\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\r\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\r\n\t\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\r\n\t\t\t\t\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\r\n\r\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, lineMaterial );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaterial = lineMaterial;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Clone the material if it will be modified\r\n\t\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\r\n\r\n\t\t\t\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\r\n\r\n\t\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\r\n\t\t\t\t\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\r\n\t\t\t\t\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\r\n\t\t\t\t\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\r\n\t\t\t\t\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\r\n\t\t\t\t\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\r\n\r\n\t\t\t\t\t\t\tvar cachedMaterial = parser.cache.get( cacheKey );\r\n\r\n\t\t\t\t\t\t\tif ( ! cachedMaterial ) {\r\n\r\n\t\t\t\t\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\r\n\t\t\t\t\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\r\n\t\t\t\t\t\t\t\t\t: material.clone();\r\n\r\n\t\t\t\t\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\r\n\t\t\t\t\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\r\n\t\t\t\t\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\r\n\t\t\t\t\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\r\n\r\n\t\t\t\t\t\t\t\tparser.cache.add( cacheKey, cachedMaterial );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmaterial = cachedMaterial;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterials[ j ] = material;\r\n\r\n\t\t\t\t\t\t// workarounds for mesh and geometry\r\n\r\n\t\t\t\t\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\r\n\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\r\n\r\n\t\t\t\t\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\r\n\t\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmesh.material = isMultiMaterial ? materials : materials[ 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( meshes.length === 1 ) {\r\n\r\n\t\t\t\t\treturn meshes[ 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar group = new THREE.Group();\r\n\r\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tgroup.add( meshes[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn group;\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n\t * @param {number} cameraIndex\r\n\t * @return {Promise<THREE.Camera>}\r\n\t */\r\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\r\n\r\n\t\tvar camera;\r\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\r\n\t\tvar params = cameraDef[ cameraDef.type ];\r\n\r\n\t\tif ( ! params ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.type === 'perspective' ) {\r\n\r\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\r\n\r\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\r\n\r\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\r\n\r\n\t\tassignExtrasToUserData( camera, cameraDef );\r\n\r\n\t\treturn Promise.resolve( camera );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n\t * @param {number} skinIndex\r\n\t * @return {Promise<Object>}\r\n\t */\r\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\r\n\r\n\t\tvar skinDef = this.json.skins[ skinIndex ];\r\n\r\n\t\tvar skinEntry = { joints: skinDef.joints };\r\n\r\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\r\n\r\n\t\t\treturn Promise.resolve( skinEntry );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\r\n\r\n\t\t\tskinEntry.inverseBindMatrices = accessor;\r\n\r\n\t\t\treturn skinEntry;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n\t * @param {number} animationIndex\r\n\t * @return {Promise<THREE.AnimationClip>}\r\n\t */\r\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\r\n\t\tvar animationDef = json.animations[ animationIndex ];\r\n\r\n\t\tvar pendingNodes = [];\r\n\t\tvar pendingInputAccessors = [];\r\n\t\tvar pendingOutputAccessors = [];\r\n\t\tvar pendingSamplers = [];\r\n\t\tvar pendingTargets = [];\r\n\r\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar channel = animationDef.channels[ i ];\r\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\r\n\t\t\tvar target = channel.target;\r\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\r\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\r\n\r\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\r\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\r\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\r\n\t\t\tpendingSamplers.push( sampler );\r\n\t\t\tpendingTargets.push( target );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( [\r\n\r\n\t\t\tPromise.all( pendingNodes ),\r\n\t\t\tPromise.all( pendingInputAccessors ),\r\n\t\t\tPromise.all( pendingOutputAccessors ),\r\n\t\t\tPromise.all( pendingSamplers ),\r\n\t\t\tPromise.all( pendingTargets )\r\n\r\n\t\t] ).then( function ( dependencies ) {\r\n\r\n\t\t\tvar nodes = dependencies[ 0 ];\r\n\t\t\tvar inputAccessors = dependencies[ 1 ];\r\n\t\t\tvar outputAccessors = dependencies[ 2 ];\r\n\t\t\tvar samplers = dependencies[ 3 ];\r\n\t\t\tvar targets = dependencies[ 4 ];\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar node = nodes[ i ];\r\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\r\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\r\n\t\t\t\tvar sampler = samplers[ i ];\r\n\t\t\t\tvar target = targets[ i ];\r\n\r\n\t\t\t\tif ( node === undefined ) continue;\r\n\r\n\t\t\t\tnode.updateMatrix();\r\n\t\t\t\tnode.matrixAutoUpdate = true;\r\n\r\n\t\t\t\tvar TypedKeyframeTrack;\r\n\r\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\r\n\r\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\r\n\r\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\r\n\r\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase PATH_PROPERTIES.position:\r\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\r\n\r\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n\t\t\t\tvar targetNames = [];\r\n\r\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\r\n\r\n\t\t\t\t\t// node can be THREE.Group here but\r\n\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n\t\t\t\t\t// the property of a mesh object under group.\r\n\r\n\t\t\t\t\tnode.traverse( function ( object ) {\r\n\r\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\r\n\r\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttargetNames.push( targetName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\r\n\t\t\t\t// be reused by other tracks, make copies here.\r\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\r\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\r\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n\t\t\t\t\t\tinterpolation\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Here is the trick to enable custom interpolation.\r\n\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\r\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\r\n\r\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\r\n\r\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\r\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\r\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\r\n\r\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\r\n\t\t\t\t\t\t// track.getInterpolation() doesn't return valid value for custom interpolant.\r\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( track );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n\t * @param {number} nodeIndex\r\n\t * @return {Promise<THREE.Object3D>}\r\n\t */\r\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\r\n\r\n\t\tvar json = this.json;\r\n\t\tvar extensions = this.extensions;\r\n\t\tvar parser = this;\r\n\r\n\t\tvar meshReferences = json.meshReferences;\r\n\t\tvar meshUses = json.meshUses;\r\n\r\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\r\n\r\n\t\treturn new Promise( function ( resolve ) {\r\n\r\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\r\n\t\t\tif ( nodeDef.isBone === true ) {\r\n\r\n\t\t\t\tresolve( new THREE.Bone() );\r\n\r\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\r\n\r\n\t\t\t\tparser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\r\n\r\n\t\t\t\t\tvar node;\r\n\r\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\r\n\r\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\r\n\r\n\t\t\t\t\t\tnode = mesh.clone();\r\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\r\n\r\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\r\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\r\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tnode = mesh;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve( node );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\r\n\r\n\t\t\t\tparser.getDependency( 'camera', nodeDef.camera ).then( resolve );\r\n\r\n\t\t\t} else if ( nodeDef.extensions\r\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\r\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\r\n\r\n\t\t\t\tparser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ).then( resolve );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresolve( new THREE.Object3D() );\r\n\r\n\t\t\t}\r\n\r\n\t\t} ).then( function ( node ) {\r\n\r\n\t\t\tif ( nodeDef.name !== undefined ) {\r\n\r\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tassignExtrasToUserData( node, nodeDef );\r\n\r\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\r\n\r\n\t\t\tif ( nodeDef.matrix !== undefined ) {\r\n\r\n\t\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\r\n\t\t\t\tnode.applyMatrix( matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\r\n\r\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\r\n\r\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n\t * @param {number} sceneIndex\r\n\t * @return {Promise<THREE.Scene>}\r\n\t */\r\n\tGLTFParser.prototype.loadScene = function () {\r\n\r\n\t\t// scene node hierachy builder\r\n\r\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\r\n\r\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\r\n\r\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\r\n\r\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\r\n\r\n\t\t\t\t// build skeleton here as well\r\n\r\n\t\t\t\tvar skinEntry;\r\n\r\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\r\n\r\n\t\t\t\t\tskinEntry = skin;\r\n\r\n\t\t\t\t\tvar pendingJoints = [];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn Promise.all( pendingJoints );\r\n\r\n\t\t\t\t} ).then( function ( jointNodes ) {\r\n\r\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar mesh = meshes[ i ];\r\n\r\n\t\t\t\t\t\tvar bones = [];\r\n\t\t\t\t\t\tvar boneInverses = [];\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( jointNode ) {\r\n\r\n\t\t\t\t\t\t\t\tbones.push( jointNode );\r\n\r\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\r\n\r\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\treturn node;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} ).then( function ( node ) {\r\n\r\n\t\t\t\t// build node hierachy\r\n\r\n\t\t\t\tparentObject.add( node );\r\n\r\n\t\t\t\tvar pending = [];\r\n\r\n\t\t\t\tif ( nodeDef.children ) {\r\n\r\n\t\t\t\t\tvar children = nodeDef.children;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar child = children[ i ];\r\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn Promise.all( pending );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn function loadScene( sceneIndex ) {\r\n\r\n\t\t\tvar json = this.json;\r\n\t\t\tvar extensions = this.extensions;\r\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\r\n\t\t\tvar parser = this;\r\n\r\n\t\t\tvar scene = new THREE.Scene();\r\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\r\n\r\n\t\t\tassignExtrasToUserData( scene, sceneDef );\r\n\r\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\r\n\r\n\t\t\tvar nodeIds = sceneDef.nodes || [];\r\n\r\n\t\t\tvar pending = [];\r\n\r\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Promise.all( pending ).then( function () {\r\n\r\n\t\t\t\treturn scene;\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\treturn GLTFLoader;\r\n\r\n} )();\r\n"]}