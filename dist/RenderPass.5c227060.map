{"version":3,"sources":["js/postprocessing/RenderPass.js"],"names":["THREE","RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","Pass","call","undefined","clear","clearDepth","needsSwap","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","delta","maskActive","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","setClearColor","renderToScreen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAIAA,KAAK,CAACC,UAAN,GAAmB,UAAWC,KAAX,EAAkBC,MAAlB,EAA0BC,gBAA1B,EAA4CC,UAA5C,EAAwDC,UAAxD,EAAqE;AAEvFN,EAAAA,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAiB,IAAjB;AAEA,OAAKN,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AAEA,OAAKC,gBAAL,GAAwBA,gBAAxB;AAEA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,UAAL,GAAoBA,UAAU,KAAKG,SAAjB,GAA+BH,UAA/B,GAA4C,CAA9D;AAEA,OAAKI,KAAL,GAAa,IAAb;AACA,OAAKC,UAAL,GAAkB,KAAlB;AACA,OAAKC,SAAL,GAAiB,KAAjB;AAEA,CAhBD;;AAkBAZ,KAAK,CAACC,UAAN,CAAiBY,SAAjB,GAA6BC,MAAM,CAACC,MAAP,CAAeD,MAAM,CAACE,MAAP,CAAehB,KAAK,CAACO,IAAN,CAAWM,SAA1B,CAAf,EAAsD;AAElFI,EAAAA,WAAW,EAAEjB,KAAK,CAACC,UAF+D;AAIlFiB,EAAAA,MAAM,EAAE,gBAAWC,QAAX,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAqDC,UAArD,EAAkE;AAEzE,QAAIC,YAAY,GAAGL,QAAQ,CAACM,SAA5B;AACAN,IAAAA,QAAQ,CAACM,SAAT,GAAqB,KAArB;AAEA,SAAKvB,KAAL,CAAWE,gBAAX,GAA8B,KAAKA,gBAAnC;AAEA,QAAIsB,aAAJ,EAAmBC,aAAnB;;AAEA,QAAK,KAAKtB,UAAV,EAAuB;AAEtBqB,MAAAA,aAAa,GAAGP,QAAQ,CAACS,aAAT,GAAyBC,MAAzB,EAAhB;AACAF,MAAAA,aAAa,GAAGR,QAAQ,CAACW,aAAT,EAAhB;AAEAX,MAAAA,QAAQ,CAACY,aAAT,CAAwB,KAAK1B,UAA7B,EAAyC,KAAKC,UAA9C;AAEA;;AAED,QAAK,KAAKK,UAAV,EAAuB;AAEtBQ,MAAAA,QAAQ,CAACR,UAAT;AAEA;;AAEDQ,IAAAA,QAAQ,CAACD,MAAT,CAAiB,KAAKhB,KAAtB,EAA6B,KAAKC,MAAlC,EAA0C,KAAK6B,cAAL,GAAsB,IAAtB,GAA6BX,UAAvE,EAAmF,KAAKX,KAAxF;;AAEA,QAAK,KAAKL,UAAV,EAAuB;AAEtBc,MAAAA,QAAQ,CAACY,aAAT,CAAwBL,aAAxB,EAAuCC,aAAvC;AAEA;;AAED,SAAKzB,KAAL,CAAWE,gBAAX,GAA8B,IAA9B;AACAe,IAAAA,QAAQ,CAACM,SAAT,GAAqBD,YAArB;AACA;AAtCiF,CAAtD,CAA7B","file":"RenderPass.5c227060.map","sourceRoot":"..","sourcesContent":["/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\r\n\r\n\tTHREE.Pass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.overrideMaterial = overrideMaterial;\r\n\r\n\tthis.clearColor = clearColor;\r\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\r\n\r\n\tthis.clear = true;\r\n\tthis.clearDepth = false;\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\r\n\r\n\tconstructor: THREE.RenderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\r\n\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\r\n\t\tvar oldClearColor, oldClearAlpha;\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\toldClearColor = renderer.getClearColor().getHex();\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\r\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearDepth ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.render( this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear );\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tthis.scene.overrideMaterial = null;\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\t}\r\n\r\n} );\r\n"]}