{"version":3,"sources":["js/shaders/LuminosityHighPassShader.js"],"names":["THREE","LuminosityHighPassShader","shaderID","uniforms","type","value","Color","vertexShader","join","fragmentShader"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAOAA,KAAK,CAACC,wBAAN,GAAiC;AAE/BC,EAAAA,QAAQ,EAAE,oBAFqB;AAIhCC,EAAAA,QAAQ,EAAE;AAET,gBAAY;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAFH;AAGT,2BAAuB;AAAED,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAHd;AAIT,mBAAe;AAAED,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAJN;AAKT,oBAAgB;AAAED,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE,IAAIL,KAAK,CAACM,KAAV,CAAiB,QAAjB;AAApB,KALP;AAMT,sBAAmB;AAAEF,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,KAAK,EAAE;AAApB;AANV,GAJsB;AAchCE,EAAAA,YAAY,EAAE,CAEb,mBAFa,EAIb,eAJa,EAMZ,WANY,EAQZ,2EARY,EAUb,GAVa,EAYZC,IAZY,CAYP,IAZO,CAdkB;AA4BhCC,EAAAA,cAAc,EAAE,CAEf,6BAFe,EAGf,4BAHe,EAIf,+BAJe,EAKf,oCALe,EAMf,4BANe,EAQf,mBARe,EAUf,eAVe,EAYd,0CAZc,EAcd,0CAdc,EAgBd,mCAhBc,EAkBd,8DAlBc,EAoBd,wFApBc,EAsBd,kDAtBc,EAwBf,GAxBe,EA0BdD,IA1Bc,CA0BT,IA1BS;AA5BgB,CAAjC","file":"LuminosityHighPassShader.707a5f1d.map","sourceRoot":"..","sourcesContent":["/**\r\n * @author bhouston / http://clara.io/\r\n *\r\n * Luminosity\r\n * http://en.wikipedia.org/wiki/Luminosity\r\n */\r\n\r\nTHREE.LuminosityHighPassShader = {\r\n\r\n  shaderID: \"luminosityHighPass\",\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { type: \"t\", value: null },\r\n\t\t\"luminosityThreshold\": { type: \"f\", value: 1.0 },\r\n\t\t\"smoothWidth\": { type: \"f\", value: 1.0 },\r\n\t\t\"defaultColor\": { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\"defaultOpacity\":  { type: \"f\", value: 0.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vUv = uv;\",\r\n\r\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join(\"\\n\"),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform vec3 defaultColor;\",\r\n\t\t\"uniform float defaultOpacity;\",\r\n\t\t\"uniform float luminosityThreshold;\",\r\n\t\t\"uniform float smoothWidth;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\r\n\r\n\t\t\t\"float v = dot( texel.xyz, luma );\",\r\n\r\n\t\t\t\"vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\r\n\r\n\t\t\t\"float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\r\n\r\n\t\t\t\"gl_FragColor = mix( outputColor, texel, alpha );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join(\"\\n\")\r\n\r\n};\r\n"]}