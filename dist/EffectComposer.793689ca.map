{"version":3,"sources":["js/postprocessing/EffectComposer.js"],"names":["THREE","EffectComposer","renderer","renderTarget","undefined","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getDrawingBufferSize","WebGLRenderTarget","width","height","texture","name","renderTarget1","renderTarget2","clone","writeBuffer","readBuffer","passes","CopyShader","console","error","ShaderPass","copyPass","Object","assign","prototype","swapBuffers","tmp","addPass","pass","push","setSize","insertPass","index","splice","render","delta","maskActive","i","il","length","enabled","needsSwap","context","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","reset","dispose","Pass","clear","renderToScreen"],"mappings":"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","file":"EffectComposer.793689ca.map","sourceRoot":"..","sourcesContent":["/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\r\n\r\n\tthis.renderer = renderer;\r\n\r\n\tif ( renderTarget === undefined ) {\r\n\r\n\t\tvar parameters = {\r\n\t\t\tminFilter: THREE.LinearFilter,\r\n\t\t\tmagFilter: THREE.LinearFilter,\r\n\t\t\tformat: THREE.RGBAFormat,\r\n\t\t\tstencilBuffer: false\r\n\t\t};\r\n\r\n\t\tvar size = renderer.getDrawingBufferSize();\r\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\r\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t}\r\n\r\n\tthis.renderTarget1 = renderTarget;\r\n\tthis.renderTarget2 = renderTarget.clone();\r\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\r\n\tthis.writeBuffer = this.renderTarget1;\r\n\tthis.readBuffer = this.renderTarget2;\r\n\r\n\tthis.passes = [];\r\n\r\n\t// dependencies\r\n\r\n\tif ( THREE.CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.CopyShader' );\r\n\r\n\t}\r\n\r\n\tif ( THREE.ShaderPass === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on THREE.ShaderPass' );\r\n\r\n\t}\r\n\r\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\r\n\r\n};\r\n\r\nObject.assign( THREE.EffectComposer.prototype, {\r\n\r\n\tswapBuffers: function () {\r\n\r\n\t\tvar tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t},\r\n\r\n\taddPass: function ( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\r\n\t\tvar size = this.renderer.getDrawingBufferSize();\r\n\t\tpass.setSize( size.width, size.height );\r\n\r\n\t},\r\n\r\n\tinsertPass: function ( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\r\n\t},\r\n\r\n\trender: function ( delta ) {\r\n\r\n\t\tvar maskActive = false;\r\n\r\n\t\tvar pass, i, il = this.passes.length;\r\n\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tpass = this.passes[ i ];\r\n\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tvar context = this.renderer.context;\r\n\r\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\r\n\r\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( THREE.MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\treset: function ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tvar size = this.renderer.getDrawingBufferSize();\r\n\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( size.width, size.height );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis.renderTarget1.setSize( width, height );\r\n\t\tthis.renderTarget2.setSize( width, height );\r\n\r\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( width, height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nTHREE.Pass = function () {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen\r\n\tthis.renderToScreen = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.Pass.prototype, {\r\n\r\n\tsetSize: function ( width, height ) {},\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n"]}